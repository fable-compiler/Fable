import { IDisposable, IEqualityComparer, IComparer } from "./Util.js";
import { Option } from "./Option.js";
import { StringBuilder } from "./System.Text.js";
export declare const LanguagePrimitives_GenericEqualityComparer: any;
export declare const LanguagePrimitives_GenericEqualityERComparer: any;
export declare function LanguagePrimitives_FastGenericComparer<T>(): IComparer<T>;
export declare function LanguagePrimitives_FastGenericComparerFromTable<T>(): IComparer<T>;
export declare function LanguagePrimitives_FastGenericEqualityComparer<T>(): IEqualityComparer<T>;
export declare function LanguagePrimitives_FastGenericEqualityComparerFromTable<T>(): IEqualityComparer<T>;
export declare function Operators_Failure(message: string): Error;
export declare function Operators_FailurePattern(exn: Error): Option<string>;
export declare function Operators_NullArg<$a>(x: string): $a;
export declare function Operators_Using<T extends IDisposable, R>(resource: T, action: ((arg0: T) => R)): R;
export declare function Operators_Lock<$a, $b>(_lockObj: $a, action: (() => $b)): $b;
export declare function ExtraTopLevelOperators_LazyPattern<$a>(input: any): $a;
export declare function PrintfModule_PrintFormatToStringBuilderThen<$a, $b>(continuation: (() => $a), builder: StringBuilder, format: any): $b;
export declare function PrintfModule_PrintFormatToStringBuilder<$a>(builder: StringBuilder, format: any): $a;
