{
  "private": true,
  "type": "module",
  "scripts": {
    "clean": "git clean -fdX",

    "prebuild-cli": "npm run clean && npm run prebuild-lib && npm run build-lib-cli",
    "build-cli": "dotnet run -c Release -p ../../../Fable.Cli -- bench-compiler.fsproj --outDir out-node --fableLib out-lib",
    "build-lib-cli": "dotnet run -c Release -p ../../../Fable.Cli -- ../../../fable-library/Fable.Library.fsproj -o out-lib --fableLib out-lib",
    "postbuild-cli": "npm run rollup-bundle",

    "prebuild": "npm run clean && npm run build-lib",
    "build": "dotnet run -c Release bench-compiler.fsproj out-node --fableLib out-lib",
    "build-opt": "npm run build --optimize",
    "postbuild": "npm run rollup-bundle",

    "build-node": "node --stack_size=1200 dist/bundle.js bench-compiler.fsproj out-node2 --fableLib out-lib",
    "build-node-es": "node --stack_size=1200 out-node/app.js bench-compiler.fsproj out-node2 --fableLib out-lib",
    "benchmark": "node dist/bundle.js bench-compiler.fsproj out-node2 --benchmark",
    "benchmark-es": "node out-node/app.js bench-compiler.fsproj out-node2 --benchmark",

    "compile-native": "dotnet publish -c Release -r win-x64",
    "native": "cd . && \"bin/Release/net5.0/win-x64/native/bench-compiler\"",
    "build-native": "npm run native bench-compiler.fsproj out-node",
    "build-test-native": "npm run native ../../../../../fable-test/fable-test.fsproj out-test",
    "build-tests-native": "npm run native ../../../../tests/Main/Fable.Tests.fsproj out-tests",

    "rollup-bundle": "npm run rollup -- out-node/app.js -o dist/bundle.js --format esm",
    "terser-bundle": "npm run terser -- dist/bundle.js -o dist/bundle.min.js --mangle --compress",
    "webpack-bundle": "npm run webpack -- -p --entry ./out-node/app.js --output ./dist/bundle.min.js --target node",

    "prebuild-lib": "npm run tsc -- -p ../../../fable-library --outDir ./out-lib",
    "prebuild-lib-ts": "mkdir -p out-lib-ts && cp -R ../../../fable-library/*.ts out-lib-ts",
    "build-lib": "dotnet run -c Release ../../../fable-library/Fable.Library.fsproj out-lib --fableLib out-lib --sourceMaps",
    "build-lib-ts": "dotnet run -c Release ../../../fable-library/Fable.Library.fsproj out-lib-ts --fableLib out-lib-ts --typescript",
    "tsc-lib-init": "npm run tsc -- --init --target es2020 --module es2020 --allowJs",
    "tsc-lib": "npm run tsc -- -p ./out-lib-ts --outDir ./out-lib-js",

    "prebuild-test": "npm run clean && npm run build-lib",
    "build-test": "dotnet run -c Release ../../../../../fable-test/fable-test.fsproj out-test --fableLib out-lib --sourceMaps",
    "build-test-ts": "npm run build-test -- --fableLib out-lib-ts --typescript",
    "build-test-opt": "npm run build-test -- --optimize",
    "build-test-node": "node out-node/app.js ../../../../../fable-test/fable-test.fsproj out-test --fableLib out-lib --sourceMaps",
    "build-test-node-ts": "npm run build-test-node --typescript",
    "test": "node ./out-test/src/test.js",

    "prebuild-tests": "npm run clean && npm run build-lib",
    "prebuild-tests-ts": "npm run clean && npm run build-lib-ts",
    "build-tests": "dotnet run -c Release ../../../../tests/Main/Fable.Tests.fsproj out-tests --fableLib out-lib --sourceMaps",
    "build-tests-ts": "npm run build-tests -- --fableLib out-lib-ts --typescript",
    "build-tests-opt": "npm run build-tests -- --optimize",
    "build-tests-node": "node out-node/app.js ../../../../tests/Main/Fable.Tests.fsproj out-tests --fableLib out-lib --sourceMaps",
    "tests": "npm run mocha -- out-tests -r esm --colors --reporter dot",

    "prebuild-erased": "npm run clean && npm run build-lib -- --eraseTypes",
    "build-erased": "dotnet run -c Release bench-compiler.fsproj out-node --fableLib out-lib --eraseTypes",
    "postbuild-erased": "npm run rollup-bundle",

    "prebuild-test-erased": "npm run clean && npm run build-lib -- --eraseTypes",
    "build-test-erased": "dotnet run -c Release ../../../../../fable-test/fable-test.fsproj out-test --fableLib out-lib --eraseTypes",

    "prebuild-tests-erased": "npm run clean && npm run build-lib -- --eraseTypes",
    "build-tests-erased": "dotnet run -c Release ../../../../tests/Main/Fable.Tests.fsproj out-tests --fableLib out-lib --eraseTypes",

    "tsc": "node ../../../../node_modules/typescript/bin/tsc",
    "babel": "node ../../../../node_modules/@babel/cli/bin/babel",
    "mocha": "node ../../../../node_modules/mocha/bin/mocha",
    "rollup": "node ../../../../node_modules/rollup/dist/bin/rollup",
    "terser": "node ../../../../node_modules/terser/bin/terser",
    "webpack": "node ../../../../node_modules/webpack-cli/bin/cli.js",
    "splitter": "node ../../../../node_modules/fable-splitter/dist/cli",

    "perf": "perf record -q -e cpu-clock -F 99 -g -- node --perf-basic-prof --interpreted-frames-native-stack dist/bundle.js bench-compiler.fsproj out-node2 --benchmark",
    "perf-es": "perf record -q -e cpu-clock -F 99 -g -- node --perf-basic-prof --interpreted-frames-native-stack ./out-node/app.js bench-compiler.fsproj out-node2 --benchmark",
    "perf-report": "perf report -n --stdio -g srcline -s dso,sym,srcline --inline > perf-report.log",
    "profile": "node --prof out-node/app.js bench-compiler.fsproj out-node2 --benchmark",
    "cpu-prof": "node --cpu-prof --cpu-prof-dir=out-prof out-node/app.js bench-compiler.fsproj out-node2 --benchmark",
    "heap-prof": "node --heap-prof out-node/app.js bench-compiler.fsproj out-node2 --benchmark",
    "prof-process": "node --prof-process isolate-*.log > profile.log",
    "prof-preprocess": "node --prof-process --preprocess isolate-*.log > profile.v8log.json",
    "speedscope": "speedscope profile.v8log.json",
    "flamegraph": "perf script | ../../../../../FlameGraph/stackcollapse-perf.pl | ../../../../../FlameGraph/flamegraph.pl > perf.svg",
    "trace": "node --trace-deopt out-node/app.js bench-compiler.fsproj out-node2 > deopt.log"
  }
}
