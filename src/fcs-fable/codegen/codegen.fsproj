<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <ArtifactsDir Condition="'$(ArtifactsDir)' == ''">artifacts</ArtifactsDir>
    <FSharpSourcesRoot>$(MSBuildProjectDirectory)/../../../src/Compiler</FSharpSourcesRoot>
  </PropertyGroup>
  <Import Project="../../../buildtools/buildtools.targets" />
  <!-- <Import Project="fssrgen.targets" /> -->
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
    <!-- <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference> -->
  </PropertyGroup>
  <ItemGroup>
    <!-- <FsSrGen Include="$(FSharpSourcesRoot)/FSComp.txt">
      <Link>FSComp.txt</Link>
    </FsSrGen>
    <FsSrGen Include="$(FSharpSourcesRoot)/Interactive/FSIstrings.txt">
      <Link>FSIstrings.txt</Link>
    </FsSrGen> -->
    <FsLex Include="$(FSharpSourcesRoot)/AbstractIL/illex.fsl">
      <OtherFlags>--module FSharp.Compiler.AbstractIL.AsciiLexer --internal --open Internal.Utilities.Text.Lexing --open FSharp.Compiler.AbstractIL.AsciiParser --unicode --lexlib Internal.Utilities.Text.Lexing</OtherFlags>
      <Link>AbstractIL/illex.fsl</Link>
    </FsLex>
    <FsYacc Include="$(FSharpSourcesRoot)/AbstractIL/ilpars.fsy">
      <OtherFlags>--module FSharp.Compiler.AbstractIL.AsciiParser --open FSharp.Compiler.AbstractIL.AsciiConstants --open FSharp.Compiler.AbstractIL.IL --internal --lexlib Internal.Utilities.Text.Lexing --parslib Internal.Utilities.Text.Parsing --buffer-type-argument char</OtherFlags>
      <Link>AbstractIL/ilpars.fsy</Link>
    </FsYacc>
    <FsLex Include="$(FSharpSourcesRoot)/pplex.fsl">
      <OtherFlags>--module FSharp.Compiler.PPLexer --internal --open FSharp.Compiler.Lexhelp --open Internal.Utilities.Text.Lexing --open FSharp.Compiler.PPParser --unicode --lexlib Internal.Utilities.Text.Lexing</OtherFlags>
      <Link>SyntaxTree/pplex.fsl</Link>
    </FsLex>
    <FsYacc Include="$(FSharpSourcesRoot)/pppars.fsy">
      <OtherFlags>--module FSharp.Compiler.PPParser --open FSharp.Compiler.ParseHelpers --internal --lexlib Internal.Utilities.Text.Lexing --parslib Internal.Utilities.Text.Parsing --buffer-type-argument char</OtherFlags>
      <Link>SyntaxTree/pppars.fsy</Link>
    </FsYacc>
    <FsLex Include="$(FSharpSourcesRoot)/lex.fsl">
      <OtherFlags>--module FSharp.Compiler.Lexer --open FSharp.Compiler.Lexhelp --open Internal.Utilities.Text.Lexing --open FSharp.Compiler.Parser --open FSharp.Compiler.Text --open FSharp.Compiler.ParseHelpers --internal --unicode --lexlib Internal.Utilities.Text.Lexing</OtherFlags>
      <Link>SyntaxTree/lex.fsl</Link>
    </FsLex>
    <FsYacc Include="$(FSharpSourcesRoot)/pars.fsy">
      <OtherFlags>--module FSharp.Compiler.Parser --open FSharp.Compiler --open FSharp.Compiler.Syntax --open FSharp.Compiler.Text --internal --lexlib Internal.Utilities.Text.Lexing --parslib Internal.Utilities.Text.Parsing --buffer-type-argument char</OtherFlags>
      <Link>SyntaxTree/pars.fsy</Link>
    </FsYacc>
    <Compile Include="fssrgen.fsx" />
  </ItemGroup>

  <ItemGroup>
    <!-- <PackageReference Include="FSharp.Core" Version="8.0.0" /> -->
    <!-- <Reference Include="../../../artifacts/bin/FSharp.Compiler.Service/Release/netstandard2.0/FSharp.Core.dll" /> -->
  </ItemGroup>

</Project>