// Implementation file for parser generated by fsyacc
module internal FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
//# 3 "src/fsharp/pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open System

open Internal.Utilities
open Internal.Utilities.Text.Parsing
open Internal.Utilities.Library
open Internal.Utilities.Library.Extras

open FSharp.Compiler
open FSharp.Compiler.AbstractIL
open FSharp.Compiler.AbstractIL
open FSharp.Compiler.ErrorLogger
open FSharp.Compiler.Features
open FSharp.Compiler.ParseHelpers
open FSharp.Compiler.Syntax
open FSharp.Compiler.Syntax.PrettyNaming
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.Text
open FSharp.Compiler.Text.Position
open FSharp.Compiler.Text.Range
open FSharp.Compiler.Xml

#if DEBUG
let debugPrint s =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint s = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError (e, e.Range)

let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, mEquals, value) l acc = 
        match l with
        | [] -> List.rev (SynExprRecordField(name, mEquals, value, lastSep) :: acc)
        | (f, m) :: xs -> run f xs (SynExprRecordField(name, mEquals, value, m) :: acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false

let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis, strict, expr, m) = 
    match vis with
    | Some vis -> errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations (vis.ToString()), m))
    | None -> ()
    SynBinding(None,
             (if strict then SynBindingKind.Do else SynBindingKind.StandaloneExpression),
             false, false, [], PreXmlDoc.Empty, SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit, m) else SynPat.Wild m),
             None, None, expr, m, DebugPointAtBinding.NoneAtDo)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then DebugPointAtBinding.NoneAtDo else DebugPointAtBinding.Yes e.Range
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p, attrs, p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s, m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

/// Report a good error at the end of file, e.g. for non-terminated strings
let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_, _, _, m) ->
      reportParseErrorAt m (FSComp.SR.parsEofInHashIf())

  | LexCont.String (_, _, LexerStringStyle.SingleQuote, kind, m) -> 
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInString())

  | LexCont.String (_, _, LexerStringStyle.TripleQuote, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedTripleQuoteString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())

  | LexCont.String (_, _, LexerStringStyle.Verbatim, kind, m) ->
     if kind.IsInterpolated then
         reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedVerbatimString())
     else
         reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())

  | LexCont.Comment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.SingleLineComment (_, _, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.SingleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.Verbatim, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())

  | LexCont.StringInComment (_, _, LexerStringStyle.TripleQuote, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())

  | LexCont.MLOnly (_, _, m) ->
     reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())

  | LexCont.EndLine(_, _, LexerEndlineContinuation.Skip(_, m)) ->
     reportParseErrorAt m (FSComp.SR.parsEofInDirective())

  | LexCont.EndLine(endifs, nesting, LexerEndlineContinuation.Token)
  | LexCont.Token(endifs, nesting) -> 
      match endifs with 
      | [] -> ()
      | (_, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())
      match nesting with 
      | [] -> ()
      | (_, _, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsEofInInterpolatedStringFill())

type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic, initialRangeOpt, attrs, vis, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, bindingSetRange)) = 
   let ignoredFreeAttrs, decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
       // decls could have a leading attribute
       |> fun m -> (m, decls) ||> unionRangeWithListBy (fun (SynBinding(range = m)) -> m)
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(), wholeRange))
   SynMemberDefn.LetBindings (decls, isStatic, isRec, wholeRange)

let mkLocalBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _), body) = 
   let ignoredFreeAttrs, decls = declsPreAttrs [] None 
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), mWhole))
   SynExpr.LetOrUse (isRec, isUse, decls, body, mWhole) 

let mkDefnBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _bindingSetRange), attrs, vis, attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(), mWhole))
    let freeAttrs, decls = declsPreAttrs attrs vis
    // decls might have an extended range due to leading attributes
    let mWhole = (mWhole, decls) ||> unionRangeWithListBy (fun (SynBinding(range = m)) -> m)
    let letDecls = [ SynModuleDecl.Let (isRec, decls, mWhole) ] 
    let attrDecls = if not (isNil freeAttrs) then [ SynModuleDecl.Attributes (freeAttrs, attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat (parseState:IParseState) m p = 
    match p with
    | SynPat.Wild r when parseState.LexBuffer.SupportsFeature LanguageFeature.WildCardInForLoop ->
        mkSynId r "_"
    | SynPat.Named (id, false, _, _) -> id
    | SynPat.LongIdent(LongIdentWithDots([id], _), _, None, SynArgPats.Pats [], None, _) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if not (isNil a1) && not (isNil a2) then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed())
    a1 @ a2

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange, lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


//# 195 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ELSE of (range * string * ParseHelpers.LexerContinuation)
  | HASH_ENDIF of (range * string * ParseHelpers.LexerContinuation)
  | COMMENT of (ParseHelpers.LexerContinuation)
  | WHITESPACE of (ParseHelpers.LexerContinuation)
  | HASH_LINE of (ParseHelpers.LexerContinuation)
  | HASH_LIGHT of (ParseHelpers.LexerContinuation)
  | INACTIVECODE of (ParseHelpers.LexerContinuation)
  | LINE_COMMENT of (ParseHelpers.LexerContinuation)
  | STRING_TEXT of (ParseHelpers.LexerContinuation)
  | EOF of (ParseHelpers.LexerContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | FIXED
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OAND_BANG of (bool)
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | BAR_RBRACK
  | BAR_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACE_BAR
  | LBRACK_LESS
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MATCH_BANG
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | DOT_DOT_HAT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | AND_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | NATIVEINT of (int64 * bool)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | HASH_IDENT of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string * string)
  | LBRACE of (ParseHelpers.LexerContinuation)
  | RBRACE of (ParseHelpers.LexerContinuation)
  | INTERP_STRING_END of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_PART of (string * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_PART of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | INTERP_STRING_BEGIN_END of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | STRING of (string * SynStringKind * ParseHelpers.LexerContinuation)
  | BYTEARRAY of (byte[] * SynByteStringKind * ParseHelpers.LexerContinuation)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_FIXED
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OAND_BANG
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_BAR_RBRACK
    | TOKEN_BAR_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACE_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MATCH_BANG
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_DOT_DOT_HAT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_AND_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_NATIVEINT
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_HASH_IDENT
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_INTERP_STRING_END
    | TOKEN_INTERP_STRING_PART
    | TOKEN_INTERP_STRING_BEGIN_PART
    | TOKEN_INTERP_STRING_BEGIN_END
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSequentialExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_openDecl
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_anonRecdType
    | NONTERM_braceBarFieldDeclListCore
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSequentialExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSequentialExprBlockR
    | NONTERM_typedSequentialExpr
    | NONTERM_typedSequentialExprEOF
    | NONTERM_sequentialExpr
    | NONTERM_recover
    | NONTERM_moreBinders
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_arrayExprElements
    | NONTERM_computationExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_forLoopDirection
    | NONTERM_inlineAssemblyExpr
    | NONTERM_optCurriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_optInlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_recdExprCore
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_braceBarExpr
    | NONTERM_braceBarExprCore
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_atomTypeNonAtomicDeprecated
    | NONTERM_atomTypeOrAnonRecdType
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_identExpr
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_string
    | NONTERM_sourceIdentifier
    | NONTERM_interpolatedStringFill
    | NONTERM_interpolatedStringParts
    | NONTERM_interpolatedString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_bar_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | FIXED  -> 13 
  | OINTERFACE_MEMBER  -> 14 
  | OBLOCKEND  -> 15 
  | OBLOCKEND_COMING_SOON  -> 16 
  | OBLOCKEND_IS_HERE  -> 17 
  | ORIGHT_BLOCK_END  -> 18 
  | ODECLEND  -> 19 
  | OEND  -> 20 
  | OBLOCKSEP  -> 21 
  | OBLOCKBEGIN  -> 22 
  | ORESET  -> 23 
  | OFUN  -> 24 
  | OFUNCTION  -> 25 
  | OWITH  -> 26 
  | OELSE  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OAND_BANG _ -> 31 
  | OBINDER _ -> 32 
  | OLET _ -> 33 
  | HIGH_PRECEDENCE_TYAPP  -> 34 
  | HIGH_PRECEDENCE_PAREN_APP  -> 35 
  | HIGH_PRECEDENCE_BRACK_APP  -> 36 
  | TYPE_COMING_SOON  -> 37 
  | TYPE_IS_HERE  -> 38 
  | MODULE_COMING_SOON  -> 39 
  | MODULE_IS_HERE  -> 40 
  | EXTERN  -> 41 
  | VOID  -> 42 
  | PUBLIC  -> 43 
  | PRIVATE  -> 44 
  | INTERNAL  -> 45 
  | GLOBAL  -> 46 
  | STATIC  -> 47 
  | MEMBER  -> 48 
  | CLASS  -> 49 
  | ABSTRACT  -> 50 
  | OVERRIDE  -> 51 
  | DEFAULT  -> 52 
  | CONSTRUCTOR  -> 53 
  | INHERIT  -> 54 
  | GREATER_RBRACK  -> 55 
  | STRUCT  -> 56 
  | SIG  -> 57 
  | BAR  -> 58 
  | RBRACK  -> 59 
  | RBRACE_COMING_SOON  -> 60 
  | RBRACE_IS_HERE  -> 61 
  | MINUS  -> 62 
  | DOLLAR  -> 63 
  | BAR_RBRACK  -> 64 
  | BAR_RBRACE  -> 65 
  | UNDERSCORE  -> 66 
  | SEMICOLON_SEMICOLON  -> 67 
  | LARROW  -> 68 
  | EQUALS  -> 69 
  | LBRACK  -> 70 
  | LBRACK_BAR  -> 71 
  | LBRACE_BAR  -> 72 
  | LBRACK_LESS  -> 73 
  | QMARK  -> 74 
  | QMARK_QMARK  -> 75 
  | DOT  -> 76 
  | COLON  -> 77 
  | COLON_COLON  -> 78 
  | COLON_GREATER  -> 79 
  | COLON_QMARK_GREATER  -> 80 
  | COLON_QMARK  -> 81 
  | COLON_EQUALS  -> 82 
  | SEMICOLON  -> 83 
  | WHEN  -> 84 
  | WHILE  -> 85 
  | WITH  -> 86 
  | HASH  -> 87 
  | AMP  -> 88 
  | AMP_AMP  -> 89 
  | QUOTE  -> 90 
  | LPAREN  -> 91 
  | RPAREN  -> 92 
  | RPAREN_COMING_SOON  -> 93 
  | RPAREN_IS_HERE  -> 94 
  | STAR  -> 95 
  | COMMA  -> 96 
  | RARROW  -> 97 
  | GREATER_BAR_RBRACK  -> 98 
  | LPAREN_STAR_RPAREN  -> 99 
  | OPEN  -> 100 
  | OR  -> 101 
  | REC  -> 102 
  | THEN  -> 103 
  | TO  -> 104 
  | TRUE  -> 105 
  | TRY  -> 106 
  | TYPE  -> 107 
  | VAL  -> 108 
  | INLINE  -> 109 
  | INTERFACE  -> 110 
  | INSTANCE  -> 111 
  | CONST  -> 112 
  | LAZY  -> 113 
  | OLAZY  -> 114 
  | MATCH  -> 115 
  | MATCH_BANG  -> 116 
  | MUTABLE  -> 117 
  | NEW  -> 118 
  | OF  -> 119 
  | EXCEPTION  -> 120 
  | FALSE  -> 121 
  | FOR  -> 122 
  | FUN  -> 123 
  | FUNCTION  -> 124 
  | IF  -> 125 
  | IN  -> 126 
  | JOIN_IN  -> 127 
  | FINALLY  -> 128 
  | DO_BANG  -> 129 
  | AND  -> 130 
  | AS  -> 131 
  | ASSERT  -> 132 
  | OASSERT  -> 133 
  | ASR  -> 134 
  | BEGIN  -> 135 
  | DO  -> 136 
  | DONE  -> 137 
  | DOWNTO  -> 138 
  | ELSE  -> 139 
  | ELIF  -> 140 
  | END  -> 141 
  | DOT_DOT  -> 142 
  | DOT_DOT_HAT  -> 143 
  | BAR_BAR  -> 144 
  | UPCAST  -> 145 
  | DOWNCAST  -> 146 
  | NULL  -> 147 
  | RESERVED  -> 148 
  | MODULE  -> 149 
  | NAMESPACE  -> 150 
  | DELEGATE  -> 151 
  | CONSTRAINT  -> 152 
  | BASE  -> 153 
  | LQUOTE _ -> 154 
  | RQUOTE _ -> 155 
  | RQUOTE_DOT _ -> 156 
  | PERCENT_OP _ -> 157 
  | BINDER _ -> 158 
  | LESS _ -> 159 
  | GREATER _ -> 160 
  | LET _ -> 161 
  | YIELD _ -> 162 
  | YIELD_BANG _ -> 163 
  | AND_BANG _ -> 164 
  | BIGNUM _ -> 165 
  | DECIMAL _ -> 166 
  | CHAR _ -> 167 
  | IEEE64 _ -> 168 
  | IEEE32 _ -> 169 
  | UNATIVEINT _ -> 170 
  | UINT64 _ -> 171 
  | UINT32 _ -> 172 
  | UINT16 _ -> 173 
  | UINT8 _ -> 174 
  | NATIVEINT _ -> 175 
  | INT64 _ -> 176 
  | INT32 _ -> 177 
  | INT32_DOT_DOT _ -> 178 
  | INT16 _ -> 179 
  | INT8 _ -> 180 
  | FUNKY_OPERATOR_NAME _ -> 181 
  | ADJACENT_PREFIX_OP _ -> 182 
  | PLUS_MINUS_OP _ -> 183 
  | INFIX_AMP_OP _ -> 184 
  | INFIX_STAR_DIV_MOD_OP _ -> 185 
  | PREFIX_OP _ -> 186 
  | INFIX_BAR_OP _ -> 187 
  | INFIX_AT_HAT_OP _ -> 188 
  | INFIX_COMPARE_OP _ -> 189 
  | INFIX_STAR_STAR_OP _ -> 190 
  | HASH_IDENT _ -> 191 
  | IDENT _ -> 192 
  | KEYWORD_STRING _ -> 193 
  | LBRACE _ -> 194 
  | RBRACE _ -> 195 
  | INTERP_STRING_END _ -> 196 
  | INTERP_STRING_PART _ -> 197 
  | INTERP_STRING_BEGIN_PART _ -> 198 
  | INTERP_STRING_BEGIN_END _ -> 199 
  | STRING _ -> 200 
  | BYTEARRAY _ -> 201 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_FIXED 
  | 14 -> TOKEN_OINTERFACE_MEMBER 
  | 15 -> TOKEN_OBLOCKEND 
  | 16 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 17 -> TOKEN_OBLOCKEND_IS_HERE 
  | 18 -> TOKEN_ORIGHT_BLOCK_END 
  | 19 -> TOKEN_ODECLEND 
  | 20 -> TOKEN_OEND 
  | 21 -> TOKEN_OBLOCKSEP 
  | 22 -> TOKEN_OBLOCKBEGIN 
  | 23 -> TOKEN_ORESET 
  | 24 -> TOKEN_OFUN 
  | 25 -> TOKEN_OFUNCTION 
  | 26 -> TOKEN_OWITH 
  | 27 -> TOKEN_OELSE 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OAND_BANG 
  | 32 -> TOKEN_OBINDER 
  | 33 -> TOKEN_OLET 
  | 34 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 35 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 36 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 37 -> TOKEN_TYPE_COMING_SOON 
  | 38 -> TOKEN_TYPE_IS_HERE 
  | 39 -> TOKEN_MODULE_COMING_SOON 
  | 40 -> TOKEN_MODULE_IS_HERE 
  | 41 -> TOKEN_EXTERN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_PUBLIC 
  | 44 -> TOKEN_PRIVATE 
  | 45 -> TOKEN_INTERNAL 
  | 46 -> TOKEN_GLOBAL 
  | 47 -> TOKEN_STATIC 
  | 48 -> TOKEN_MEMBER 
  | 49 -> TOKEN_CLASS 
  | 50 -> TOKEN_ABSTRACT 
  | 51 -> TOKEN_OVERRIDE 
  | 52 -> TOKEN_DEFAULT 
  | 53 -> TOKEN_CONSTRUCTOR 
  | 54 -> TOKEN_INHERIT 
  | 55 -> TOKEN_GREATER_RBRACK 
  | 56 -> TOKEN_STRUCT 
  | 57 -> TOKEN_SIG 
  | 58 -> TOKEN_BAR 
  | 59 -> TOKEN_RBRACK 
  | 60 -> TOKEN_RBRACE_COMING_SOON 
  | 61 -> TOKEN_RBRACE_IS_HERE 
  | 62 -> TOKEN_MINUS 
  | 63 -> TOKEN_DOLLAR 
  | 64 -> TOKEN_BAR_RBRACK 
  | 65 -> TOKEN_BAR_RBRACE 
  | 66 -> TOKEN_UNDERSCORE 
  | 67 -> TOKEN_SEMICOLON_SEMICOLON 
  | 68 -> TOKEN_LARROW 
  | 69 -> TOKEN_EQUALS 
  | 70 -> TOKEN_LBRACK 
  | 71 -> TOKEN_LBRACK_BAR 
  | 72 -> TOKEN_LBRACE_BAR 
  | 73 -> TOKEN_LBRACK_LESS 
  | 74 -> TOKEN_QMARK 
  | 75 -> TOKEN_QMARK_QMARK 
  | 76 -> TOKEN_DOT 
  | 77 -> TOKEN_COLON 
  | 78 -> TOKEN_COLON_COLON 
  | 79 -> TOKEN_COLON_GREATER 
  | 80 -> TOKEN_COLON_QMARK_GREATER 
  | 81 -> TOKEN_COLON_QMARK 
  | 82 -> TOKEN_COLON_EQUALS 
  | 83 -> TOKEN_SEMICOLON 
  | 84 -> TOKEN_WHEN 
  | 85 -> TOKEN_WHILE 
  | 86 -> TOKEN_WITH 
  | 87 -> TOKEN_HASH 
  | 88 -> TOKEN_AMP 
  | 89 -> TOKEN_AMP_AMP 
  | 90 -> TOKEN_QUOTE 
  | 91 -> TOKEN_LPAREN 
  | 92 -> TOKEN_RPAREN 
  | 93 -> TOKEN_RPAREN_COMING_SOON 
  | 94 -> TOKEN_RPAREN_IS_HERE 
  | 95 -> TOKEN_STAR 
  | 96 -> TOKEN_COMMA 
  | 97 -> TOKEN_RARROW 
  | 98 -> TOKEN_GREATER_BAR_RBRACK 
  | 99 -> TOKEN_LPAREN_STAR_RPAREN 
  | 100 -> TOKEN_OPEN 
  | 101 -> TOKEN_OR 
  | 102 -> TOKEN_REC 
  | 103 -> TOKEN_THEN 
  | 104 -> TOKEN_TO 
  | 105 -> TOKEN_TRUE 
  | 106 -> TOKEN_TRY 
  | 107 -> TOKEN_TYPE 
  | 108 -> TOKEN_VAL 
  | 109 -> TOKEN_INLINE 
  | 110 -> TOKEN_INTERFACE 
  | 111 -> TOKEN_INSTANCE 
  | 112 -> TOKEN_CONST 
  | 113 -> TOKEN_LAZY 
  | 114 -> TOKEN_OLAZY 
  | 115 -> TOKEN_MATCH 
  | 116 -> TOKEN_MATCH_BANG 
  | 117 -> TOKEN_MUTABLE 
  | 118 -> TOKEN_NEW 
  | 119 -> TOKEN_OF 
  | 120 -> TOKEN_EXCEPTION 
  | 121 -> TOKEN_FALSE 
  | 122 -> TOKEN_FOR 
  | 123 -> TOKEN_FUN 
  | 124 -> TOKEN_FUNCTION 
  | 125 -> TOKEN_IF 
  | 126 -> TOKEN_IN 
  | 127 -> TOKEN_JOIN_IN 
  | 128 -> TOKEN_FINALLY 
  | 129 -> TOKEN_DO_BANG 
  | 130 -> TOKEN_AND 
  | 131 -> TOKEN_AS 
  | 132 -> TOKEN_ASSERT 
  | 133 -> TOKEN_OASSERT 
  | 134 -> TOKEN_ASR 
  | 135 -> TOKEN_BEGIN 
  | 136 -> TOKEN_DO 
  | 137 -> TOKEN_DONE 
  | 138 -> TOKEN_DOWNTO 
  | 139 -> TOKEN_ELSE 
  | 140 -> TOKEN_ELIF 
  | 141 -> TOKEN_END 
  | 142 -> TOKEN_DOT_DOT 
  | 143 -> TOKEN_DOT_DOT_HAT 
  | 144 -> TOKEN_BAR_BAR 
  | 145 -> TOKEN_UPCAST 
  | 146 -> TOKEN_DOWNCAST 
  | 147 -> TOKEN_NULL 
  | 148 -> TOKEN_RESERVED 
  | 149 -> TOKEN_MODULE 
  | 150 -> TOKEN_NAMESPACE 
  | 151 -> TOKEN_DELEGATE 
  | 152 -> TOKEN_CONSTRAINT 
  | 153 -> TOKEN_BASE 
  | 154 -> TOKEN_LQUOTE 
  | 155 -> TOKEN_RQUOTE 
  | 156 -> TOKEN_RQUOTE_DOT 
  | 157 -> TOKEN_PERCENT_OP 
  | 158 -> TOKEN_BINDER 
  | 159 -> TOKEN_LESS 
  | 160 -> TOKEN_GREATER 
  | 161 -> TOKEN_LET 
  | 162 -> TOKEN_YIELD 
  | 163 -> TOKEN_YIELD_BANG 
  | 164 -> TOKEN_AND_BANG 
  | 165 -> TOKEN_BIGNUM 
  | 166 -> TOKEN_DECIMAL 
  | 167 -> TOKEN_CHAR 
  | 168 -> TOKEN_IEEE64 
  | 169 -> TOKEN_IEEE32 
  | 170 -> TOKEN_UNATIVEINT 
  | 171 -> TOKEN_UINT64 
  | 172 -> TOKEN_UINT32 
  | 173 -> TOKEN_UINT16 
  | 174 -> TOKEN_UINT8 
  | 175 -> TOKEN_NATIVEINT 
  | 176 -> TOKEN_INT64 
  | 177 -> TOKEN_INT32 
  | 178 -> TOKEN_INT32_DOT_DOT 
  | 179 -> TOKEN_INT16 
  | 180 -> TOKEN_INT8 
  | 181 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 182 -> TOKEN_ADJACENT_PREFIX_OP 
  | 183 -> TOKEN_PLUS_MINUS_OP 
  | 184 -> TOKEN_INFIX_AMP_OP 
  | 185 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 186 -> TOKEN_PREFIX_OP 
  | 187 -> TOKEN_INFIX_BAR_OP 
  | 188 -> TOKEN_INFIX_AT_HAT_OP 
  | 189 -> TOKEN_INFIX_COMPARE_OP 
  | 190 -> TOKEN_INFIX_STAR_STAR_OP 
  | 191 -> TOKEN_HASH_IDENT 
  | 192 -> TOKEN_IDENT 
  | 193 -> TOKEN_KEYWORD_STRING 
  | 194 -> TOKEN_LBRACE 
  | 195 -> TOKEN_RBRACE 
  | 196 -> TOKEN_INTERP_STRING_END 
  | 197 -> TOKEN_INTERP_STRING_PART 
  | 198 -> TOKEN_INTERP_STRING_BEGIN_PART 
  | 199 -> TOKEN_INTERP_STRING_BEGIN_END 
  | 200 -> TOKEN_STRING 
  | 201 -> TOKEN_BYTEARRAY 
  | 204 -> TOKEN_end_of_input
  | 202 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSequentialExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_hashDirectiveArg 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_signatureFile 
    | 33 -> NONTERM_moduleIntro 
    | 34 -> NONTERM_namespaceIntro 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecs 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpecList 
    | 39 -> NONTERM_fileNamespaceSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_fileModuleSpec 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfns 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_moduleSpfn 
    | 59 -> NONTERM_valSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_optLiteralValueSpfn 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_moduleSpecBlock 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_openDecl 
    | 145 -> NONTERM_openDecl 
    | 146 -> NONTERM_namedModuleAbbrevBlock 
    | 147 -> NONTERM_namedModuleAbbrevBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_namedModuleDefnBlock 
    | 154 -> NONTERM_namedModuleDefnBlock 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_wrappedNamedModuleDefn 
    | 157 -> NONTERM_wrappedNamedModuleDefn 
    | 158 -> NONTERM_tyconDefnAugmentation 
    | 159 -> NONTERM_opt_attributes 
    | 160 -> NONTERM_opt_attributes 
    | 161 -> NONTERM_attributes 
    | 162 -> NONTERM_attributes 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeList 
    | 166 -> NONTERM_attributeList 
    | 167 -> NONTERM_attributeListElements 
    | 168 -> NONTERM_attributeListElements 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attribute 
    | 171 -> NONTERM_attribute 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_attributeTarget 
    | 175 -> NONTERM_attributeTarget 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_memberFlags 
    | 179 -> NONTERM_memberFlags 
    | 180 -> NONTERM_typeNameInfo 
    | 181 -> NONTERM_tyconDefnList 
    | 182 -> NONTERM_tyconDefnList 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefn 
    | 186 -> NONTERM_tyconDefn 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhsBlock 
    | 189 -> NONTERM_tyconDefnRhsBlock 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconDefnRhs 
    | 192 -> NONTERM_tyconDefnRhs 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_tyconClassDefn 
    | 196 -> NONTERM_tyconClassDefn 
    | 197 -> NONTERM_classDefnBlockKindUnspecified 
    | 198 -> NONTERM_classDefnBlockKindUnspecified 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnBlock 
    | 201 -> NONTERM_classDefnBlock 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembers 
    | 204 -> NONTERM_classDefnMembers 
    | 205 -> NONTERM_classDefnMembersAtLeastOne 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSet 
    | 208 -> NONTERM_classDefnMemberGetSet 
    | 209 -> NONTERM_classDefnMemberGetSetElements 
    | 210 -> NONTERM_classDefnMemberGetSetElements 
    | 211 -> NONTERM_classDefnMemberGetSetElement 
    | 212 -> NONTERM_memberCore 
    | 213 -> NONTERM_memberCore 
    | 214 -> NONTERM_abstractMemberFlags 
    | 215 -> NONTERM_abstractMemberFlags 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_classDefnMember 
    | 226 -> NONTERM_classDefnMember 
    | 227 -> NONTERM_valDefnDecl 
    | 228 -> NONTERM_autoPropsDefnDecl 
    | 229 -> NONTERM_opt_typ 
    | 230 -> NONTERM_opt_typ 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_atomicPatternLongIdent 
    | 233 -> NONTERM_atomicPatternLongIdent 
    | 234 -> NONTERM_atomicPatternLongIdent 
    | 235 -> NONTERM_atomicPatternLongIdent 
    | 236 -> NONTERM_opt_access 
    | 237 -> NONTERM_opt_access 
    | 238 -> NONTERM_access 
    | 239 -> NONTERM_access 
    | 240 -> NONTERM_access 
    | 241 -> NONTERM_opt_declVisibility 
    | 242 -> NONTERM_opt_declVisibility 
    | 243 -> NONTERM_opt_interfaceImplDefn 
    | 244 -> NONTERM_opt_interfaceImplDefn 
    | 245 -> NONTERM_opt_interfaceImplDefn 
    | 246 -> NONTERM_opt_classDefn 
    | 247 -> NONTERM_opt_classDefn 
    | 248 -> NONTERM_inheritsDefn 
    | 249 -> NONTERM_inheritsDefn 
    | 250 -> NONTERM_inheritsDefn 
    | 251 -> NONTERM_optAsSpec 
    | 252 -> NONTERM_optAsSpec 
    | 253 -> NONTERM_asSpec 
    | 254 -> NONTERM_optBaseSpec 
    | 255 -> NONTERM_optBaseSpec 
    | 256 -> NONTERM_baseSpec 
    | 257 -> NONTERM_baseSpec 
    | 258 -> NONTERM_objectImplementationBlock 
    | 259 -> NONTERM_objectImplementationBlock 
    | 260 -> NONTERM_objectImplementationBlock 
    | 261 -> NONTERM_objectImplementationMembers 
    | 262 -> NONTERM_objectImplementationMembers 
    | 263 -> NONTERM_objectImplementationMember 
    | 264 -> NONTERM_objectImplementationMember 
    | 265 -> NONTERM_objectImplementationMember 
    | 266 -> NONTERM_objectImplementationMember 
    | 267 -> NONTERM_memberOrOverride 
    | 268 -> NONTERM_memberOrOverride 
    | 269 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 270 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 271 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 272 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 273 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 274 -> NONTERM_braceFieldDeclList 
    | 275 -> NONTERM_braceFieldDeclList 
    | 276 -> NONTERM_braceFieldDeclList 
    | 277 -> NONTERM_anonRecdType 
    | 278 -> NONTERM_anonRecdType 
    | 279 -> NONTERM_braceBarFieldDeclListCore 
    | 280 -> NONTERM_braceBarFieldDeclListCore 
    | 281 -> NONTERM_braceBarFieldDeclListCore 
    | 282 -> NONTERM_classOrInterfaceOrStruct 
    | 283 -> NONTERM_classOrInterfaceOrStruct 
    | 284 -> NONTERM_classOrInterfaceOrStruct 
    | 285 -> NONTERM_interfaceMember 
    | 286 -> NONTERM_interfaceMember 
    | 287 -> NONTERM_tyconNameAndTyparDecls 
    | 288 -> NONTERM_tyconNameAndTyparDecls 
    | 289 -> NONTERM_tyconNameAndTyparDecls 
    | 290 -> NONTERM_prefixTyparDecls 
    | 291 -> NONTERM_prefixTyparDecls 
    | 292 -> NONTERM_typarDeclList 
    | 293 -> NONTERM_typarDeclList 
    | 294 -> NONTERM_typarDecl 
    | 295 -> NONTERM_postfixTyparDecls 
    | 296 -> NONTERM_explicitValTyparDeclsCore 
    | 297 -> NONTERM_explicitValTyparDeclsCore 
    | 298 -> NONTERM_explicitValTyparDeclsCore 
    | 299 -> NONTERM_explicitValTyparDecls 
    | 300 -> NONTERM_opt_explicitValTyparDecls 
    | 301 -> NONTERM_opt_explicitValTyparDecls 
    | 302 -> NONTERM_opt_typeConstraints 
    | 303 -> NONTERM_opt_typeConstraints 
    | 304 -> NONTERM_typeConstraints 
    | 305 -> NONTERM_typeConstraints 
    | 306 -> NONTERM_typeConstraint 
    | 307 -> NONTERM_typeConstraint 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typeConstraint 
    | 310 -> NONTERM_typeConstraint 
    | 311 -> NONTERM_typeConstraint 
    | 312 -> NONTERM_typeConstraint 
    | 313 -> NONTERM_typeConstraint 
    | 314 -> NONTERM_typeConstraint 
    | 315 -> NONTERM_typeConstraint 
    | 316 -> NONTERM_typarAlts 
    | 317 -> NONTERM_typarAlts 
    | 318 -> NONTERM_unionTypeRepr 
    | 319 -> NONTERM_unionTypeRepr 
    | 320 -> NONTERM_unionTypeRepr 
    | 321 -> NONTERM_barAndgrabXmlDoc 
    | 322 -> NONTERM_attrUnionCaseDecls 
    | 323 -> NONTERM_attrUnionCaseDecls 
    | 324 -> NONTERM_attrUnionCaseDecl 
    | 325 -> NONTERM_attrUnionCaseDecl 
    | 326 -> NONTERM_attrUnionCaseDecl 
    | 327 -> NONTERM_attrUnionCaseDecl 
    | 328 -> NONTERM_attrUnionCaseDecl 
    | 329 -> NONTERM_unionCaseName 
    | 330 -> NONTERM_unionCaseName 
    | 331 -> NONTERM_unionCaseName 
    | 332 -> NONTERM_firstUnionCaseDeclOfMany 
    | 333 -> NONTERM_firstUnionCaseDeclOfMany 
    | 334 -> NONTERM_firstUnionCaseDeclOfMany 
    | 335 -> NONTERM_firstUnionCaseDecl 
    | 336 -> NONTERM_firstUnionCaseDecl 
    | 337 -> NONTERM_unionCaseReprElements 
    | 338 -> NONTERM_unionCaseReprElements 
    | 339 -> NONTERM_unionCaseReprElement 
    | 340 -> NONTERM_unionCaseReprElement 
    | 341 -> NONTERM_unionCaseRepr 
    | 342 -> NONTERM_unionCaseRepr 
    | 343 -> NONTERM_recdFieldDeclList 
    | 344 -> NONTERM_recdFieldDeclList 
    | 345 -> NONTERM_recdFieldDecl 
    | 346 -> NONTERM_fieldDecl 
    | 347 -> NONTERM_exconDefn 
    | 348 -> NONTERM_exconCore 
    | 349 -> NONTERM_exconIntro 
    | 350 -> NONTERM_exconIntro 
    | 351 -> NONTERM_exconIntro 
    | 352 -> NONTERM_exconRepr 
    | 353 -> NONTERM_exconRepr 
    | 354 -> NONTERM_defnBindings 
    | 355 -> NONTERM_defnBindings 
    | 356 -> NONTERM_doBinding 
    | 357 -> NONTERM_hardwhiteLetBindings 
    | 358 -> NONTERM_hardwhiteDoBinding 
    | 359 -> NONTERM_classDefnBindings 
    | 360 -> NONTERM_classDefnBindings 
    | 361 -> NONTERM_classDefnBindings 
    | 362 -> NONTERM_classDefnBindings 
    | 363 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 364 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 365 -> NONTERM_cPrototype 
    | 366 -> NONTERM_cArgs 
    | 367 -> NONTERM_cArgs 
    | 368 -> NONTERM_cArgs 
    | 369 -> NONTERM_cMoreArgs 
    | 370 -> NONTERM_cMoreArgs 
    | 371 -> NONTERM_cArg 
    | 372 -> NONTERM_cArg 
    | 373 -> NONTERM_cType 
    | 374 -> NONTERM_cType 
    | 375 -> NONTERM_cType 
    | 376 -> NONTERM_cType 
    | 377 -> NONTERM_cType 
    | 378 -> NONTERM_cRetType 
    | 379 -> NONTERM_cRetType 
    | 380 -> NONTERM_localBindings 
    | 381 -> NONTERM_moreLocalBindings 
    | 382 -> NONTERM_moreLocalBindings 
    | 383 -> NONTERM_attr_localBinding 
    | 384 -> NONTERM_attr_localBinding 
    | 385 -> NONTERM_localBinding 
    | 386 -> NONTERM_localBinding 
    | 387 -> NONTERM_localBinding 
    | 388 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 389 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 390 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 391 -> NONTERM_typedExprWithStaticOptimizations 
    | 392 -> NONTERM_opt_staticOptimizations 
    | 393 -> NONTERM_opt_staticOptimizations 
    | 394 -> NONTERM_staticOptimization 
    | 395 -> NONTERM_staticOptimizationConditions 
    | 396 -> NONTERM_staticOptimizationConditions 
    | 397 -> NONTERM_staticOptimizationCondition 
    | 398 -> NONTERM_staticOptimizationCondition 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rawConstant 
    | 410 -> NONTERM_rawConstant 
    | 411 -> NONTERM_rawConstant 
    | 412 -> NONTERM_rawConstant 
    | 413 -> NONTERM_rawConstant 
    | 414 -> NONTERM_rawConstant 
    | 415 -> NONTERM_rawConstant 
    | 416 -> NONTERM_rawConstant 
    | 417 -> NONTERM_rationalConstant 
    | 418 -> NONTERM_rationalConstant 
    | 419 -> NONTERM_rationalConstant 
    | 420 -> NONTERM_rationalConstant 
    | 421 -> NONTERM_atomicUnsignedRationalConstant 
    | 422 -> NONTERM_atomicUnsignedRationalConstant 
    | 423 -> NONTERM_atomicRationalConstant 
    | 424 -> NONTERM_atomicRationalConstant 
    | 425 -> NONTERM_constant 
    | 426 -> NONTERM_constant 
    | 427 -> NONTERM_bindingPattern 
    | 428 -> NONTERM_simplePattern 
    | 429 -> NONTERM_simplePattern 
    | 430 -> NONTERM_simplePattern 
    | 431 -> NONTERM_simplePattern 
    | 432 -> NONTERM_simplePatternCommaList 
    | 433 -> NONTERM_simplePatternCommaList 
    | 434 -> NONTERM_simplePatterns 
    | 435 -> NONTERM_simplePatterns 
    | 436 -> NONTERM_simplePatterns 
    | 437 -> NONTERM_simplePatterns 
    | 438 -> NONTERM_simplePatterns 
    | 439 -> NONTERM_headBindingPattern 
    | 440 -> NONTERM_headBindingPattern 
    | 441 -> NONTERM_headBindingPattern 
    | 442 -> NONTERM_headBindingPattern 
    | 443 -> NONTERM_headBindingPattern 
    | 444 -> NONTERM_headBindingPattern 
    | 445 -> NONTERM_tuplePatternElements 
    | 446 -> NONTERM_tuplePatternElements 
    | 447 -> NONTERM_conjPatternElements 
    | 448 -> NONTERM_conjPatternElements 
    | 449 -> NONTERM_namePatPairs 
    | 450 -> NONTERM_namePatPairs 
    | 451 -> NONTERM_namePatPair 
    | 452 -> NONTERM_constrPattern 
    | 453 -> NONTERM_constrPattern 
    | 454 -> NONTERM_constrPattern 
    | 455 -> NONTERM_constrPattern 
    | 456 -> NONTERM_constrPattern 
    | 457 -> NONTERM_constrPattern 
    | 458 -> NONTERM_constrPattern 
    | 459 -> NONTERM_constrPattern 
    | 460 -> NONTERM_constrPattern 
    | 461 -> NONTERM_atomicPatsOrNamePatPairs 
    | 462 -> NONTERM_atomicPatsOrNamePatPairs 
    | 463 -> NONTERM_atomicPatterns 
    | 464 -> NONTERM_atomicPatterns 
    | 465 -> NONTERM_atomicPatterns 
    | 466 -> NONTERM_atomicPatterns 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_atomicPattern 
    | 473 -> NONTERM_atomicPattern 
    | 474 -> NONTERM_atomicPattern 
    | 475 -> NONTERM_atomicPattern 
    | 476 -> NONTERM_atomicPattern 
    | 477 -> NONTERM_atomicPattern 
    | 478 -> NONTERM_atomicPattern 
    | 479 -> NONTERM_atomicPattern 
    | 480 -> NONTERM_atomicPattern 
    | 481 -> NONTERM_atomicPattern 
    | 482 -> NONTERM_atomicPattern 
    | 483 -> NONTERM_atomicPattern 
    | 484 -> NONTERM_atomicPattern 
    | 485 -> NONTERM_atomicPattern 
    | 486 -> NONTERM_atomicPattern 
    | 487 -> NONTERM_parenPatternBody 
    | 488 -> NONTERM_parenPatternBody 
    | 489 -> NONTERM_parenPattern 
    | 490 -> NONTERM_parenPattern 
    | 491 -> NONTERM_parenPattern 
    | 492 -> NONTERM_parenPattern 
    | 493 -> NONTERM_parenPattern 
    | 494 -> NONTERM_parenPattern 
    | 495 -> NONTERM_parenPattern 
    | 496 -> NONTERM_parenPattern 
    | 497 -> NONTERM_tupleParenPatternElements 
    | 498 -> NONTERM_tupleParenPatternElements 
    | 499 -> NONTERM_conjParenPatternElements 
    | 500 -> NONTERM_conjParenPatternElements 
    | 501 -> NONTERM_recordPatternElementsAux 
    | 502 -> NONTERM_recordPatternElementsAux 
    | 503 -> NONTERM_recordPatternElement 
    | 504 -> NONTERM_listPatternElements 
    | 505 -> NONTERM_listPatternElements 
    | 506 -> NONTERM_listPatternElements 
    | 507 -> NONTERM_typedSequentialExprBlock 
    | 508 -> NONTERM_typedSequentialExprBlock 
    | 509 -> NONTERM_typedSequentialExprBlock 
    | 510 -> NONTERM_declExprBlock 
    | 511 -> NONTERM_declExprBlock 
    | 512 -> NONTERM_typedSequentialExprBlockR 
    | 513 -> NONTERM_typedSequentialExprBlockR 
    | 514 -> NONTERM_typedSequentialExpr 
    | 515 -> NONTERM_typedSequentialExpr 
    | 516 -> NONTERM_typedSequentialExprEOF 
    | 517 -> NONTERM_sequentialExpr 
    | 518 -> NONTERM_sequentialExpr 
    | 519 -> NONTERM_sequentialExpr 
    | 520 -> NONTERM_sequentialExpr 
    | 521 -> NONTERM_sequentialExpr 
    | 522 -> NONTERM_sequentialExpr 
    | 523 -> NONTERM_recover 
    | 524 -> NONTERM_recover 
    | 525 -> NONTERM_moreBinders 
    | 526 -> NONTERM_moreBinders 
    | 527 -> NONTERM_moreBinders 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_declExpr 
    | 611 -> NONTERM_declExpr 
    | 612 -> NONTERM_declExpr 
    | 613 -> NONTERM_declExpr 
    | 614 -> NONTERM_declExpr 
    | 615 -> NONTERM_declExpr 
    | 616 -> NONTERM_declExpr 
    | 617 -> NONTERM_declExpr 
    | 618 -> NONTERM_declExpr 
    | 619 -> NONTERM_declExpr 
    | 620 -> NONTERM_declExpr 
    | 621 -> NONTERM_declExpr 
    | 622 -> NONTERM_declExpr 
    | 623 -> NONTERM_declExpr 
    | 624 -> NONTERM_declExpr 
    | 625 -> NONTERM_declExpr 
    | 626 -> NONTERM_declExpr 
    | 627 -> NONTERM_declExpr 
    | 628 -> NONTERM_declExpr 
    | 629 -> NONTERM_declExpr 
    | 630 -> NONTERM_declExpr 
    | 631 -> NONTERM_declExpr 
    | 632 -> NONTERM_declExpr 
    | 633 -> NONTERM_declExpr 
    | 634 -> NONTERM_declExpr 
    | 635 -> NONTERM_declExpr 
    | 636 -> NONTERM_declExpr 
    | 637 -> NONTERM_declExpr 
    | 638 -> NONTERM_dynamicArg 
    | 639 -> NONTERM_dynamicArg 
    | 640 -> NONTERM_withClauses 
    | 641 -> NONTERM_withClauses 
    | 642 -> NONTERM_withClauses 
    | 643 -> NONTERM_withPatternClauses 
    | 644 -> NONTERM_withPatternClauses 
    | 645 -> NONTERM_withPatternClauses 
    | 646 -> NONTERM_withPatternClauses 
    | 647 -> NONTERM_patternAndGuard 
    | 648 -> NONTERM_patternClauses 
    | 649 -> NONTERM_patternClauses 
    | 650 -> NONTERM_patternClauses 
    | 651 -> NONTERM_patternClauses 
    | 652 -> NONTERM_patternClauses 
    | 653 -> NONTERM_patternClauses 
    | 654 -> NONTERM_patternGuard 
    | 655 -> NONTERM_patternGuard 
    | 656 -> NONTERM_patternResult 
    | 657 -> NONTERM_ifExprCases 
    | 658 -> NONTERM_ifExprThen 
    | 659 -> NONTERM_ifExprThen 
    | 660 -> NONTERM_ifExprThen 
    | 661 -> NONTERM_ifExprElifs 
    | 662 -> NONTERM_ifExprElifs 
    | 663 -> NONTERM_ifExprElifs 
    | 664 -> NONTERM_ifExprElifs 
    | 665 -> NONTERM_ifExprElifs 
    | 666 -> NONTERM_ifExprElifs 
    | 667 -> NONTERM_tupleExpr 
    | 668 -> NONTERM_tupleExpr 
    | 669 -> NONTERM_tupleExpr 
    | 670 -> NONTERM_tupleExpr 
    | 671 -> NONTERM_minusExpr 
    | 672 -> NONTERM_minusExpr 
    | 673 -> NONTERM_minusExpr 
    | 674 -> NONTERM_minusExpr 
    | 675 -> NONTERM_minusExpr 
    | 676 -> NONTERM_minusExpr 
    | 677 -> NONTERM_minusExpr 
    | 678 -> NONTERM_minusExpr 
    | 679 -> NONTERM_minusExpr 
    | 680 -> NONTERM_minusExpr 
    | 681 -> NONTERM_minusExpr 
    | 682 -> NONTERM_minusExpr 
    | 683 -> NONTERM_minusExpr 
    | 684 -> NONTERM_appExpr 
    | 685 -> NONTERM_appExpr 
    | 686 -> NONTERM_argExpr 
    | 687 -> NONTERM_argExpr 
    | 688 -> NONTERM_atomicExpr 
    | 689 -> NONTERM_atomicExpr 
    | 690 -> NONTERM_atomicExpr 
    | 691 -> NONTERM_atomicExpr 
    | 692 -> NONTERM_atomicExpr 
    | 693 -> NONTERM_atomicExpr 
    | 694 -> NONTERM_atomicExpr 
    | 695 -> NONTERM_atomicExpr 
    | 696 -> NONTERM_atomicExpr 
    | 697 -> NONTERM_atomicExpr 
    | 698 -> NONTERM_atomicExpr 
    | 699 -> NONTERM_atomicExpr 
    | 700 -> NONTERM_atomicExpr 
    | 701 -> NONTERM_atomicExpr 
    | 702 -> NONTERM_atomicExpr 
    | 703 -> NONTERM_atomicExpr 
    | 704 -> NONTERM_atomicExpr 
    | 705 -> NONTERM_atomicExprQualification 
    | 706 -> NONTERM_atomicExprQualification 
    | 707 -> NONTERM_atomicExprQualification 
    | 708 -> NONTERM_atomicExprQualification 
    | 709 -> NONTERM_atomicExprQualification 
    | 710 -> NONTERM_atomicExprQualification 
    | 711 -> NONTERM_atomicExprQualification 
    | 712 -> NONTERM_atomicExprQualification 
    | 713 -> NONTERM_atomicExprQualification 
    | 714 -> NONTERM_atomicExprQualification 
    | 715 -> NONTERM_atomicExprAfterType 
    | 716 -> NONTERM_atomicExprAfterType 
    | 717 -> NONTERM_atomicExprAfterType 
    | 718 -> NONTERM_atomicExprAfterType 
    | 719 -> NONTERM_atomicExprAfterType 
    | 720 -> NONTERM_atomicExprAfterType 
    | 721 -> NONTERM_atomicExprAfterType 
    | 722 -> NONTERM_atomicExprAfterType 
    | 723 -> NONTERM_atomicExprAfterType 
    | 724 -> NONTERM_atomicExprAfterType 
    | 725 -> NONTERM_atomicExprAfterType 
    | 726 -> NONTERM_beginEndExpr 
    | 727 -> NONTERM_beginEndExpr 
    | 728 -> NONTERM_beginEndExpr 
    | 729 -> NONTERM_beginEndExpr 
    | 730 -> NONTERM_quoteExpr 
    | 731 -> NONTERM_quoteExpr 
    | 732 -> NONTERM_quoteExpr 
    | 733 -> NONTERM_quoteExpr 
    | 734 -> NONTERM_arrayExpr 
    | 735 -> NONTERM_arrayExpr 
    | 736 -> NONTERM_arrayExpr 
    | 737 -> NONTERM_arrayExpr 
    | 738 -> NONTERM_parenExpr 
    | 739 -> NONTERM_parenExpr 
    | 740 -> NONTERM_parenExpr 
    | 741 -> NONTERM_parenExpr 
    | 742 -> NONTERM_parenExpr 
    | 743 -> NONTERM_parenExpr 
    | 744 -> NONTERM_parenExpr 
    | 745 -> NONTERM_parenExpr 
    | 746 -> NONTERM_parenExpr 
    | 747 -> NONTERM_parenExprBody 
    | 748 -> NONTERM_parenExprBody 
    | 749 -> NONTERM_parenExprBody 
    | 750 -> NONTERM_staticallyKnownHeadTypars 
    | 751 -> NONTERM_staticallyKnownHeadTypars 
    | 752 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 753 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 754 -> NONTERM_braceExpr 
    | 755 -> NONTERM_braceExpr 
    | 756 -> NONTERM_braceExpr 
    | 757 -> NONTERM_braceExpr 
    | 758 -> NONTERM_braceExpr 
    | 759 -> NONTERM_braceExprBody 
    | 760 -> NONTERM_braceExprBody 
    | 761 -> NONTERM_braceExprBody 
    | 762 -> NONTERM_listExprElements 
    | 763 -> NONTERM_listExprElements 
    | 764 -> NONTERM_arrayExprElements 
    | 765 -> NONTERM_arrayExprElements 
    | 766 -> NONTERM_computationExpr 
    | 767 -> NONTERM_arrowThenExprR 
    | 768 -> NONTERM_forLoopBinder 
    | 769 -> NONTERM_forLoopBinder 
    | 770 -> NONTERM_forLoopBinder 
    | 771 -> NONTERM_forLoopRange 
    | 772 -> NONTERM_forLoopDirection 
    | 773 -> NONTERM_forLoopDirection 
    | 774 -> NONTERM_inlineAssemblyExpr 
    | 775 -> NONTERM_optCurriedArgExprs 
    | 776 -> NONTERM_optCurriedArgExprs 
    | 777 -> NONTERM_opt_atomicExprAfterType 
    | 778 -> NONTERM_opt_atomicExprAfterType 
    | 779 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 780 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 781 -> NONTERM_optInlineAssemblyReturnTypes 
    | 782 -> NONTERM_optInlineAssemblyReturnTypes 
    | 783 -> NONTERM_optInlineAssemblyReturnTypes 
    | 784 -> NONTERM_recdExpr 
    | 785 -> NONTERM_recdExpr 
    | 786 -> NONTERM_recdExprCore 
    | 787 -> NONTERM_recdExprCore 
    | 788 -> NONTERM_recdExprCore 
    | 789 -> NONTERM_recdExprCore 
    | 790 -> NONTERM_recdExprCore 
    | 791 -> NONTERM_recdExprCore 
    | 792 -> NONTERM_recdExprCore 
    | 793 -> NONTERM_opt_seps_recd 
    | 794 -> NONTERM_opt_seps_recd 
    | 795 -> NONTERM_seps_recd 
    | 796 -> NONTERM_seps_recd 
    | 797 -> NONTERM_seps_recd 
    | 798 -> NONTERM_seps_recd 
    | 799 -> NONTERM_pathOrUnderscore 
    | 800 -> NONTERM_pathOrUnderscore 
    | 801 -> NONTERM_recdExprBindings 
    | 802 -> NONTERM_recdExprBindings 
    | 803 -> NONTERM_recdBinding 
    | 804 -> NONTERM_recdBinding 
    | 805 -> NONTERM_recdBinding 
    | 806 -> NONTERM_recdBinding 
    | 807 -> NONTERM_recdBinding 
    | 808 -> NONTERM_objExpr 
    | 809 -> NONTERM_objExpr 
    | 810 -> NONTERM_objExpr 
    | 811 -> NONTERM_objExprBaseCall 
    | 812 -> NONTERM_objExprBaseCall 
    | 813 -> NONTERM_objExprBaseCall 
    | 814 -> NONTERM_opt_objExprBindings 
    | 815 -> NONTERM_opt_objExprBindings 
    | 816 -> NONTERM_objExprBindings 
    | 817 -> NONTERM_objExprBindings 
    | 818 -> NONTERM_objExprBindings 
    | 819 -> NONTERM_objExprInterfaces 
    | 820 -> NONTERM_opt_objExprInterfaces 
    | 821 -> NONTERM_opt_objExprInterfaces 
    | 822 -> NONTERM_opt_objExprInterfaces 
    | 823 -> NONTERM_objExprInterface 
    | 824 -> NONTERM_braceBarExpr 
    | 825 -> NONTERM_braceBarExpr 
    | 826 -> NONTERM_braceBarExprCore 
    | 827 -> NONTERM_braceBarExprCore 
    | 828 -> NONTERM_braceBarExprCore 
    | 829 -> NONTERM_braceBarExprCore 
    | 830 -> NONTERM_braceBarExprCore 
    | 831 -> NONTERM_anonLambdaExpr 
    | 832 -> NONTERM_anonLambdaExpr 
    | 833 -> NONTERM_anonLambdaExpr 
    | 834 -> NONTERM_anonLambdaExpr 
    | 835 -> NONTERM_anonLambdaExpr 
    | 836 -> NONTERM_anonLambdaExpr 
    | 837 -> NONTERM_anonLambdaExpr 
    | 838 -> NONTERM_anonLambdaExpr 
    | 839 -> NONTERM_anonMatchingExpr 
    | 840 -> NONTERM_anonMatchingExpr 
    | 841 -> NONTERM_typeWithTypeConstraints 
    | 842 -> NONTERM_typeWithTypeConstraints 
    | 843 -> NONTERM_topTypeWithTypeConstraints 
    | 844 -> NONTERM_topTypeWithTypeConstraints 
    | 845 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 846 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 847 -> NONTERM_topType 
    | 848 -> NONTERM_topType 
    | 849 -> NONTERM_topTupleType 
    | 850 -> NONTERM_topTupleType 
    | 851 -> NONTERM_topTupleTypeElements 
    | 852 -> NONTERM_topTupleTypeElements 
    | 853 -> NONTERM_topAppType 
    | 854 -> NONTERM_topAppType 
    | 855 -> NONTERM_topAppType 
    | 856 -> NONTERM_topAppType 
    | 857 -> NONTERM_topAppType 
    | 858 -> NONTERM_topAppType 
    | 859 -> NONTERM_typ 
    | 860 -> NONTERM_typ 
    | 861 -> NONTERM_typEOF 
    | 862 -> NONTERM_tupleType 
    | 863 -> NONTERM_tupleType 
    | 864 -> NONTERM_tupleType 
    | 865 -> NONTERM_tupleType 
    | 866 -> NONTERM_tupleOrQuotTypeElements 
    | 867 -> NONTERM_tupleOrQuotTypeElements 
    | 868 -> NONTERM_tupleOrQuotTypeElements 
    | 869 -> NONTERM_appTypeCon 
    | 870 -> NONTERM_appTypeCon 
    | 871 -> NONTERM_appTypeConPower 
    | 872 -> NONTERM_appTypeConPower 
    | 873 -> NONTERM_appType 
    | 874 -> NONTERM_appType 
    | 875 -> NONTERM_appType 
    | 876 -> NONTERM_appType 
    | 877 -> NONTERM_appType 
    | 878 -> NONTERM_appType 
    | 879 -> NONTERM_appType 
    | 880 -> NONTERM_arrayTypeSuffix 
    | 881 -> NONTERM_arrayTypeSuffix 
    | 882 -> NONTERM_arrayTypeSuffix 
    | 883 -> NONTERM_arrayTypeSuffix 
    | 884 -> NONTERM_appTypePrefixArguments 
    | 885 -> NONTERM_typeArgListElements 
    | 886 -> NONTERM_typeArgListElements 
    | 887 -> NONTERM_typeArgListElements 
    | 888 -> NONTERM_powerType 
    | 889 -> NONTERM_powerType 
    | 890 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 891 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 892 -> NONTERM_atomTypeOrAnonRecdType 
    | 893 -> NONTERM_atomTypeOrAnonRecdType 
    | 894 -> NONTERM_atomType 
    | 895 -> NONTERM_atomType 
    | 896 -> NONTERM_atomType 
    | 897 -> NONTERM_atomType 
    | 898 -> NONTERM_atomType 
    | 899 -> NONTERM_atomType 
    | 900 -> NONTERM_atomType 
    | 901 -> NONTERM_atomType 
    | 902 -> NONTERM_atomType 
    | 903 -> NONTERM_atomType 
    | 904 -> NONTERM_atomType 
    | 905 -> NONTERM_atomType 
    | 906 -> NONTERM_atomType 
    | 907 -> NONTERM_atomType 
    | 908 -> NONTERM_atomType 
    | 909 -> NONTERM_atomType 
    | 910 -> NONTERM_atomType 
    | 911 -> NONTERM_atomType 
    | 912 -> NONTERM_atomType 
    | 913 -> NONTERM_atomType 
    | 914 -> NONTERM_typeArgsNoHpaDeprecated 
    | 915 -> NONTERM_typeArgsNoHpaDeprecated 
    | 916 -> NONTERM_typeArgsActual 
    | 917 -> NONTERM_typeArgsActual 
    | 918 -> NONTERM_typeArgsActual 
    | 919 -> NONTERM_typeArgsActual 
    | 920 -> NONTERM_typeArgsActual 
    | 921 -> NONTERM_typeArgsActual 
    | 922 -> NONTERM_typeArgsActual 
    | 923 -> NONTERM_typeArgActual 
    | 924 -> NONTERM_typeArgActual 
    | 925 -> NONTERM_typeArgActual 
    | 926 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 927 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 928 -> NONTERM_dummyTypeArg 
    | 929 -> NONTERM_measureTypeArg 
    | 930 -> NONTERM_measureTypeArg 
    | 931 -> NONTERM_measureTypeAtom 
    | 932 -> NONTERM_measureTypeAtom 
    | 933 -> NONTERM_measureTypeAtom 
    | 934 -> NONTERM_measureTypePower 
    | 935 -> NONTERM_measureTypePower 
    | 936 -> NONTERM_measureTypePower 
    | 937 -> NONTERM_measureTypeSeq 
    | 938 -> NONTERM_measureTypeSeq 
    | 939 -> NONTERM_measureTypeExpr 
    | 940 -> NONTERM_measureTypeExpr 
    | 941 -> NONTERM_measureTypeExpr 
    | 942 -> NONTERM_measureTypeExpr 
    | 943 -> NONTERM_typar 
    | 944 -> NONTERM_typar 
    | 945 -> NONTERM_staticallyKnownHeadTypar 
    | 946 -> NONTERM_ident 
    | 947 -> NONTERM_path 
    | 948 -> NONTERM_path 
    | 949 -> NONTERM_path 
    | 950 -> NONTERM_path 
    | 951 -> NONTERM_opName 
    | 952 -> NONTERM_opName 
    | 953 -> NONTERM_opName 
    | 954 -> NONTERM_opName 
    | 955 -> NONTERM_opName 
    | 956 -> NONTERM_operatorName 
    | 957 -> NONTERM_operatorName 
    | 958 -> NONTERM_operatorName 
    | 959 -> NONTERM_operatorName 
    | 960 -> NONTERM_operatorName 
    | 961 -> NONTERM_operatorName 
    | 962 -> NONTERM_operatorName 
    | 963 -> NONTERM_operatorName 
    | 964 -> NONTERM_operatorName 
    | 965 -> NONTERM_operatorName 
    | 966 -> NONTERM_operatorName 
    | 967 -> NONTERM_operatorName 
    | 968 -> NONTERM_operatorName 
    | 969 -> NONTERM_operatorName 
    | 970 -> NONTERM_operatorName 
    | 971 -> NONTERM_operatorName 
    | 972 -> NONTERM_operatorName 
    | 973 -> NONTERM_operatorName 
    | 974 -> NONTERM_operatorName 
    | 975 -> NONTERM_operatorName 
    | 976 -> NONTERM_operatorName 
    | 977 -> NONTERM_operatorName 
    | 978 -> NONTERM_operatorName 
    | 979 -> NONTERM_operatorName 
    | 980 -> NONTERM_operatorName 
    | 981 -> NONTERM_operatorName 
    | 982 -> NONTERM_activePatternCaseName 
    | 983 -> NONTERM_activePatternCaseNames 
    | 984 -> NONTERM_activePatternCaseNames 
    | 985 -> NONTERM_identOrOp 
    | 986 -> NONTERM_identOrOp 
    | 987 -> NONTERM_pathOp 
    | 988 -> NONTERM_pathOp 
    | 989 -> NONTERM_pathOp 
    | 990 -> NONTERM_pathOp 
    | 991 -> NONTERM_nameop 
    | 992 -> NONTERM_identExpr 
    | 993 -> NONTERM_identExpr 
    | 994 -> NONTERM_topSeparator 
    | 995 -> NONTERM_topSeparator 
    | 996 -> NONTERM_topSeparator 
    | 997 -> NONTERM_topSeparators 
    | 998 -> NONTERM_topSeparators 
    | 999 -> NONTERM_opt_topSeparators 
    | 1000 -> NONTERM_opt_topSeparators 
    | 1001 -> NONTERM_seps 
    | 1002 -> NONTERM_seps 
    | 1003 -> NONTERM_seps 
    | 1004 -> NONTERM_seps 
    | 1005 -> NONTERM_declEnd 
    | 1006 -> NONTERM_declEnd 
    | 1007 -> NONTERM_declEnd 
    | 1008 -> NONTERM_opt_declEnd 
    | 1009 -> NONTERM_opt_declEnd 
    | 1010 -> NONTERM_opt_declEnd 
    | 1011 -> NONTERM_opt_declEnd 
    | 1012 -> NONTERM_opt_ODECLEND 
    | 1013 -> NONTERM_opt_ODECLEND 
    | 1014 -> NONTERM_deprecated_opt_equals 
    | 1015 -> NONTERM_deprecated_opt_equals 
    | 1016 -> NONTERM_opt_equals 
    | 1017 -> NONTERM_opt_equals 
    | 1018 -> NONTERM_opt_OBLOCKSEP 
    | 1019 -> NONTERM_opt_OBLOCKSEP 
    | 1020 -> NONTERM_opt_seps 
    | 1021 -> NONTERM_opt_seps 
    | 1022 -> NONTERM_opt_rec 
    | 1023 -> NONTERM_opt_rec 
    | 1024 -> NONTERM_opt_bar 
    | 1025 -> NONTERM_opt_bar 
    | 1026 -> NONTERM_opt_inline 
    | 1027 -> NONTERM_opt_inline 
    | 1028 -> NONTERM_opt_mutable 
    | 1029 -> NONTERM_opt_mutable 
    | 1030 -> NONTERM_doToken 
    | 1031 -> NONTERM_doToken 
    | 1032 -> NONTERM_doneDeclEnd 
    | 1033 -> NONTERM_doneDeclEnd 
    | 1034 -> NONTERM_structOrBegin 
    | 1035 -> NONTERM_structOrBegin 
    | 1036 -> NONTERM_sigOrBegin 
    | 1037 -> NONTERM_sigOrBegin 
    | 1038 -> NONTERM_colonOrEquals 
    | 1039 -> NONTERM_colonOrEquals 
    | 1040 -> NONTERM_string 
    | 1041 -> NONTERM_sourceIdentifier 
    | 1042 -> NONTERM_interpolatedStringFill 
    | 1043 -> NONTERM_interpolatedStringFill 
    | 1044 -> NONTERM_interpolatedStringParts 
    | 1045 -> NONTERM_interpolatedStringParts 
    | 1046 -> NONTERM_interpolatedStringParts 
    | 1047 -> NONTERM_interpolatedString 
    | 1048 -> NONTERM_interpolatedString 
    | 1049 -> NONTERM_interpolatedString 
    | 1050 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1051 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1052 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1053 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1054 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1055 -> NONTERM_typeKeyword 
    | 1056 -> NONTERM_typeKeyword 
    | 1057 -> NONTERM_typeKeyword 
    | 1058 -> NONTERM_moduleKeyword 
    | 1059 -> NONTERM_moduleKeyword 
    | 1060 -> NONTERM_moduleKeyword 
    | 1061 -> NONTERM_rbrace 
    | 1062 -> NONTERM_rbrace 
    | 1063 -> NONTERM_rbrace 
    | 1064 -> NONTERM_bar_rbrace 
    | 1065 -> NONTERM_rparen 
    | 1066 -> NONTERM_rparen 
    | 1067 -> NONTERM_rparen 
    | 1068 -> NONTERM_oblockend 
    | 1069 -> NONTERM_oblockend 
    | 1070 -> NONTERM_oblockend 
    | 1071 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1072 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1073 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1074 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1075 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1076 -> NONTERM_ends_coming_soon_or_recover 
    | 1077 -> NONTERM_ends_coming_soon_or_recover 
    | 1078 -> NONTERM_ends_coming_soon_or_recover 
    | 1079 -> NONTERM_ends_coming_soon_or_recover 
    | 1080 -> NONTERM_ends_coming_soon_or_recover 
    | 1081 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 204 
let _fsyacc_tagOfErrorTerminal = 202

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | FIXED  -> "FIXED" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OAND_BANG _ -> "OAND_BANG" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | BAR_RBRACE  -> "BAR_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACE_BAR  -> "LBRACE_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MATCH_BANG  -> "MATCH_BANG" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | DOT_DOT_HAT  -> "DOT_DOT_HAT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | AND_BANG _ -> "AND_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | NATIVEINT _ -> "NATIVEINT" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | HASH_IDENT _ -> "HASH_IDENT" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | LBRACE _ -> "LBRACE" 
  | RBRACE _ -> "RBRACE" 
  | INTERP_STRING_END _ -> "INTERP_STRING_END" 
  | INTERP_STRING_PART _ -> "INTERP_STRING_PART" 
  | INTERP_STRING_BEGIN_PART _ -> "INTERP_STRING_BEGIN_PART" 
  | INTERP_STRING_BEGIN_END _ -> "INTERP_STRING_BEGIN_END" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FIXED  -> (null : System.Object) 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OAND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | BAR_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACE_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MATCH_BANG  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | DOT_DOT_HAT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RBRACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_PART _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTERP_STRING_BEGIN_END _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 86us; 2us; 258us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 63us; 86us; 67us; 86us; 71us; 86us; 81us; 86us; 84us; 86us; 115us; 86us; 118us; 86us; 122us; 86us; 225us; 258us; 229us; 258us; 232us; 258us; 244us; 258us; 248us; 258us; 250us; 258us; 255us; 258us; 283us; 258us; 293us; 258us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 270us; 66us; 67us; 89us; 90us; 228us; 229us; 242us; 270us; 260us; 270us; 4us; 65535us; 58us; 62us; 60us; 62us; 220us; 224us; 222us; 224us; 1us; 65535us; 0us; 44us; 2us; 65535us; 58us; 59us; 60us; 61us; 2us; 65535us; 58us; 60us; 60us; 60us; 2us; 65535us; 0us; 58us; 63us; 64us; 3us; 65535us; 0us; 69us; 63us; 69us; 67us; 68us; 6us; 65535us; 0us; 70us; 63us; 70us; 67us; 70us; 71us; 72us; 118us; 119us; 122us; 123us; 9us; 65535us; 0us; 78us; 63us; 78us; 67us; 78us; 71us; 78us; 81us; 82us; 84us; 85us; 115us; 116us; 118us; 78us; 122us; 78us; 9us; 65535us; 0us; 80us; 63us; 80us; 67us; 80us; 71us; 80us; 81us; 80us; 84us; 80us; 115us; 80us; 118us; 80us; 122us; 80us; 9us; 65535us; 0us; 87us; 63us; 87us; 67us; 87us; 71us; 87us; 81us; 87us; 84us; 87us; 115us; 87us; 118us; 87us; 122us; 87us; 2us; 65535us; 107us; 108us; 181us; 182us; 1us; 65535us; 91us; 93us; 2us; 65535us; 95us; 96us; 126us; 127us; 3us; 65535us; 94us; 95us; 125us; 126us; 192us; 193us; 1us; 65535us; 129us; 130us; 2us; 65535us; 129us; 139us; 132us; 133us; 2us; 65535us; 129us; 142us; 132us; 142us; 2us; 65535us; 129us; 146us; 132us; 146us; 3us; 65535us; 147us; 148us; 157us; 158us; 211us; 212us; 8us; 65535us; 132us; 154us; 134us; 135us; 147us; 165us; 153us; 154us; 157us; 165us; 161us; 162us; 168us; 169us; 211us; 165us; 8us; 65535us; 132us; 166us; 134us; 166us; 147us; 166us; 153us; 166us; 157us; 166us; 161us; 166us; 168us; 166us; 211us; 166us; 11us; 65535us; 132us; 167us; 134us; 167us; 147us; 167us; 153us; 167us; 157us; 167us; 161us; 167us; 168us; 167us; 211us; 167us; 609us; 610us; 616us; 617us; 1401us; 1402us; 3us; 65535us; 180us; 181us; 436us; 437us; 466us; 467us; 2us; 65535us; 197us; 198us; 199us; 200us; 2us; 65535us; 172us; 174us; 173us; 174us; 2us; 65535us; 66us; 97us; 89us; 97us; 5us; 65535us; 128us; 131us; 135us; 136us; 137us; 138us; 139us; 140us; 209us; 210us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 214us; 2us; 65535us; 220us; 221us; 222us; 223us; 2us; 65535us; 220us; 222us; 222us; 222us; 2us; 65535us; 2us; 220us; 225us; 226us; 3us; 65535us; 2us; 231us; 225us; 231us; 229us; 230us; 5us; 65535us; 2us; 239us; 225us; 239us; 229us; 239us; 232us; 233us; 293us; 294us; 9us; 65535us; 2us; 240us; 225us; 240us; 229us; 240us; 232us; 240us; 244us; 245us; 250us; 251us; 255us; 256us; 283us; 287us; 293us; 240us; 10us; 65535us; 2us; 246us; 225us; 246us; 229us; 246us; 232us; 246us; 244us; 246us; 248us; 249us; 250us; 246us; 255us; 246us; 283us; 246us; 293us; 246us; 10us; 65535us; 2us; 248us; 225us; 248us; 229us; 248us; 232us; 248us; 244us; 248us; 248us; 248us; 250us; 248us; 255us; 248us; 283us; 248us; 293us; 248us; 15us; 65535us; 2us; 257us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 225us; 257us; 229us; 257us; 232us; 257us; 244us; 257us; 248us; 257us; 250us; 257us; 255us; 257us; 283us; 257us; 293us; 257us; 24us; 65535us; 0us; 98us; 2us; 275us; 4us; 275us; 22us; 275us; 24us; 275us; 26us; 275us; 28us; 275us; 63us; 98us; 67us; 98us; 71us; 98us; 81us; 98us; 84us; 98us; 115us; 98us; 118us; 98us; 122us; 98us; 225us; 275us; 229us; 275us; 232us; 275us; 244us; 275us; 248us; 275us; 250us; 275us; 255us; 275us; 283us; 275us; 293us; 275us; 1us; 65535us; 91us; 92us; 1us; 65535us; 271us; 272us; 2us; 65535us; 271us; 291us; 283us; 284us; 1us; 65535us; 348us; 351us; 82us; 65535us; 0us; 65us; 2us; 227us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 259us; 50us; 51us; 63us; 65us; 67us; 88us; 71us; 88us; 81us; 88us; 84us; 88us; 94us; 342us; 99us; 100us; 115us; 88us; 118us; 88us; 122us; 88us; 125us; 342us; 129us; 528us; 132us; 171us; 134us; 170us; 147us; 170us; 153us; 170us; 157us; 170us; 161us; 170us; 168us; 170us; 192us; 342us; 211us; 170us; 225us; 227us; 229us; 241us; 232us; 241us; 244us; 241us; 248us; 259us; 250us; 241us; 255us; 241us; 266us; 342us; 283us; 241us; 293us; 241us; 298us; 419us; 345us; 342us; 348us; 352us; 349us; 528us; 357us; 528us; 359us; 420us; 361us; 419us; 375us; 419us; 379us; 419us; 381us; 419us; 385us; 419us; 391us; 419us; 394us; 419us; 405us; 406us; 452us; 342us; 487us; 515us; 490us; 419us; 507us; 515us; 513us; 515us; 542us; 673us; 551us; 673us; 568us; 577us; 573us; 577us; 574us; 577us; 580us; 577us; 585us; 577us; 609us; 170us; 616us; 170us; 625us; 635us; 628us; 635us; 633us; 635us; 670us; 673us; 682us; 683us; 694us; 745us; 700us; 745us; 712us; 739us; 717us; 726us; 722us; 726us; 724us; 726us; 742us; 745us; 1401us; 170us; 1500us; 516us; 1502us; 745us; 120us; 65535us; 0us; 301us; 2us; 273us; 4us; 273us; 22us; 273us; 24us; 273us; 26us; 273us; 28us; 273us; 50us; 301us; 63us; 301us; 67us; 301us; 71us; 301us; 81us; 301us; 84us; 301us; 94us; 301us; 99us; 301us; 106us; 1566us; 115us; 301us; 118us; 301us; 122us; 301us; 125us; 301us; 129us; 301us; 132us; 301us; 134us; 301us; 144us; 1566us; 147us; 301us; 153us; 301us; 157us; 301us; 161us; 301us; 168us; 301us; 179us; 1566us; 192us; 301us; 195us; 1566us; 211us; 301us; 225us; 273us; 229us; 273us; 232us; 273us; 244us; 273us; 248us; 273us; 250us; 273us; 255us; 273us; 266us; 301us; 283us; 273us; 293us; 273us; 298us; 301us; 302us; 303us; 345us; 301us; 348us; 301us; 349us; 301us; 357us; 301us; 359us; 301us; 361us; 301us; 372us; 1566us; 375us; 301us; 379us; 301us; 381us; 301us; 385us; 301us; 391us; 301us; 394us; 301us; 405us; 301us; 435us; 1566us; 452us; 301us; 487us; 301us; 490us; 301us; 507us; 301us; 513us; 301us; 542us; 301us; 551us; 301us; 568us; 301us; 573us; 301us; 574us; 301us; 580us; 301us; 585us; 301us; 609us; 301us; 616us; 301us; 625us; 301us; 628us; 301us; 633us; 301us; 641us; 1566us; 670us; 301us; 682us; 301us; 694us; 301us; 700us; 301us; 712us; 301us; 717us; 301us; 722us; 301us; 724us; 301us; 742us; 301us; 819us; 819us; 820us; 819us; 822us; 819us; 857us; 939us; 874us; 939us; 890us; 939us; 893us; 939us; 904us; 939us; 912us; 939us; 934us; 939us; 939us; 939us; 940us; 939us; 942us; 939us; 943us; 939us; 944us; 939us; 945us; 939us; 951us; 939us; 953us; 939us; 1058us; 939us; 1218us; 939us; 1220us; 939us; 1225us; 939us; 1232us; 939us; 1235us; 939us; 1401us; 301us; 1500us; 301us; 1502us; 301us; 1546us; 939us; 1548us; 939us; 1555us; 1566us; 1558us; 1566us; 1561us; 1566us; 1564us; 1566us; 120us; 65535us; 0us; 302us; 2us; 302us; 4us; 302us; 22us; 302us; 24us; 302us; 26us; 302us; 28us; 302us; 50us; 302us; 63us; 302us; 67us; 302us; 71us; 302us; 81us; 302us; 84us; 302us; 94us; 302us; 99us; 302us; 106us; 302us; 115us; 302us; 118us; 302us; 122us; 302us; 125us; 302us; 129us; 302us; 132us; 302us; 134us; 302us; 144us; 302us; 147us; 302us; 153us; 302us; 157us; 302us; 161us; 302us; 168us; 302us; 179us; 302us; 192us; 302us; 195us; 302us; 211us; 302us; 225us; 302us; 229us; 302us; 232us; 302us; 244us; 302us; 248us; 302us; 250us; 302us; 255us; 302us; 266us; 302us; 283us; 302us; 293us; 302us; 298us; 302us; 302us; 302us; 345us; 302us; 348us; 302us; 349us; 302us; 357us; 302us; 359us; 302us; 361us; 302us; 372us; 302us; 375us; 302us; 379us; 302us; 381us; 302us; 385us; 302us; 391us; 302us; 394us; 302us; 405us; 302us; 435us; 302us; 452us; 302us; 487us; 302us; 490us; 302us; 507us; 302us; 513us; 302us; 542us; 302us; 551us; 302us; 568us; 302us; 573us; 302us; 574us; 302us; 580us; 302us; 585us; 302us; 609us; 302us; 616us; 302us; 625us; 302us; 628us; 302us; 633us; 302us; 641us; 302us; 670us; 302us; 682us; 302us; 694us; 302us; 700us; 302us; 712us; 302us; 717us; 302us; 722us; 302us; 724us; 302us; 742us; 302us; 819us; 302us; 820us; 302us; 822us; 302us; 857us; 302us; 874us; 302us; 890us; 302us; 893us; 302us; 904us; 302us; 912us; 302us; 934us; 302us; 939us; 302us; 940us; 302us; 942us; 302us; 943us; 302us; 944us; 302us; 945us; 302us; 951us; 302us; 953us; 302us; 1058us; 302us; 1218us; 302us; 1220us; 302us; 1225us; 302us; 1232us; 302us; 1235us; 302us; 1401us; 302us; 1500us; 302us; 1502us; 302us; 1546us; 302us; 1548us; 302us; 1555us; 302us; 1558us; 302us; 1561us; 302us; 1564us; 302us; 1us; 65535us; 304us; 305us; 2us; 65535us; 304us; 314us; 315us; 316us; 2us; 65535us; 304us; 320us; 315us; 320us; 4us; 65535us; 172us; 206us; 173us; 206us; 421us; 425us; 422us; 425us; 6us; 65535us; 94us; 128us; 125us; 128us; 192us; 128us; 266us; 348us; 345us; 348us; 452us; 348us; 2us; 65535us; 267us; 268us; 346us; 347us; 3us; 65535us; 266us; 267us; 345us; 346us; 452us; 453us; 2us; 65535us; 349us; 350us; 357us; 358us; 3us; 65535us; 349us; 367us; 357us; 367us; 359us; 360us; 3us; 65535us; 349us; 370us; 357us; 370us; 359us; 370us; 3us; 65535us; 349us; 374us; 357us; 374us; 359us; 374us; 3us; 65535us; 298us; 299us; 375us; 376us; 490us; 491us; 10us; 65535us; 298us; 389us; 359us; 382us; 361us; 362us; 375us; 389us; 379us; 392us; 381us; 382us; 385us; 386us; 391us; 392us; 394us; 395us; 490us; 389us; 10us; 65535us; 298us; 390us; 359us; 390us; 361us; 390us; 375us; 390us; 379us; 390us; 381us; 390us; 385us; 390us; 391us; 390us; 394us; 390us; 490us; 390us; 1us; 65535us; 413us; 416us; 2us; 65535us; 396us; 397us; 398us; 399us; 3us; 65535us; 396us; 402us; 398us; 402us; 403us; 404us; 3us; 65535us; 425us; 426us; 517us; 518us; 523us; 524us; 2us; 65535us; 421us; 431us; 422us; 431us; 10us; 65535us; 298us; 393us; 359us; 393us; 361us; 393us; 375us; 393us; 379us; 393us; 381us; 393us; 385us; 393us; 391us; 393us; 394us; 393us; 490us; 393us; 3us; 65535us; 337us; 442us; 421us; 440us; 422us; 440us; 2us; 65535us; 425us; 444us; 517us; 520us; 1us; 65535us; 463us; 464us; 50us; 65535us; 406us; 859us; 411us; 859us; 446us; 899us; 749us; 859us; 840us; 859us; 842us; 859us; 843us; 859us; 847us; 859us; 848us; 859us; 849us; 859us; 850us; 859us; 857us; 859us; 859us; 899us; 860us; 899us; 862us; 899us; 864us; 899us; 867us; 899us; 869us; 899us; 874us; 859us; 878us; 899us; 880us; 899us; 882us; 899us; 890us; 859us; 893us; 859us; 904us; 859us; 912us; 859us; 932us; 859us; 934us; 859us; 939us; 859us; 940us; 859us; 942us; 859us; 943us; 859us; 944us; 859us; 945us; 859us; 951us; 859us; 953us; 859us; 996us; 859us; 1001us; 859us; 1058us; 859us; 1087us; 859us; 1094us; 859us; 1218us; 859us; 1220us; 859us; 1225us; 859us; 1232us; 859us; 1235us; 859us; 1528us; 899us; 1533us; 899us; 1546us; 859us; 1548us; 859us; 10us; 65535us; 51us; 52us; 102us; 103us; 175us; 176us; 342us; 562us; 455us; 456us; 461us; 462us; 635us; 636us; 675us; 676us; 683us; 684us; 713us; 714us; 72us; 65535us; 30us; 486us; 51us; 482us; 65us; 486us; 88us; 486us; 102us; 482us; 170us; 486us; 171us; 486us; 175us; 482us; 227us; 486us; 241us; 486us; 259us; 486us; 342us; 482us; 352us; 486us; 406us; 477us; 411us; 477us; 419us; 486us; 420us; 486us; 446us; 477us; 455us; 482us; 461us; 482us; 528us; 486us; 635us; 482us; 675us; 482us; 683us; 482us; 713us; 482us; 749us; 477us; 840us; 477us; 842us; 477us; 843us; 477us; 847us; 477us; 848us; 477us; 849us; 477us; 850us; 477us; 857us; 477us; 859us; 477us; 860us; 477us; 862us; 477us; 864us; 477us; 867us; 477us; 869us; 477us; 874us; 477us; 878us; 477us; 880us; 477us; 882us; 477us; 890us; 477us; 893us; 477us; 904us; 477us; 912us; 477us; 932us; 477us; 934us; 477us; 939us; 477us; 940us; 477us; 942us; 477us; 943us; 477us; 944us; 477us; 945us; 477us; 951us; 477us; 953us; 477us; 996us; 477us; 1001us; 477us; 1058us; 477us; 1087us; 477us; 1094us; 477us; 1218us; 477us; 1220us; 477us; 1225us; 477us; 1232us; 477us; 1235us; 477us; 1528us; 477us; 1533us; 477us; 1546us; 477us; 1548us; 477us; 12us; 65535us; 30us; 31us; 65us; 66us; 88us; 89us; 170us; 172us; 171us; 173us; 227us; 228us; 241us; 242us; 259us; 260us; 352us; 353us; 419us; 421us; 420us; 422us; 528us; 529us; 1us; 65535us; 429us; 430us; 4us; 65535us; 362us; 363us; 364us; 365us; 367us; 368us; 680us; 681us; 2us; 65535us; 421us; 439us; 422us; 439us; 2us; 65535us; 355us; 356us; 447us; 448us; 2us; 65535us; 355us; 500us; 447us; 500us; 2us; 65535us; 494us; 495us; 497us; 498us; 3us; 65535us; 494us; 503us; 497us; 503us; 1288us; 1498us; 2us; 65535us; 487us; 488us; 1500us; 1505us; 4us; 65535us; 487us; 511us; 507us; 508us; 513us; 514us; 1500us; 511us; 4us; 65535us; 487us; 512us; 507us; 512us; 513us; 512us; 1500us; 512us; 2us; 65535us; 515us; 517us; 516us; 517us; 5us; 65535us; 129us; 141us; 132us; 141us; 349us; 369us; 357us; 369us; 359us; 369us; 6us; 65535us; 173us; 536us; 422us; 536us; 529us; 536us; 638us; 667us; 658us; 667us; 688us; 667us; 67us; 65535us; 8us; 1645us; 106us; 1645us; 144us; 1645us; 173us; 1645us; 179us; 1645us; 183us; 1645us; 185us; 1645us; 195us; 1645us; 278us; 1645us; 372us; 1645us; 422us; 1645us; 428us; 1645us; 435us; 1645us; 458us; 1645us; 468us; 1645us; 529us; 1645us; 537us; 1645us; 599us; 1645us; 602us; 1645us; 612us; 1645us; 622us; 1645us; 638us; 1645us; 641us; 1645us; 658us; 1645us; 661us; 1645us; 664us; 1645us; 678us; 1645us; 688us; 1645us; 772us; 1645us; 817us; 1645us; 871us; 1645us; 937us; 1645us; 967us; 1645us; 1151us; 1645us; 1153us; 1645us; 1155us; 1645us; 1444us; 1645us; 1447us; 1645us; 1449us; 1645us; 1513us; 1645us; 1555us; 1645us; 1558us; 1645us; 1561us; 1645us; 1564us; 1645us; 1566us; 1645us; 1568us; 1645us; 1572us; 1645us; 1575us; 1645us; 1579us; 1645us; 1582us; 1645us; 1587us; 1645us; 1589us; 1645us; 1591us; 1645us; 1594us; 1645us; 1596us; 1645us; 1610us; 1645us; 1615us; 1645us; 1618us; 1645us; 1629us; 1645us; 1633us; 1645us; 1639us; 1645us; 1650us; 1645us; 1656us; 1645us; 1657us; 1645us; 1680us; 1645us; 1682us; 1645us; 1693us; 1645us; 68us; 65535us; 8us; 550us; 106us; 550us; 144us; 550us; 173us; 550us; 179us; 550us; 183us; 550us; 185us; 550us; 195us; 550us; 278us; 550us; 372us; 550us; 422us; 550us; 428us; 550us; 435us; 550us; 458us; 550us; 468us; 550us; 529us; 550us; 537us; 550us; 548us; 549us; 599us; 550us; 602us; 550us; 612us; 550us; 622us; 550us; 638us; 550us; 641us; 550us; 658us; 550us; 661us; 550us; 664us; 550us; 678us; 550us; 688us; 550us; 772us; 550us; 817us; 550us; 871us; 550us; 937us; 550us; 967us; 550us; 1151us; 550us; 1153us; 550us; 1155us; 550us; 1444us; 550us; 1447us; 550us; 1449us; 550us; 1513us; 550us; 1555us; 550us; 1558us; 550us; 1561us; 550us; 1564us; 550us; 1566us; 550us; 1568us; 550us; 1572us; 550us; 1575us; 550us; 1579us; 550us; 1582us; 550us; 1587us; 550us; 1589us; 550us; 1591us; 550us; 1594us; 550us; 1596us; 550us; 1610us; 550us; 1615us; 550us; 1618us; 550us; 1629us; 550us; 1633us; 550us; 1639us; 550us; 1650us; 550us; 1656us; 550us; 1657us; 550us; 1680us; 550us; 1682us; 550us; 1693us; 550us; 5us; 65535us; 129us; 147us; 132us; 147us; 349us; 375us; 357us; 375us; 359us; 375us; 9us; 65535us; 172us; 183us; 173us; 183us; 421us; 428us; 422us; 428us; 1494us; 1513us; 1496us; 1513us; 1507us; 1513us; 1509us; 1513us; 1511us; 1513us; 1us; 65535us; 342us; 343us; 1us; 65535us; 562us; 564us; 3us; 65535us; 568us; 569us; 580us; 571us; 585us; 572us; 5us; 65535us; 568us; 576us; 573us; 575us; 574us; 575us; 580us; 576us; 585us; 576us; 1us; 65535us; 563us; 566us; 1us; 65535us; 585us; 586us; 4us; 65535us; 104us; 589us; 177us; 589us; 433us; 589us; 859us; 860us; 3us; 65535us; 104us; 105us; 177us; 178us; 433us; 434us; 3us; 65535us; 343us; 344us; 571us; 581us; 586us; 587us; 3us; 65535us; 590us; 591us; 1552us; 592us; 1554us; 593us; 4us; 65535us; 590us; 596us; 594us; 595us; 1552us; 596us; 1554us; 596us; 1us; 65535us; 612us; 613us; 3us; 65535us; 173us; 535us; 422us; 535us; 529us; 535us; 5us; 65535us; 173us; 625us; 422us; 625us; 529us; 625us; 627us; 628us; 632us; 633us; 3us; 65535us; 625us; 626us; 628us; 629us; 633us; 634us; 3us; 65535us; 625us; 632us; 628us; 632us; 633us; 632us; 1us; 65535us; 636us; 637us; 3us; 65535us; 173us; 627us; 422us; 627us; 529us; 627us; 3us; 65535us; 173us; 630us; 422us; 630us; 529us; 630us; 4us; 65535us; 638us; 668us; 658us; 668us; 661us; 662us; 688us; 668us; 4us; 65535us; 638us; 660us; 658us; 660us; 661us; 660us; 688us; 660us; 3us; 65535us; 638us; 639us; 658us; 659us; 688us; 689us; 3us; 65535us; 542us; 543us; 551us; 552us; 670us; 671us; 3us; 65535us; 542us; 669us; 551us; 669us; 670us; 669us; 3us; 65535us; 187us; 188us; 190us; 191us; 673us; 674us; 4us; 65535us; 31us; 269us; 228us; 269us; 242us; 269us; 260us; 269us; 6us; 65535us; 31us; 680us; 66us; 209us; 89us; 209us; 228us; 680us; 242us; 680us; 260us; 680us; 1us; 65535us; 684us; 685us; 1us; 65535us; 685us; 686us; 120us; 65535us; 6us; 1007us; 31us; 262us; 109us; 1007us; 111us; 1007us; 228us; 262us; 242us; 262us; 260us; 261us; 264us; 1007us; 337us; 706us; 409us; 1007us; 414us; 1007us; 421us; 706us; 422us; 706us; 449us; 1007us; 465us; 1007us; 697us; 1007us; 703us; 1007us; 752us; 1007us; 756us; 1007us; 766us; 1007us; 955us; 1007us; 960us; 1007us; 972us; 1007us; 974us; 1007us; 977us; 1007us; 980us; 1007us; 997us; 1007us; 1002us; 1007us; 1008us; 1007us; 1011us; 1007us; 1014us; 1007us; 1020us; 1007us; 1024us; 1007us; 1028us; 1007us; 1032us; 1007us; 1034us; 1007us; 1039us; 1007us; 1041us; 1007us; 1043us; 1007us; 1045us; 1007us; 1047us; 1007us; 1049us; 1007us; 1060us; 1007us; 1068us; 1007us; 1075us; 1007us; 1081us; 1007us; 1083us; 1007us; 1088us; 1007us; 1092us; 1007us; 1095us; 1007us; 1099us; 1007us; 1102us; 1007us; 1105us; 1007us; 1107us; 1007us; 1112us; 1007us; 1114us; 1007us; 1157us; 1007us; 1159us; 1007us; 1163us; 1007us; 1164us; 1007us; 1165us; 1007us; 1166us; 1007us; 1167us; 1007us; 1168us; 1007us; 1169us; 1007us; 1170us; 1007us; 1171us; 1007us; 1172us; 1007us; 1173us; 1007us; 1175us; 1007us; 1176us; 1007us; 1177us; 1007us; 1178us; 1007us; 1179us; 1007us; 1180us; 1007us; 1181us; 1007us; 1182us; 1007us; 1183us; 1007us; 1204us; 1007us; 1205us; 1007us; 1206us; 1007us; 1207us; 1007us; 1210us; 1007us; 1211us; 1007us; 1212us; 1007us; 1213us; 1007us; 1215us; 1007us; 1239us; 1007us; 1240us; 1007us; 1244us; 1007us; 1246us; 1007us; 1250us; 1007us; 1252us; 1007us; 1256us; 1007us; 1259us; 1007us; 1261us; 1007us; 1327us; 1007us; 1334us; 1007us; 1341us; 1007us; 1348us; 1007us; 1365us; 1007us; 1372us; 1007us; 1373us; 1007us; 1379us; 1007us; 1385us; 1007us; 1386us; 1007us; 1387us; 1007us; 1403us; 1007us; 1413us; 1007us; 1426us; 1007us; 1428us; 1007us; 1431us; 1007us; 1432us; 1007us; 1458us; 1007us; 1463us; 1007us; 1488us; 1007us; 1530us; 1007us; 1535us; 1007us; 1825us; 1007us; 1829us; 1007us; 7us; 65535us; 31us; 265us; 228us; 265us; 242us; 265us; 260us; 265us; 337us; 707us; 421us; 707us; 422us; 707us; 120us; 65535us; 6us; 980us; 31us; 264us; 109us; 1011us; 111us; 1011us; 228us; 264us; 242us; 264us; 260us; 263us; 264us; 980us; 337us; 708us; 409us; 980us; 414us; 980us; 421us; 708us; 422us; 708us; 449us; 980us; 465us; 980us; 697us; 980us; 703us; 980us; 752us; 980us; 756us; 980us; 766us; 980us; 955us; 980us; 960us; 980us; 972us; 980us; 974us; 980us; 977us; 980us; 980us; 980us; 997us; 980us; 1002us; 980us; 1008us; 980us; 1011us; 980us; 1014us; 980us; 1020us; 980us; 1024us; 980us; 1028us; 980us; 1032us; 980us; 1034us; 1011us; 1039us; 1011us; 1041us; 1011us; 1043us; 1011us; 1045us; 1011us; 1047us; 1011us; 1049us; 980us; 1060us; 980us; 1068us; 980us; 1075us; 980us; 1081us; 1011us; 1083us; 1011us; 1088us; 980us; 1092us; 980us; 1095us; 980us; 1099us; 980us; 1102us; 980us; 1105us; 980us; 1107us; 980us; 1112us; 1011us; 1114us; 980us; 1157us; 1011us; 1159us; 1011us; 1163us; 1011us; 1164us; 1011us; 1165us; 1011us; 1166us; 1011us; 1167us; 1011us; 1168us; 1011us; 1169us; 1011us; 1170us; 1011us; 1171us; 1011us; 1172us; 1011us; 1173us; 1011us; 1175us; 1011us; 1176us; 1011us; 1177us; 1011us; 1178us; 1011us; 1179us; 1011us; 1180us; 1011us; 1181us; 1011us; 1182us; 1011us; 1183us; 1011us; 1204us; 1011us; 1205us; 1011us; 1206us; 1011us; 1207us; 1011us; 1210us; 1011us; 1211us; 1011us; 1212us; 1011us; 1213us; 1011us; 1215us; 980us; 1239us; 1011us; 1240us; 980us; 1244us; 1011us; 1246us; 980us; 1250us; 1011us; 1252us; 980us; 1256us; 1011us; 1259us; 1011us; 1261us; 1011us; 1327us; 980us; 1334us; 1011us; 1341us; 980us; 1348us; 980us; 1365us; 980us; 1372us; 980us; 1373us; 980us; 1379us; 980us; 1385us; 980us; 1386us; 980us; 1387us; 980us; 1403us; 980us; 1413us; 980us; 1426us; 980us; 1428us; 1011us; 1431us; 1011us; 1432us; 1011us; 1458us; 1011us; 1463us; 1011us; 1488us; 1011us; 1530us; 980us; 1535us; 980us; 1825us; 1011us; 1829us; 1011us; 119us; 65535us; 6us; 1017us; 31us; 1017us; 109us; 1017us; 111us; 1017us; 228us; 1017us; 242us; 1017us; 264us; 1017us; 337us; 709us; 409us; 1017us; 414us; 1017us; 421us; 709us; 422us; 709us; 449us; 1017us; 465us; 1017us; 697us; 1017us; 703us; 1017us; 752us; 1017us; 756us; 1017us; 766us; 1017us; 955us; 1017us; 960us; 1017us; 972us; 1017us; 974us; 1017us; 977us; 1017us; 980us; 1017us; 997us; 1017us; 1002us; 1017us; 1008us; 1017us; 1011us; 1017us; 1014us; 1017us; 1020us; 1017us; 1024us; 1017us; 1028us; 1017us; 1032us; 1017us; 1034us; 1017us; 1039us; 1017us; 1041us; 1017us; 1043us; 1017us; 1045us; 1017us; 1047us; 1017us; 1049us; 1017us; 1060us; 1017us; 1068us; 1017us; 1075us; 1017us; 1081us; 1017us; 1083us; 1017us; 1088us; 1017us; 1092us; 1017us; 1095us; 1017us; 1099us; 1017us; 1102us; 1017us; 1105us; 1017us; 1107us; 1017us; 1112us; 1017us; 1114us; 1017us; 1157us; 1017us; 1159us; 1017us; 1163us; 1017us; 1164us; 1017us; 1165us; 1017us; 1166us; 1017us; 1167us; 1017us; 1168us; 1017us; 1169us; 1017us; 1170us; 1017us; 1171us; 1017us; 1172us; 1017us; 1173us; 1017us; 1175us; 1017us; 1176us; 1017us; 1177us; 1017us; 1178us; 1017us; 1179us; 1017us; 1180us; 1017us; 1181us; 1017us; 1182us; 1017us; 1183us; 1017us; 1204us; 1017us; 1205us; 1017us; 1206us; 1017us; 1207us; 1017us; 1210us; 1017us; 1211us; 1017us; 1212us; 1017us; 1213us; 1017us; 1215us; 1017us; 1239us; 1017us; 1240us; 1017us; 1244us; 1017us; 1246us; 1017us; 1250us; 1017us; 1252us; 1017us; 1256us; 1017us; 1259us; 1017us; 1261us; 1017us; 1327us; 1017us; 1334us; 1017us; 1341us; 1017us; 1348us; 1017us; 1365us; 1017us; 1372us; 1017us; 1373us; 1017us; 1379us; 1017us; 1385us; 1017us; 1386us; 1017us; 1387us; 1017us; 1403us; 1017us; 1413us; 1017us; 1426us; 1017us; 1428us; 1017us; 1431us; 1017us; 1432us; 1017us; 1458us; 1017us; 1463us; 1017us; 1488us; 1017us; 1530us; 1017us; 1535us; 1017us; 1825us; 1017us; 1829us; 1017us; 3us; 65535us; 337us; 424us; 421us; 423us; 422us; 423us; 5us; 65535us; 701us; 702us; 704us; 705us; 1003us; 1004us; 1096us; 1097us; 1108us; 1109us; 120us; 65535us; 6us; 696us; 31us; 696us; 109us; 696us; 111us; 696us; 228us; 696us; 242us; 696us; 260us; 696us; 264us; 696us; 337us; 696us; 409us; 696us; 414us; 696us; 421us; 696us; 422us; 696us; 449us; 696us; 465us; 696us; 697us; 696us; 703us; 696us; 752us; 696us; 756us; 696us; 766us; 696us; 955us; 696us; 960us; 696us; 972us; 696us; 974us; 696us; 977us; 696us; 980us; 696us; 997us; 696us; 1002us; 696us; 1008us; 696us; 1011us; 696us; 1014us; 696us; 1020us; 696us; 1024us; 696us; 1028us; 696us; 1032us; 696us; 1034us; 696us; 1039us; 696us; 1041us; 696us; 1043us; 696us; 1045us; 696us; 1047us; 696us; 1049us; 696us; 1060us; 696us; 1068us; 696us; 1075us; 696us; 1081us; 696us; 1083us; 696us; 1088us; 696us; 1092us; 696us; 1095us; 696us; 1099us; 696us; 1102us; 696us; 1105us; 696us; 1107us; 696us; 1112us; 696us; 1114us; 696us; 1157us; 696us; 1159us; 696us; 1163us; 696us; 1164us; 696us; 1165us; 696us; 1166us; 696us; 1167us; 696us; 1168us; 696us; 1169us; 696us; 1170us; 696us; 1171us; 696us; 1172us; 696us; 1173us; 696us; 1175us; 696us; 1176us; 696us; 1177us; 696us; 1178us; 696us; 1179us; 696us; 1180us; 696us; 1181us; 696us; 1182us; 696us; 1183us; 696us; 1204us; 696us; 1205us; 696us; 1206us; 696us; 1207us; 696us; 1210us; 696us; 1211us; 696us; 1212us; 696us; 1213us; 696us; 1215us; 696us; 1239us; 696us; 1240us; 696us; 1244us; 696us; 1246us; 696us; 1250us; 696us; 1252us; 696us; 1256us; 696us; 1259us; 696us; 1261us; 696us; 1327us; 696us; 1334us; 696us; 1341us; 696us; 1348us; 696us; 1365us; 696us; 1372us; 696us; 1373us; 696us; 1379us; 696us; 1385us; 696us; 1386us; 696us; 1387us; 696us; 1403us; 696us; 1413us; 696us; 1426us; 696us; 1428us; 696us; 1431us; 696us; 1432us; 696us; 1458us; 696us; 1463us; 696us; 1488us; 696us; 1530us; 696us; 1535us; 696us; 1825us; 696us; 1829us; 696us; 1us; 65535us; 717us; 718us; 1us; 65535us; 717us; 720us; 3us; 65535us; 717us; 721us; 722us; 723us; 724us; 725us; 2us; 65535us; 726us; 727us; 739us; 730us; 1us; 65535us; 712us; 713us; 4us; 65535us; 694us; 695us; 700us; 701us; 1500us; 1501us; 1502us; 1503us; 2us; 65535us; 740us; 741us; 743us; 744us; 5us; 65535us; 694us; 740us; 700us; 740us; 742us; 743us; 1500us; 740us; 1502us; 740us; 2us; 65535us; 516us; 746us; 745us; 746us; 1us; 65535us; 752us; 753us; 2us; 65535us; 752us; 760us; 756us; 757us; 1us; 65535us; 761us; 762us; 1us; 65535us; 762us; 763us; 1us; 65535us; 764us; 765us; 2us; 65535us; 764us; 770us; 768us; 769us; 273us; 65535us; 6us; 808us; 8us; 1664us; 31us; 808us; 106us; 1664us; 109us; 808us; 111us; 808us; 144us; 1664us; 173us; 1664us; 179us; 1664us; 183us; 1664us; 185us; 1664us; 195us; 1664us; 228us; 808us; 242us; 808us; 264us; 808us; 278us; 1664us; 318us; 808us; 322us; 808us; 327us; 808us; 372us; 1664us; 406us; 808us; 409us; 808us; 411us; 808us; 414us; 808us; 422us; 1664us; 428us; 1664us; 435us; 1664us; 446us; 808us; 449us; 808us; 458us; 1664us; 465us; 808us; 468us; 1664us; 493us; 1664us; 496us; 808us; 529us; 1664us; 537us; 1664us; 538us; 1664us; 599us; 1664us; 602us; 1664us; 612us; 1664us; 622us; 1664us; 638us; 1664us; 641us; 1664us; 643us; 808us; 654us; 808us; 658us; 1664us; 661us; 1664us; 664us; 1664us; 678us; 1664us; 688us; 1664us; 697us; 808us; 703us; 808us; 749us; 808us; 752us; 808us; 756us; 808us; 766us; 808us; 772us; 1664us; 817us; 1664us; 840us; 808us; 842us; 808us; 843us; 808us; 847us; 808us; 848us; 808us; 849us; 808us; 850us; 808us; 857us; 808us; 859us; 808us; 860us; 808us; 862us; 808us; 864us; 808us; 867us; 808us; 869us; 808us; 871us; 1664us; 874us; 808us; 878us; 808us; 880us; 808us; 882us; 808us; 890us; 808us; 893us; 808us; 904us; 808us; 912us; 808us; 932us; 808us; 934us; 808us; 937us; 1664us; 939us; 808us; 940us; 808us; 942us; 808us; 943us; 808us; 944us; 808us; 945us; 808us; 951us; 808us; 953us; 808us; 955us; 808us; 960us; 808us; 967us; 1664us; 972us; 808us; 974us; 808us; 977us; 808us; 980us; 808us; 996us; 808us; 997us; 808us; 1001us; 808us; 1002us; 808us; 1008us; 808us; 1011us; 808us; 1014us; 808us; 1020us; 808us; 1024us; 808us; 1028us; 808us; 1032us; 808us; 1034us; 808us; 1039us; 808us; 1041us; 808us; 1043us; 808us; 1045us; 808us; 1047us; 808us; 1049us; 808us; 1058us; 808us; 1060us; 808us; 1068us; 808us; 1075us; 808us; 1081us; 808us; 1083us; 808us; 1087us; 808us; 1088us; 808us; 1092us; 808us; 1094us; 808us; 1095us; 808us; 1099us; 808us; 1102us; 808us; 1105us; 808us; 1107us; 808us; 1112us; 808us; 1114us; 808us; 1151us; 1664us; 1153us; 1664us; 1155us; 1664us; 1157us; 808us; 1159us; 808us; 1163us; 808us; 1164us; 808us; 1165us; 808us; 1166us; 808us; 1167us; 808us; 1168us; 808us; 1169us; 808us; 1170us; 808us; 1171us; 808us; 1172us; 808us; 1173us; 808us; 1175us; 808us; 1176us; 808us; 1177us; 808us; 1178us; 808us; 1179us; 808us; 1180us; 808us; 1181us; 808us; 1182us; 808us; 1183us; 808us; 1204us; 808us; 1205us; 808us; 1206us; 808us; 1207us; 808us; 1210us; 808us; 1211us; 808us; 1212us; 808us; 1213us; 808us; 1215us; 808us; 1218us; 808us; 1220us; 808us; 1225us; 808us; 1232us; 808us; 1235us; 808us; 1239us; 808us; 1240us; 808us; 1244us; 808us; 1246us; 808us; 1250us; 808us; 1252us; 808us; 1256us; 808us; 1259us; 808us; 1261us; 808us; 1263us; 808us; 1264us; 808us; 1266us; 808us; 1267us; 808us; 1269us; 808us; 1270us; 808us; 1272us; 808us; 1273us; 808us; 1275us; 808us; 1276us; 808us; 1278us; 808us; 1279us; 808us; 1281us; 1664us; 1282us; 1664us; 1285us; 808us; 1286us; 808us; 1293us; 808us; 1295us; 808us; 1297us; 808us; 1298us; 808us; 1299us; 808us; 1302us; 808us; 1309us; 808us; 1310us; 808us; 1313us; 808us; 1314us; 808us; 1327us; 808us; 1334us; 808us; 1341us; 808us; 1348us; 808us; 1365us; 808us; 1372us; 808us; 1373us; 808us; 1379us; 808us; 1385us; 808us; 1386us; 808us; 1387us; 808us; 1403us; 808us; 1413us; 808us; 1426us; 808us; 1428us; 808us; 1431us; 808us; 1432us; 808us; 1438us; 808us; 1444us; 1664us; 1447us; 1664us; 1449us; 1664us; 1451us; 1664us; 1453us; 808us; 1458us; 808us; 1463us; 808us; 1488us; 808us; 1513us; 1664us; 1521us; 808us; 1528us; 808us; 1530us; 808us; 1533us; 808us; 1535us; 808us; 1546us; 808us; 1548us; 808us; 1555us; 1664us; 1558us; 1664us; 1561us; 1664us; 1564us; 1664us; 1566us; 1664us; 1568us; 1664us; 1572us; 1664us; 1575us; 1664us; 1579us; 1664us; 1582us; 1664us; 1587us; 1664us; 1589us; 1664us; 1591us; 1664us; 1594us; 1664us; 1596us; 1664us; 1610us; 1664us; 1615us; 1664us; 1618us; 1664us; 1629us; 1664us; 1633us; 1664us; 1639us; 1664us; 1646us; 1664us; 1650us; 1664us; 1656us; 1664us; 1657us; 1664us; 1666us; 808us; 1680us; 1664us; 1682us; 1664us; 1693us; 1664us; 1825us; 808us; 1829us; 808us; 1us; 65535us; 802us; 803us; 4us; 65535us; 806us; 807us; 1603us; 805us; 1637us; 805us; 1708us; 805us; 3us; 65535us; 1603us; 1604us; 1637us; 1638us; 1708us; 1709us; 200us; 65535us; 6us; 1354us; 31us; 1354us; 109us; 1354us; 111us; 1354us; 228us; 1354us; 242us; 1354us; 264us; 1354us; 318us; 1354us; 322us; 1354us; 327us; 1354us; 406us; 900us; 409us; 1354us; 411us; 900us; 414us; 1354us; 446us; 900us; 449us; 1354us; 465us; 1354us; 496us; 1354us; 643us; 644us; 654us; 655us; 697us; 1354us; 703us; 1354us; 749us; 900us; 752us; 1354us; 756us; 1354us; 766us; 1354us; 840us; 900us; 842us; 900us; 843us; 900us; 847us; 900us; 848us; 900us; 849us; 900us; 850us; 900us; 857us; 900us; 859us; 900us; 860us; 900us; 862us; 900us; 864us; 900us; 867us; 900us; 869us; 900us; 874us; 900us; 878us; 900us; 880us; 900us; 882us; 900us; 890us; 900us; 893us; 900us; 904us; 900us; 912us; 900us; 932us; 900us; 934us; 900us; 939us; 900us; 940us; 900us; 942us; 900us; 943us; 900us; 944us; 900us; 945us; 900us; 951us; 900us; 953us; 900us; 955us; 1354us; 960us; 1354us; 972us; 1354us; 974us; 1354us; 977us; 1354us; 980us; 1354us; 996us; 900us; 997us; 1354us; 1001us; 900us; 1002us; 1354us; 1008us; 1354us; 1011us; 1354us; 1014us; 1354us; 1020us; 1354us; 1024us; 1354us; 1028us; 1354us; 1032us; 1354us; 1034us; 1354us; 1039us; 1354us; 1041us; 1354us; 1043us; 1354us; 1045us; 1354us; 1047us; 1354us; 1049us; 1354us; 1058us; 900us; 1060us; 1354us; 1068us; 1354us; 1075us; 1354us; 1081us; 1354us; 1083us; 1354us; 1087us; 900us; 1088us; 1354us; 1092us; 1354us; 1094us; 900us; 1095us; 1354us; 1099us; 1354us; 1102us; 1354us; 1105us; 1354us; 1107us; 1354us; 1112us; 1354us; 1114us; 1354us; 1157us; 1354us; 1159us; 1354us; 1163us; 1354us; 1164us; 1354us; 1165us; 1354us; 1166us; 1354us; 1167us; 1354us; 1168us; 1354us; 1169us; 1354us; 1170us; 1354us; 1171us; 1354us; 1172us; 1354us; 1173us; 1354us; 1175us; 1354us; 1176us; 1354us; 1177us; 1354us; 1178us; 1354us; 1179us; 1354us; 1180us; 1354us; 1181us; 1354us; 1182us; 1354us; 1183us; 1354us; 1204us; 1354us; 1205us; 1354us; 1206us; 1354us; 1207us; 1354us; 1210us; 1354us; 1211us; 1354us; 1212us; 1354us; 1213us; 1354us; 1215us; 1354us; 1218us; 900us; 1220us; 900us; 1225us; 900us; 1232us; 900us; 1235us; 900us; 1239us; 1354us; 1240us; 1354us; 1244us; 1354us; 1246us; 1354us; 1250us; 1354us; 1252us; 1354us; 1256us; 1354us; 1259us; 1354us; 1261us; 1354us; 1263us; 1354us; 1264us; 1354us; 1266us; 1354us; 1267us; 1354us; 1269us; 1354us; 1270us; 1354us; 1272us; 1354us; 1273us; 1354us; 1275us; 1354us; 1276us; 1354us; 1278us; 1354us; 1279us; 1354us; 1285us; 1354us; 1286us; 1354us; 1293us; 1354us; 1295us; 1354us; 1297us; 1354us; 1298us; 1354us; 1299us; 1354us; 1302us; 1354us; 1309us; 1354us; 1310us; 1354us; 1313us; 1354us; 1314us; 1354us; 1327us; 1354us; 1334us; 1354us; 1341us; 1354us; 1348us; 1354us; 1365us; 1354us; 1372us; 1354us; 1373us; 1354us; 1379us; 1354us; 1385us; 1354us; 1386us; 1354us; 1387us; 1354us; 1403us; 1354us; 1413us; 1354us; 1426us; 1354us; 1428us; 1354us; 1431us; 1354us; 1432us; 1354us; 1438us; 1354us; 1453us; 1354us; 1458us; 1354us; 1463us; 1354us; 1488us; 1354us; 1521us; 1354us; 1528us; 900us; 1530us; 1354us; 1533us; 900us; 1535us; 1354us; 1546us; 900us; 1548us; 900us; 1666us; 1354us; 1825us; 1354us; 1829us; 1354us; 3us; 65535us; 406us; 407us; 411us; 412us; 749us; 750us; 3us; 65535us; 819us; 815us; 820us; 816us; 822us; 816us; 2us; 65535us; 820us; 821us; 822us; 823us; 1us; 65535us; 354us; 355us; 13us; 65535us; 406us; 811us; 411us; 811us; 749us; 811us; 842us; 830us; 843us; 831us; 847us; 832us; 848us; 833us; 849us; 834us; 850us; 835us; 996us; 836us; 1001us; 837us; 1087us; 838us; 1094us; 839us; 13us; 65535us; 406us; 844us; 411us; 844us; 749us; 844us; 842us; 844us; 843us; 844us; 847us; 844us; 848us; 844us; 849us; 844us; 850us; 844us; 996us; 844us; 1001us; 844us; 1087us; 844us; 1094us; 844us; 13us; 65535us; 406us; 845us; 411us; 845us; 749us; 845us; 842us; 845us; 843us; 845us; 847us; 845us; 848us; 845us; 849us; 845us; 850us; 845us; 996us; 845us; 1001us; 845us; 1087us; 845us; 1094us; 845us; 2us; 65535us; 853us; 854us; 874us; 875us; 2us; 65535us; 853us; 851us; 874us; 851us; 38us; 65535us; 406us; 846us; 411us; 846us; 749us; 846us; 840us; 841us; 842us; 846us; 843us; 846us; 847us; 846us; 848us; 846us; 849us; 846us; 850us; 846us; 857us; 941us; 874us; 941us; 890us; 941us; 893us; 941us; 904us; 941us; 912us; 941us; 932us; 933us; 934us; 941us; 939us; 941us; 940us; 941us; 942us; 941us; 943us; 941us; 944us; 941us; 945us; 941us; 951us; 941us; 953us; 941us; 996us; 846us; 1001us; 846us; 1058us; 941us; 1087us; 846us; 1094us; 846us; 1218us; 941us; 1220us; 941us; 1225us; 941us; 1232us; 941us; 1235us; 941us; 1546us; 941us; 1548us; 941us; 6us; 65535us; 859us; 866us; 860us; 861us; 862us; 863us; 864us; 865us; 867us; 868us; 869us; 870us; 11us; 65535us; 859us; 877us; 860us; 877us; 862us; 877us; 864us; 877us; 867us; 877us; 869us; 877us; 878us; 879us; 880us; 881us; 882us; 883us; 1528us; 1529us; 1533us; 1534us; 50us; 65535us; 406us; 873us; 411us; 873us; 446us; 447us; 749us; 873us; 840us; 873us; 842us; 873us; 843us; 873us; 847us; 873us; 848us; 873us; 849us; 873us; 850us; 873us; 857us; 873us; 859us; 878us; 860us; 878us; 862us; 878us; 864us; 878us; 867us; 878us; 869us; 878us; 874us; 873us; 878us; 878us; 880us; 878us; 882us; 878us; 890us; 873us; 893us; 873us; 904us; 873us; 912us; 873us; 932us; 873us; 934us; 873us; 939us; 873us; 940us; 873us; 942us; 873us; 943us; 873us; 944us; 873us; 945us; 873us; 951us; 873us; 953us; 873us; 996us; 873us; 1001us; 873us; 1058us; 873us; 1087us; 873us; 1094us; 873us; 1218us; 873us; 1220us; 873us; 1225us; 873us; 1232us; 873us; 1235us; 873us; 1528us; 878us; 1533us; 878us; 1546us; 873us; 1548us; 873us; 2us; 65535us; 874us; 905us; 904us; 905us; 23us; 65535us; 857us; 858us; 874us; 919us; 890us; 929us; 893us; 929us; 904us; 919us; 912us; 926us; 934us; 920us; 939us; 921us; 940us; 922us; 942us; 923us; 943us; 924us; 944us; 925us; 945us; 927us; 951us; 928us; 953us; 929us; 1058us; 930us; 1218us; 931us; 1220us; 931us; 1225us; 931us; 1232us; 931us; 1235us; 931us; 1546us; 931us; 1548us; 931us; 23us; 65535us; 857us; 935us; 874us; 935us; 890us; 935us; 893us; 935us; 904us; 935us; 912us; 913us; 934us; 935us; 939us; 935us; 940us; 935us; 942us; 935us; 943us; 935us; 944us; 935us; 945us; 935us; 951us; 935us; 953us; 935us; 1058us; 935us; 1218us; 935us; 1220us; 935us; 1225us; 935us; 1232us; 935us; 1235us; 935us; 1546us; 935us; 1548us; 935us; 23us; 65535us; 857us; 936us; 874us; 936us; 890us; 936us; 893us; 936us; 904us; 936us; 912us; 936us; 934us; 936us; 939us; 936us; 940us; 936us; 942us; 936us; 943us; 936us; 944us; 936us; 945us; 936us; 951us; 936us; 953us; 936us; 1058us; 936us; 1218us; 936us; 1220us; 936us; 1225us; 936us; 1232us; 936us; 1235us; 936us; 1546us; 936us; 1548us; 936us; 2us; 65535us; 887us; 888us; 948us; 949us; 2us; 65535us; 887us; 946us; 948us; 946us; 3us; 65535us; 890us; 891us; 893us; 894us; 953us; 954us; 25us; 65535us; 264us; 1012us; 409us; 410us; 414us; 415us; 449us; 450us; 465us; 466us; 697us; 698us; 703us; 704us; 766us; 767us; 980us; 1012us; 997us; 998us; 1002us; 1003us; 1011us; 1012us; 1014us; 1015us; 1032us; 1033us; 1049us; 1050us; 1060us; 1061us; 1068us; 1069us; 1075us; 1076us; 1088us; 1089us; 1092us; 1093us; 1095us; 1096us; 1099us; 1100us; 1105us; 1106us; 1107us; 1108us; 1530us; 1531us; 6us; 65535us; 1043us; 1044us; 1045us; 1046us; 1159us; 1160us; 1458us; 1459us; 1463us; 1464us; 1488us; 1489us; 5us; 65535us; 1028us; 1029us; 1114us; 1115us; 1240us; 1241us; 1426us; 1427us; 1535us; 1536us; 52us; 65535us; 6us; 969us; 264us; 959us; 409us; 959us; 414us; 959us; 449us; 959us; 465us; 959us; 697us; 959us; 703us; 959us; 752us; 761us; 756us; 761us; 766us; 959us; 955us; 956us; 960us; 961us; 977us; 978us; 980us; 959us; 997us; 959us; 1002us; 959us; 1008us; 1009us; 1011us; 959us; 1014us; 959us; 1020us; 1021us; 1024us; 1025us; 1028us; 964us; 1032us; 959us; 1049us; 959us; 1060us; 959us; 1068us; 959us; 1075us; 959us; 1088us; 959us; 1092us; 959us; 1095us; 959us; 1099us; 959us; 1102us; 1103us; 1105us; 959us; 1107us; 959us; 1114us; 964us; 1215us; 1216us; 1240us; 964us; 1246us; 1247us; 1252us; 1253us; 1341us; 1346us; 1348us; 1349us; 1365us; 1366us; 1372us; 1374us; 1373us; 1374us; 1385us; 1405us; 1386us; 1405us; 1387us; 1405us; 1403us; 1404us; 1426us; 964us; 1530us; 959us; 1535us; 964us; 1us; 65535us; 6us; 7us; 57us; 65535us; 6us; 966us; 264us; 966us; 409us; 966us; 414us; 966us; 449us; 966us; 465us; 966us; 697us; 966us; 703us; 966us; 752us; 966us; 756us; 966us; 766us; 966us; 955us; 966us; 960us; 966us; 972us; 973us; 974us; 975us; 977us; 966us; 980us; 966us; 997us; 966us; 1002us; 966us; 1008us; 966us; 1011us; 966us; 1014us; 966us; 1020us; 966us; 1024us; 966us; 1028us; 966us; 1032us; 966us; 1049us; 966us; 1060us; 966us; 1068us; 966us; 1075us; 966us; 1088us; 966us; 1092us; 966us; 1095us; 966us; 1099us; 966us; 1102us; 966us; 1105us; 966us; 1107us; 966us; 1114us; 966us; 1215us; 966us; 1240us; 966us; 1246us; 966us; 1252us; 966us; 1327us; 1423us; 1341us; 966us; 1348us; 966us; 1365us; 966us; 1372us; 966us; 1373us; 966us; 1379us; 1424us; 1385us; 966us; 1386us; 966us; 1387us; 966us; 1403us; 966us; 1413us; 1425us; 1426us; 966us; 1530us; 966us; 1535us; 966us; 102us; 65535us; 72us; 75us; 148us; 150us; 154us; 156us; 158us; 160us; 162us; 164us; 233us; 236us; 273us; 274us; 284us; 286us; 287us; 289us; 294us; 296us; 304us; 1870us; 306us; 1870us; 363us; 366us; 376us; 378us; 382us; 383us; 386us; 387us; 493us; 1870us; 508us; 510us; 532us; 533us; 543us; 545us; 552us; 554us; 638us; 640us; 688us; 690us; 701us; 711us; 704us; 711us; 751us; 755us; 757us; 759us; 822us; 829us; 823us; 826us; 874us; 910us; 904us; 910us; 905us; 907us; 912us; 918us; 913us; 915us; 930us; 1080us; 956us; 958us; 1003us; 711us; 1021us; 1023us; 1025us; 1027us; 1029us; 1031us; 1034us; 1038us; 1035us; 1037us; 1047us; 1056us; 1048us; 1055us; 1050us; 1052us; 1058us; 1870us; 1059us; 1870us; 1060us; 1870us; 1061us; 1870us; 1067us; 1074us; 1068us; 1073us; 1069us; 1071us; 1081us; 1085us; 1083us; 1086us; 1096us; 711us; 1108us; 711us; 1143us; 1258us; 1162us; 1336us; 1173us; 1174us; 1221us; 1223us; 1247us; 1249us; 1253us; 1255us; 1259us; 1870us; 1261us; 1870us; 1289us; 1340us; 1315us; 1340us; 1318us; 1340us; 1327us; 1332us; 1328us; 1330us; 1348us; 1353us; 1349us; 1351us; 1366us; 1368us; 1372us; 1378us; 1373us; 1378us; 1374us; 1376us; 1379us; 1384us; 1380us; 1382us; 1385us; 1398us; 1386us; 1398us; 1387us; 1398us; 1389us; 1864us; 1413us; 1418us; 1414us; 1416us; 1428us; 1870us; 1487us; 1870us; 1488us; 1870us; 1521us; 1526us; 1522us; 1524us; 1535us; 1541us; 1536us; 1538us; 1605us; 1662us; 1632us; 1685us; 1651us; 1654us; 1652us; 1654us; 1656us; 1663us; 1657us; 1661us; 1658us; 1660us; 1675us; 1870us; 1680us; 1691us; 1682us; 1870us; 1687us; 1870us; 1729us; 1870us; 4us; 65535us; 999us; 1000us; 1005us; 1006us; 1091us; 1092us; 1098us; 1099us; 116us; 65535us; 6us; 971us; 31us; 32us; 109us; 110us; 111us; 112us; 228us; 243us; 242us; 243us; 264us; 971us; 409us; 971us; 414us; 971us; 449us; 971us; 465us; 971us; 697us; 971us; 703us; 971us; 752us; 971us; 756us; 971us; 766us; 971us; 955us; 971us; 960us; 971us; 972us; 971us; 974us; 971us; 977us; 971us; 980us; 971us; 997us; 971us; 1002us; 971us; 1008us; 971us; 1011us; 971us; 1014us; 971us; 1020us; 971us; 1024us; 971us; 1028us; 971us; 1032us; 971us; 1034us; 1035us; 1039us; 1040us; 1041us; 1042us; 1043us; 963us; 1045us; 963us; 1047us; 1048us; 1049us; 971us; 1060us; 971us; 1068us; 971us; 1075us; 971us; 1081us; 1082us; 1083us; 1084us; 1088us; 971us; 1092us; 971us; 1095us; 971us; 1099us; 971us; 1102us; 971us; 1105us; 971us; 1107us; 971us; 1112us; 1113us; 1114us; 971us; 1157us; 1116us; 1159us; 963us; 1163us; 1117us; 1164us; 1118us; 1165us; 1119us; 1166us; 1120us; 1167us; 1121us; 1168us; 1122us; 1169us; 1123us; 1170us; 1124us; 1171us; 1125us; 1172us; 1126us; 1173us; 1127us; 1175us; 1128us; 1176us; 1129us; 1177us; 1130us; 1178us; 1131us; 1179us; 1132us; 1180us; 1133us; 1181us; 1134us; 1182us; 1135us; 1183us; 1136us; 1204us; 1137us; 1205us; 1138us; 1206us; 1138us; 1207us; 1138us; 1210us; 1139us; 1211us; 1139us; 1212us; 1139us; 1213us; 1139us; 1215us; 971us; 1239us; 1140us; 1240us; 971us; 1244us; 1141us; 1246us; 971us; 1250us; 1142us; 1252us; 971us; 1256us; 1143us; 1259us; 1144us; 1261us; 1146us; 1327us; 971us; 1334us; 1145us; 1341us; 971us; 1348us; 971us; 1365us; 971us; 1372us; 971us; 1373us; 971us; 1379us; 971us; 1385us; 971us; 1386us; 971us; 1387us; 971us; 1403us; 971us; 1413us; 971us; 1426us; 971us; 1428us; 1147us; 1431us; 1148us; 1432us; 1149us; 1458us; 963us; 1463us; 963us; 1488us; 963us; 1530us; 971us; 1535us; 971us; 1825us; 1150us; 1829us; 1150us; 1us; 65535us; 1323us; 1324us; 3us; 65535us; 1021us; 1022us; 1025us; 1026us; 1029us; 1030us; 4us; 65535us; 1218us; 1219us; 1220us; 1221us; 1546us; 1547us; 1548us; 1549us; 7us; 65535us; 1218us; 1230us; 1220us; 1230us; 1225us; 1230us; 1232us; 1230us; 1235us; 1230us; 1546us; 1230us; 1548us; 1230us; 7us; 65535us; 1218us; 1224us; 1220us; 1224us; 1225us; 1226us; 1232us; 1233us; 1235us; 1236us; 1546us; 1224us; 1548us; 1224us; 1us; 65535us; 931us; 1229us; 1us; 65535us; 1230us; 1231us; 2us; 65535us; 1035us; 1036us; 1143us; 1257us; 2us; 65535us; 1035us; 1242us; 1143us; 1242us; 1us; 65535us; 1242us; 1243us; 116us; 65535us; 6us; 1161us; 31us; 1161us; 109us; 1161us; 111us; 1161us; 228us; 1161us; 242us; 1161us; 264us; 1161us; 409us; 1161us; 414us; 1161us; 449us; 1161us; 465us; 1161us; 697us; 1161us; 703us; 1161us; 752us; 1161us; 756us; 1161us; 766us; 1161us; 955us; 1161us; 960us; 1161us; 972us; 1161us; 974us; 1161us; 977us; 1161us; 980us; 1161us; 997us; 1161us; 1002us; 1161us; 1008us; 1161us; 1011us; 1161us; 1014us; 1161us; 1020us; 1161us; 1024us; 1161us; 1028us; 1161us; 1032us; 1161us; 1034us; 1161us; 1039us; 1161us; 1041us; 1161us; 1043us; 1161us; 1045us; 1161us; 1047us; 1161us; 1049us; 1161us; 1060us; 1161us; 1068us; 1161us; 1075us; 1161us; 1081us; 1161us; 1083us; 1161us; 1088us; 1161us; 1092us; 1161us; 1095us; 1161us; 1099us; 1161us; 1102us; 1161us; 1105us; 1161us; 1107us; 1161us; 1112us; 1161us; 1114us; 1161us; 1157us; 1161us; 1159us; 1161us; 1163us; 1161us; 1164us; 1161us; 1165us; 1161us; 1166us; 1161us; 1167us; 1161us; 1168us; 1161us; 1169us; 1161us; 1170us; 1161us; 1171us; 1161us; 1172us; 1161us; 1173us; 1161us; 1175us; 1161us; 1176us; 1161us; 1177us; 1161us; 1178us; 1161us; 1179us; 1161us; 1180us; 1161us; 1181us; 1161us; 1182us; 1161us; 1183us; 1161us; 1204us; 1161us; 1205us; 1161us; 1206us; 1161us; 1207us; 1161us; 1210us; 1161us; 1211us; 1161us; 1212us; 1161us; 1213us; 1161us; 1215us; 1161us; 1239us; 1161us; 1240us; 1161us; 1244us; 1161us; 1246us; 1161us; 1250us; 1161us; 1252us; 1161us; 1256us; 1161us; 1259us; 1161us; 1261us; 1161us; 1327us; 1161us; 1334us; 1162us; 1341us; 1161us; 1348us; 1161us; 1365us; 1161us; 1372us; 1161us; 1373us; 1161us; 1379us; 1161us; 1385us; 1161us; 1386us; 1161us; 1387us; 1161us; 1403us; 1161us; 1413us; 1161us; 1426us; 1161us; 1428us; 1161us; 1431us; 1161us; 1432us; 1161us; 1458us; 1161us; 1463us; 1161us; 1488us; 1161us; 1530us; 1161us; 1535us; 1161us; 1825us; 1161us; 1829us; 1161us; 130us; 65535us; 6us; 1158us; 31us; 1158us; 109us; 1158us; 111us; 1158us; 228us; 1158us; 242us; 1158us; 264us; 1158us; 409us; 1158us; 414us; 1158us; 449us; 1158us; 465us; 1158us; 697us; 1158us; 703us; 1158us; 752us; 1158us; 756us; 1158us; 766us; 1158us; 955us; 1158us; 960us; 1158us; 972us; 1158us; 974us; 1158us; 977us; 1158us; 980us; 1158us; 997us; 1158us; 1002us; 1158us; 1008us; 1158us; 1011us; 1158us; 1014us; 1158us; 1020us; 1158us; 1024us; 1158us; 1028us; 1158us; 1032us; 1158us; 1034us; 1158us; 1039us; 1158us; 1041us; 1158us; 1043us; 1158us; 1045us; 1158us; 1047us; 1158us; 1049us; 1158us; 1060us; 1158us; 1068us; 1158us; 1075us; 1158us; 1081us; 1158us; 1083us; 1158us; 1088us; 1158us; 1092us; 1158us; 1095us; 1158us; 1099us; 1158us; 1102us; 1158us; 1105us; 1158us; 1107us; 1158us; 1112us; 1158us; 1114us; 1158us; 1157us; 1158us; 1159us; 1158us; 1163us; 1158us; 1164us; 1158us; 1165us; 1158us; 1166us; 1158us; 1167us; 1158us; 1168us; 1158us; 1169us; 1158us; 1170us; 1158us; 1171us; 1158us; 1172us; 1158us; 1173us; 1158us; 1175us; 1158us; 1176us; 1158us; 1177us; 1158us; 1178us; 1158us; 1179us; 1158us; 1180us; 1158us; 1181us; 1158us; 1182us; 1158us; 1183us; 1158us; 1204us; 1158us; 1205us; 1158us; 1206us; 1158us; 1207us; 1158us; 1210us; 1158us; 1211us; 1158us; 1212us; 1158us; 1213us; 1158us; 1215us; 1158us; 1239us; 1158us; 1240us; 1158us; 1244us; 1158us; 1246us; 1158us; 1250us; 1158us; 1252us; 1158us; 1256us; 1158us; 1259us; 1158us; 1261us; 1158us; 1263us; 1265us; 1264us; 1265us; 1266us; 1268us; 1267us; 1268us; 1269us; 1271us; 1270us; 1271us; 1272us; 1274us; 1273us; 1274us; 1275us; 1277us; 1276us; 1277us; 1278us; 1280us; 1279us; 1280us; 1293us; 1294us; 1295us; 1296us; 1327us; 1158us; 1334us; 1158us; 1341us; 1158us; 1348us; 1158us; 1365us; 1158us; 1372us; 1158us; 1373us; 1158us; 1379us; 1158us; 1385us; 1158us; 1386us; 1158us; 1387us; 1158us; 1403us; 1158us; 1413us; 1158us; 1426us; 1158us; 1428us; 1158us; 1431us; 1158us; 1432us; 1158us; 1458us; 1158us; 1463us; 1158us; 1488us; 1158us; 1530us; 1158us; 1535us; 1158us; 1825us; 1158us; 1829us; 1158us; 131us; 65535us; 6us; 1297us; 31us; 1297us; 109us; 1297us; 111us; 1297us; 228us; 1297us; 242us; 1297us; 264us; 1297us; 409us; 1297us; 414us; 1297us; 449us; 1297us; 465us; 1297us; 697us; 1297us; 703us; 1297us; 752us; 1297us; 756us; 1297us; 766us; 1297us; 955us; 1297us; 960us; 1297us; 972us; 1297us; 974us; 1297us; 977us; 1297us; 980us; 1297us; 997us; 1297us; 1002us; 1297us; 1008us; 1297us; 1011us; 1297us; 1014us; 1297us; 1020us; 1297us; 1024us; 1297us; 1028us; 1297us; 1032us; 1297us; 1034us; 1297us; 1039us; 1297us; 1041us; 1297us; 1043us; 1297us; 1045us; 1297us; 1047us; 1297us; 1049us; 1297us; 1060us; 1297us; 1068us; 1297us; 1075us; 1297us; 1081us; 1297us; 1083us; 1297us; 1088us; 1297us; 1092us; 1297us; 1095us; 1297us; 1099us; 1297us; 1102us; 1297us; 1105us; 1297us; 1107us; 1297us; 1112us; 1297us; 1114us; 1297us; 1157us; 1297us; 1159us; 1297us; 1163us; 1297us; 1164us; 1297us; 1165us; 1297us; 1166us; 1297us; 1167us; 1297us; 1168us; 1297us; 1169us; 1297us; 1170us; 1297us; 1171us; 1297us; 1172us; 1297us; 1173us; 1297us; 1175us; 1297us; 1176us; 1297us; 1177us; 1297us; 1178us; 1297us; 1179us; 1297us; 1180us; 1297us; 1181us; 1297us; 1182us; 1297us; 1183us; 1297us; 1204us; 1297us; 1205us; 1297us; 1206us; 1297us; 1207us; 1297us; 1210us; 1297us; 1211us; 1297us; 1212us; 1297us; 1213us; 1297us; 1215us; 1297us; 1239us; 1297us; 1240us; 1297us; 1244us; 1297us; 1246us; 1297us; 1250us; 1297us; 1252us; 1297us; 1256us; 1297us; 1259us; 1297us; 1261us; 1297us; 1263us; 1297us; 1264us; 1297us; 1266us; 1297us; 1267us; 1297us; 1269us; 1297us; 1270us; 1297us; 1272us; 1297us; 1273us; 1297us; 1275us; 1297us; 1276us; 1297us; 1278us; 1297us; 1279us; 1297us; 1293us; 1297us; 1295us; 1297us; 1327us; 1297us; 1334us; 1297us; 1341us; 1297us; 1348us; 1297us; 1365us; 1297us; 1372us; 1297us; 1373us; 1297us; 1379us; 1297us; 1385us; 1297us; 1386us; 1297us; 1387us; 1297us; 1403us; 1297us; 1413us; 1298us; 1426us; 1297us; 1428us; 1297us; 1431us; 1297us; 1432us; 1297us; 1458us; 1297us; 1463us; 1297us; 1488us; 1297us; 1521us; 1299us; 1530us; 1297us; 1535us; 1297us; 1825us; 1297us; 1829us; 1297us; 4us; 65535us; 1297us; 1300us; 1298us; 1300us; 1299us; 1300us; 1438us; 1441us; 141us; 65535us; 6us; 1301us; 31us; 1301us; 109us; 1301us; 111us; 1301us; 228us; 1301us; 242us; 1301us; 264us; 1301us; 409us; 1301us; 414us; 1301us; 449us; 1301us; 465us; 1301us; 697us; 1301us; 703us; 1301us; 752us; 1301us; 756us; 1301us; 766us; 1301us; 955us; 1301us; 960us; 1301us; 972us; 1301us; 974us; 1301us; 977us; 1301us; 980us; 1301us; 997us; 1301us; 1002us; 1301us; 1008us; 1301us; 1011us; 1301us; 1014us; 1301us; 1020us; 1301us; 1024us; 1301us; 1028us; 1301us; 1032us; 1301us; 1034us; 1301us; 1039us; 1301us; 1041us; 1301us; 1043us; 1301us; 1045us; 1301us; 1047us; 1301us; 1049us; 1301us; 1060us; 1301us; 1068us; 1301us; 1075us; 1301us; 1081us; 1301us; 1083us; 1301us; 1088us; 1301us; 1092us; 1301us; 1095us; 1301us; 1099us; 1301us; 1102us; 1301us; 1105us; 1301us; 1107us; 1301us; 1112us; 1301us; 1114us; 1301us; 1157us; 1301us; 1159us; 1301us; 1163us; 1301us; 1164us; 1301us; 1165us; 1301us; 1166us; 1301us; 1167us; 1301us; 1168us; 1301us; 1169us; 1301us; 1170us; 1301us; 1171us; 1301us; 1172us; 1301us; 1173us; 1301us; 1175us; 1301us; 1176us; 1301us; 1177us; 1301us; 1178us; 1301us; 1179us; 1301us; 1180us; 1301us; 1181us; 1301us; 1182us; 1301us; 1183us; 1301us; 1204us; 1301us; 1205us; 1301us; 1206us; 1301us; 1207us; 1301us; 1210us; 1301us; 1211us; 1301us; 1212us; 1301us; 1213us; 1301us; 1215us; 1301us; 1239us; 1301us; 1240us; 1301us; 1244us; 1301us; 1246us; 1301us; 1250us; 1301us; 1252us; 1301us; 1256us; 1301us; 1259us; 1301us; 1261us; 1301us; 1263us; 1301us; 1264us; 1301us; 1266us; 1301us; 1267us; 1301us; 1269us; 1301us; 1270us; 1301us; 1272us; 1301us; 1273us; 1301us; 1275us; 1301us; 1276us; 1301us; 1278us; 1301us; 1279us; 1301us; 1293us; 1301us; 1295us; 1301us; 1297us; 1304us; 1298us; 1304us; 1299us; 1304us; 1302us; 1303us; 1309us; 1305us; 1310us; 1306us; 1313us; 1307us; 1314us; 1307us; 1327us; 1301us; 1334us; 1301us; 1341us; 1301us; 1348us; 1301us; 1365us; 1301us; 1372us; 1301us; 1373us; 1301us; 1379us; 1301us; 1385us; 1301us; 1386us; 1301us; 1387us; 1301us; 1403us; 1301us; 1413us; 1301us; 1426us; 1301us; 1428us; 1301us; 1431us; 1301us; 1432us; 1301us; 1438us; 1304us; 1458us; 1301us; 1463us; 1301us; 1488us; 1301us; 1521us; 1301us; 1530us; 1301us; 1535us; 1301us; 1666us; 1308us; 1825us; 1301us; 1829us; 1301us; 3us; 65535us; 1289us; 1290us; 1315us; 1316us; 1318us; 1319us; 148us; 65535us; 6us; 1337us; 31us; 1337us; 109us; 1337us; 111us; 1337us; 228us; 1337us; 242us; 1337us; 264us; 1337us; 318us; 1442us; 322us; 1442us; 327us; 1442us; 409us; 1337us; 414us; 1337us; 449us; 1337us; 465us; 1337us; 496us; 497us; 697us; 1337us; 703us; 1337us; 752us; 1337us; 756us; 1337us; 766us; 1337us; 955us; 1337us; 960us; 1337us; 972us; 1337us; 974us; 1337us; 977us; 1337us; 980us; 1337us; 997us; 1337us; 1002us; 1337us; 1008us; 1337us; 1011us; 1337us; 1014us; 1337us; 1020us; 1337us; 1024us; 1337us; 1028us; 1337us; 1032us; 1337us; 1034us; 1337us; 1039us; 1337us; 1041us; 1337us; 1043us; 1337us; 1045us; 1337us; 1047us; 1337us; 1049us; 1337us; 1060us; 1337us; 1068us; 1337us; 1075us; 1337us; 1081us; 1337us; 1083us; 1337us; 1088us; 1337us; 1092us; 1337us; 1095us; 1337us; 1099us; 1337us; 1102us; 1337us; 1105us; 1337us; 1107us; 1337us; 1112us; 1337us; 1114us; 1337us; 1157us; 1337us; 1159us; 1337us; 1163us; 1337us; 1164us; 1337us; 1165us; 1337us; 1166us; 1337us; 1167us; 1337us; 1168us; 1337us; 1169us; 1337us; 1170us; 1337us; 1171us; 1337us; 1172us; 1337us; 1173us; 1337us; 1175us; 1337us; 1176us; 1337us; 1177us; 1337us; 1178us; 1337us; 1179us; 1337us; 1180us; 1337us; 1181us; 1337us; 1182us; 1337us; 1183us; 1337us; 1204us; 1337us; 1205us; 1337us; 1206us; 1337us; 1207us; 1337us; 1210us; 1337us; 1211us; 1337us; 1212us; 1337us; 1213us; 1337us; 1215us; 1337us; 1239us; 1337us; 1240us; 1337us; 1244us; 1337us; 1246us; 1337us; 1250us; 1337us; 1252us; 1337us; 1256us; 1337us; 1259us; 1337us; 1261us; 1337us; 1263us; 1337us; 1264us; 1337us; 1266us; 1337us; 1267us; 1337us; 1269us; 1337us; 1270us; 1337us; 1272us; 1337us; 1273us; 1337us; 1275us; 1337us; 1276us; 1337us; 1278us; 1337us; 1279us; 1337us; 1285us; 1287us; 1286us; 1288us; 1293us; 1337us; 1295us; 1337us; 1297us; 1337us; 1298us; 1337us; 1299us; 1337us; 1302us; 1337us; 1309us; 1337us; 1310us; 1337us; 1313us; 1337us; 1314us; 1337us; 1327us; 1337us; 1334us; 1337us; 1341us; 1337us; 1348us; 1337us; 1365us; 1337us; 1372us; 1337us; 1373us; 1337us; 1379us; 1337us; 1385us; 1337us; 1386us; 1337us; 1387us; 1337us; 1403us; 1337us; 1413us; 1337us; 1426us; 1337us; 1428us; 1337us; 1431us; 1337us; 1432us; 1337us; 1438us; 1337us; 1453us; 1442us; 1458us; 1337us; 1463us; 1337us; 1488us; 1337us; 1521us; 1337us; 1530us; 1337us; 1535us; 1337us; 1666us; 1337us; 1825us; 1337us; 1829us; 1337us; 148us; 65535us; 6us; 1364us; 31us; 1364us; 109us; 1364us; 111us; 1364us; 228us; 1364us; 242us; 1364us; 264us; 1364us; 318us; 1364us; 322us; 1364us; 327us; 1364us; 409us; 1364us; 414us; 1364us; 449us; 1364us; 465us; 1364us; 496us; 1364us; 697us; 1364us; 703us; 1364us; 752us; 1364us; 756us; 1364us; 766us; 1364us; 955us; 1364us; 960us; 1364us; 972us; 1364us; 974us; 1364us; 977us; 1364us; 980us; 1364us; 997us; 1364us; 1002us; 1364us; 1008us; 1364us; 1011us; 1364us; 1014us; 1364us; 1020us; 1364us; 1024us; 1364us; 1028us; 1364us; 1032us; 1364us; 1034us; 1364us; 1039us; 1364us; 1041us; 1364us; 1043us; 1364us; 1045us; 1364us; 1047us; 1364us; 1049us; 1364us; 1060us; 1364us; 1068us; 1364us; 1075us; 1364us; 1081us; 1364us; 1083us; 1364us; 1088us; 1364us; 1092us; 1364us; 1095us; 1364us; 1099us; 1364us; 1102us; 1364us; 1105us; 1364us; 1107us; 1364us; 1112us; 1364us; 1114us; 1364us; 1157us; 1364us; 1159us; 1364us; 1163us; 1364us; 1164us; 1364us; 1165us; 1364us; 1166us; 1364us; 1167us; 1364us; 1168us; 1364us; 1169us; 1364us; 1170us; 1364us; 1171us; 1364us; 1172us; 1364us; 1173us; 1364us; 1175us; 1364us; 1176us; 1364us; 1177us; 1364us; 1178us; 1364us; 1179us; 1364us; 1180us; 1364us; 1181us; 1364us; 1182us; 1364us; 1183us; 1364us; 1204us; 1364us; 1205us; 1364us; 1206us; 1364us; 1207us; 1364us; 1210us; 1364us; 1211us; 1364us; 1212us; 1364us; 1213us; 1364us; 1215us; 1364us; 1239us; 1364us; 1240us; 1364us; 1244us; 1364us; 1246us; 1364us; 1250us; 1364us; 1252us; 1364us; 1256us; 1364us; 1259us; 1364us; 1261us; 1364us; 1263us; 1364us; 1264us; 1364us; 1266us; 1364us; 1267us; 1364us; 1269us; 1364us; 1270us; 1364us; 1272us; 1364us; 1273us; 1364us; 1275us; 1364us; 1276us; 1364us; 1278us; 1364us; 1279us; 1364us; 1285us; 1364us; 1286us; 1364us; 1293us; 1364us; 1295us; 1364us; 1297us; 1364us; 1298us; 1364us; 1299us; 1364us; 1302us; 1364us; 1309us; 1364us; 1310us; 1364us; 1313us; 1364us; 1314us; 1364us; 1327us; 1364us; 1334us; 1364us; 1341us; 1364us; 1348us; 1364us; 1365us; 1364us; 1372us; 1364us; 1373us; 1364us; 1379us; 1364us; 1385us; 1364us; 1386us; 1364us; 1387us; 1364us; 1403us; 1364us; 1413us; 1364us; 1426us; 1364us; 1428us; 1364us; 1431us; 1364us; 1432us; 1364us; 1438us; 1364us; 1453us; 1364us; 1458us; 1364us; 1463us; 1364us; 1488us; 1364us; 1521us; 1364us; 1530us; 1364us; 1535us; 1364us; 1666us; 1364us; 1825us; 1364us; 1829us; 1364us; 198us; 65535us; 6us; 1362us; 31us; 1362us; 109us; 1362us; 111us; 1362us; 228us; 1362us; 242us; 1362us; 264us; 1362us; 318us; 1362us; 322us; 1362us; 327us; 1362us; 406us; 884us; 409us; 1362us; 411us; 884us; 414us; 1362us; 446us; 884us; 449us; 1362us; 465us; 1362us; 496us; 1362us; 697us; 1362us; 703us; 1362us; 749us; 884us; 752us; 1362us; 756us; 1362us; 766us; 1362us; 840us; 884us; 842us; 884us; 843us; 884us; 847us; 884us; 848us; 884us; 849us; 884us; 850us; 884us; 857us; 884us; 859us; 884us; 860us; 884us; 862us; 884us; 864us; 884us; 867us; 884us; 869us; 884us; 874us; 884us; 878us; 884us; 880us; 884us; 882us; 884us; 890us; 884us; 893us; 884us; 904us; 884us; 912us; 884us; 932us; 884us; 934us; 884us; 939us; 884us; 940us; 884us; 942us; 884us; 943us; 884us; 944us; 884us; 945us; 884us; 951us; 884us; 953us; 884us; 955us; 1362us; 960us; 1362us; 972us; 1362us; 974us; 1362us; 977us; 1362us; 980us; 1362us; 996us; 884us; 997us; 1362us; 1001us; 884us; 1002us; 1362us; 1008us; 1362us; 1011us; 1362us; 1014us; 1362us; 1020us; 1362us; 1024us; 1362us; 1028us; 1362us; 1032us; 1362us; 1034us; 1362us; 1039us; 1362us; 1041us; 1362us; 1043us; 1362us; 1045us; 1362us; 1047us; 1362us; 1049us; 1362us; 1058us; 884us; 1060us; 1362us; 1068us; 1362us; 1075us; 1362us; 1081us; 1362us; 1083us; 1362us; 1087us; 884us; 1088us; 1362us; 1092us; 1362us; 1094us; 884us; 1095us; 1362us; 1099us; 1362us; 1102us; 1362us; 1105us; 1362us; 1107us; 1362us; 1112us; 1362us; 1114us; 1362us; 1157us; 1362us; 1159us; 1362us; 1163us; 1362us; 1164us; 1362us; 1165us; 1362us; 1166us; 1362us; 1167us; 1362us; 1168us; 1362us; 1169us; 1362us; 1170us; 1362us; 1171us; 1362us; 1172us; 1362us; 1173us; 1362us; 1175us; 1362us; 1176us; 1362us; 1177us; 1362us; 1178us; 1362us; 1179us; 1362us; 1180us; 1362us; 1181us; 1362us; 1182us; 1362us; 1183us; 1362us; 1204us; 1362us; 1205us; 1362us; 1206us; 1362us; 1207us; 1362us; 1210us; 1362us; 1211us; 1362us; 1212us; 1362us; 1213us; 1362us; 1215us; 1362us; 1218us; 884us; 1220us; 884us; 1225us; 884us; 1232us; 884us; 1235us; 884us; 1239us; 1362us; 1240us; 1362us; 1244us; 1362us; 1246us; 1362us; 1250us; 1362us; 1252us; 1362us; 1256us; 1362us; 1259us; 1362us; 1261us; 1362us; 1263us; 1362us; 1264us; 1362us; 1266us; 1362us; 1267us; 1362us; 1269us; 1362us; 1270us; 1362us; 1272us; 1362us; 1273us; 1362us; 1275us; 1362us; 1276us; 1362us; 1278us; 1362us; 1279us; 1362us; 1285us; 1362us; 1286us; 1362us; 1293us; 1362us; 1295us; 1362us; 1297us; 1362us; 1298us; 1362us; 1299us; 1362us; 1302us; 1362us; 1309us; 1362us; 1310us; 1362us; 1313us; 1362us; 1314us; 1362us; 1327us; 1362us; 1334us; 1362us; 1341us; 1362us; 1348us; 1362us; 1365us; 1362us; 1372us; 1362us; 1373us; 1362us; 1379us; 1362us; 1385us; 1362us; 1386us; 1362us; 1387us; 1362us; 1403us; 1362us; 1413us; 1362us; 1426us; 1362us; 1428us; 1362us; 1431us; 1362us; 1432us; 1362us; 1438us; 1362us; 1453us; 1362us; 1458us; 1362us; 1463us; 1362us; 1488us; 1362us; 1521us; 1362us; 1528us; 884us; 1530us; 1362us; 1533us; 884us; 1535us; 1362us; 1546us; 884us; 1548us; 884us; 1666us; 1362us; 1825us; 1362us; 1829us; 1362us; 148us; 65535us; 6us; 1363us; 31us; 1363us; 109us; 1363us; 111us; 1363us; 228us; 1363us; 242us; 1363us; 264us; 1363us; 318us; 1363us; 322us; 1363us; 327us; 1363us; 409us; 1363us; 414us; 1363us; 449us; 1363us; 465us; 1363us; 496us; 1363us; 697us; 1363us; 703us; 1363us; 752us; 1363us; 756us; 1363us; 766us; 1363us; 955us; 1363us; 960us; 1363us; 972us; 1363us; 974us; 1363us; 977us; 1363us; 980us; 1363us; 997us; 1363us; 1002us; 1363us; 1008us; 1363us; 1011us; 1363us; 1014us; 1363us; 1020us; 1363us; 1024us; 1363us; 1028us; 1363us; 1032us; 1363us; 1034us; 1363us; 1039us; 1363us; 1041us; 1363us; 1043us; 1363us; 1045us; 1363us; 1047us; 1363us; 1049us; 1363us; 1060us; 1363us; 1068us; 1363us; 1075us; 1363us; 1081us; 1363us; 1083us; 1363us; 1088us; 1363us; 1092us; 1363us; 1095us; 1363us; 1099us; 1363us; 1102us; 1363us; 1105us; 1363us; 1107us; 1363us; 1112us; 1363us; 1114us; 1363us; 1157us; 1363us; 1159us; 1363us; 1163us; 1363us; 1164us; 1363us; 1165us; 1363us; 1166us; 1363us; 1167us; 1363us; 1168us; 1363us; 1169us; 1363us; 1170us; 1363us; 1171us; 1363us; 1172us; 1363us; 1173us; 1363us; 1175us; 1363us; 1176us; 1363us; 1177us; 1363us; 1178us; 1363us; 1179us; 1363us; 1180us; 1363us; 1181us; 1363us; 1182us; 1363us; 1183us; 1363us; 1204us; 1363us; 1205us; 1363us; 1206us; 1363us; 1207us; 1363us; 1210us; 1363us; 1211us; 1363us; 1212us; 1363us; 1213us; 1363us; 1215us; 1363us; 1239us; 1363us; 1240us; 1363us; 1244us; 1363us; 1246us; 1363us; 1250us; 1363us; 1252us; 1363us; 1256us; 1363us; 1259us; 1363us; 1261us; 1363us; 1263us; 1363us; 1264us; 1363us; 1266us; 1363us; 1267us; 1363us; 1269us; 1363us; 1270us; 1363us; 1272us; 1363us; 1273us; 1363us; 1275us; 1363us; 1276us; 1363us; 1278us; 1363us; 1279us; 1363us; 1285us; 1363us; 1286us; 1363us; 1293us; 1363us; 1295us; 1363us; 1297us; 1363us; 1298us; 1363us; 1299us; 1363us; 1302us; 1363us; 1309us; 1363us; 1310us; 1363us; 1313us; 1363us; 1314us; 1363us; 1327us; 1363us; 1334us; 1363us; 1341us; 1363us; 1348us; 1363us; 1365us; 1363us; 1372us; 1363us; 1373us; 1363us; 1379us; 1363us; 1385us; 1363us; 1386us; 1363us; 1387us; 1363us; 1403us; 1363us; 1413us; 1363us; 1426us; 1363us; 1428us; 1363us; 1431us; 1363us; 1432us; 1363us; 1438us; 1363us; 1453us; 1363us; 1458us; 1363us; 1463us; 1363us; 1488us; 1363us; 1521us; 1363us; 1530us; 1363us; 1535us; 1363us; 1666us; 1363us; 1825us; 1363us; 1829us; 1363us; 148us; 65535us; 6us; 1355us; 31us; 1355us; 109us; 1355us; 111us; 1355us; 228us; 1355us; 242us; 1355us; 264us; 1355us; 318us; 1355us; 322us; 1355us; 327us; 1355us; 409us; 1355us; 414us; 1355us; 449us; 1355us; 465us; 1355us; 496us; 1355us; 697us; 1355us; 703us; 1355us; 752us; 1355us; 756us; 1355us; 766us; 1355us; 955us; 1355us; 960us; 1355us; 972us; 1355us; 974us; 1355us; 977us; 1355us; 980us; 1355us; 997us; 1355us; 1002us; 1355us; 1008us; 1355us; 1011us; 1355us; 1014us; 1355us; 1020us; 1355us; 1024us; 1355us; 1028us; 1355us; 1032us; 1355us; 1034us; 1355us; 1039us; 1355us; 1041us; 1355us; 1043us; 1355us; 1045us; 1355us; 1047us; 1355us; 1049us; 1355us; 1060us; 1355us; 1068us; 1355us; 1075us; 1355us; 1081us; 1355us; 1083us; 1355us; 1088us; 1355us; 1092us; 1355us; 1095us; 1355us; 1099us; 1355us; 1102us; 1355us; 1105us; 1355us; 1107us; 1355us; 1112us; 1355us; 1114us; 1355us; 1157us; 1355us; 1159us; 1355us; 1163us; 1355us; 1164us; 1355us; 1165us; 1355us; 1166us; 1355us; 1167us; 1355us; 1168us; 1355us; 1169us; 1355us; 1170us; 1355us; 1171us; 1355us; 1172us; 1355us; 1173us; 1355us; 1175us; 1355us; 1176us; 1355us; 1177us; 1355us; 1178us; 1355us; 1179us; 1355us; 1180us; 1355us; 1181us; 1355us; 1182us; 1355us; 1183us; 1355us; 1204us; 1355us; 1205us; 1355us; 1206us; 1355us; 1207us; 1355us; 1210us; 1355us; 1211us; 1355us; 1212us; 1355us; 1213us; 1355us; 1215us; 1355us; 1239us; 1355us; 1240us; 1355us; 1244us; 1355us; 1246us; 1355us; 1250us; 1355us; 1252us; 1355us; 1256us; 1355us; 1259us; 1355us; 1261us; 1355us; 1263us; 1355us; 1264us; 1355us; 1266us; 1355us; 1267us; 1355us; 1269us; 1355us; 1270us; 1355us; 1272us; 1355us; 1273us; 1355us; 1275us; 1355us; 1276us; 1355us; 1278us; 1355us; 1279us; 1355us; 1285us; 1355us; 1286us; 1355us; 1293us; 1355us; 1295us; 1355us; 1297us; 1355us; 1298us; 1355us; 1299us; 1355us; 1302us; 1355us; 1309us; 1355us; 1310us; 1355us; 1313us; 1355us; 1314us; 1355us; 1327us; 1355us; 1334us; 1355us; 1341us; 1355us; 1348us; 1355us; 1365us; 1355us; 1372us; 1355us; 1373us; 1355us; 1379us; 1355us; 1385us; 1355us; 1386us; 1355us; 1387us; 1355us; 1403us; 1355us; 1413us; 1355us; 1426us; 1355us; 1428us; 1355us; 1431us; 1355us; 1432us; 1355us; 1438us; 1355us; 1453us; 1355us; 1458us; 1355us; 1463us; 1355us; 1488us; 1355us; 1521us; 1355us; 1530us; 1355us; 1535us; 1355us; 1666us; 1355us; 1825us; 1355us; 1829us; 1355us; 3us; 65535us; 1385us; 1389us; 1386us; 1389us; 1387us; 1389us; 3us; 65535us; 1385us; 1399us; 1386us; 1399us; 1387us; 1399us; 1us; 65535us; 1386us; 1409us; 148us; 65535us; 6us; 1356us; 31us; 1356us; 109us; 1356us; 111us; 1356us; 228us; 1356us; 242us; 1356us; 264us; 1356us; 318us; 1356us; 322us; 1356us; 327us; 1356us; 409us; 1356us; 414us; 1356us; 449us; 1356us; 465us; 1356us; 496us; 1356us; 697us; 1356us; 703us; 1356us; 752us; 1356us; 756us; 1356us; 766us; 1356us; 955us; 1356us; 960us; 1356us; 972us; 1356us; 974us; 1356us; 977us; 1356us; 980us; 1356us; 997us; 1356us; 1002us; 1356us; 1008us; 1356us; 1011us; 1356us; 1014us; 1356us; 1020us; 1356us; 1024us; 1356us; 1028us; 1356us; 1032us; 1356us; 1034us; 1356us; 1039us; 1356us; 1041us; 1356us; 1043us; 1356us; 1045us; 1356us; 1047us; 1356us; 1049us; 1356us; 1060us; 1356us; 1068us; 1356us; 1075us; 1356us; 1081us; 1356us; 1083us; 1356us; 1088us; 1356us; 1092us; 1356us; 1095us; 1356us; 1099us; 1356us; 1102us; 1356us; 1105us; 1356us; 1107us; 1356us; 1112us; 1356us; 1114us; 1356us; 1157us; 1356us; 1159us; 1356us; 1163us; 1356us; 1164us; 1356us; 1165us; 1356us; 1166us; 1356us; 1167us; 1356us; 1168us; 1356us; 1169us; 1356us; 1170us; 1356us; 1171us; 1356us; 1172us; 1356us; 1173us; 1356us; 1175us; 1356us; 1176us; 1356us; 1177us; 1356us; 1178us; 1356us; 1179us; 1356us; 1180us; 1356us; 1181us; 1356us; 1182us; 1356us; 1183us; 1356us; 1204us; 1356us; 1205us; 1356us; 1206us; 1356us; 1207us; 1356us; 1210us; 1356us; 1211us; 1356us; 1212us; 1356us; 1213us; 1356us; 1215us; 1356us; 1239us; 1356us; 1240us; 1356us; 1244us; 1356us; 1246us; 1356us; 1250us; 1356us; 1252us; 1356us; 1256us; 1356us; 1259us; 1356us; 1261us; 1356us; 1263us; 1356us; 1264us; 1356us; 1266us; 1356us; 1267us; 1356us; 1269us; 1356us; 1270us; 1356us; 1272us; 1356us; 1273us; 1356us; 1275us; 1356us; 1276us; 1356us; 1278us; 1356us; 1279us; 1356us; 1285us; 1356us; 1286us; 1356us; 1293us; 1356us; 1295us; 1356us; 1297us; 1356us; 1298us; 1356us; 1299us; 1356us; 1302us; 1356us; 1309us; 1356us; 1310us; 1356us; 1313us; 1356us; 1314us; 1356us; 1327us; 1356us; 1334us; 1356us; 1341us; 1356us; 1348us; 1356us; 1365us; 1356us; 1372us; 1356us; 1373us; 1356us; 1379us; 1356us; 1385us; 1356us; 1386us; 1356us; 1387us; 1356us; 1403us; 1356us; 1413us; 1356us; 1426us; 1356us; 1428us; 1356us; 1431us; 1356us; 1432us; 1356us; 1438us; 1356us; 1453us; 1356us; 1458us; 1356us; 1463us; 1356us; 1488us; 1356us; 1521us; 1356us; 1530us; 1356us; 1535us; 1356us; 1666us; 1356us; 1825us; 1356us; 1829us; 1356us; 1us; 65535us; 1413us; 1414us; 1us; 65535us; 1327us; 1328us; 1us; 65535us; 1379us; 1380us; 1us; 65535us; 1413us; 1422us; 1us; 65535us; 1110us; 1111us; 1us; 65535us; 1058us; 1059us; 1us; 65535us; 1058us; 1067us; 1us; 65535us; 1148us; 1432us; 3us; 65535us; 1385us; 1406us; 1386us; 1406us; 1387us; 1406us; 1us; 65535us; 1437us; 1438us; 4us; 65535us; 318us; 319us; 322us; 323us; 327us; 328us; 1453us; 1454us; 1us; 65535us; 1436us; 1437us; 1us; 65535us; 1438us; 1439us; 1us; 65535us; 1413us; 1420us; 2us; 65535us; 1413us; 1457us; 1521us; 1522us; 6us; 65535us; 1455us; 1456us; 1460us; 1461us; 1465us; 1466us; 1469us; 1470us; 1471us; 1472us; 1475us; 1476us; 6us; 65535us; 1455us; 1479us; 1460us; 1479us; 1465us; 1479us; 1469us; 1479us; 1471us; 1478us; 1475us; 1479us; 3us; 65535us; 1467us; 1487us; 1471us; 1487us; 1479us; 1487us; 5us; 65535us; 1454us; 1455us; 1459us; 1460us; 1464us; 1465us; 1468us; 1469us; 1474us; 1475us; 3us; 65535us; 1467us; 1468us; 1471us; 1474us; 1479us; 1486us; 1us; 65535us; 1413us; 1421us; 1us; 65535us; 1413us; 1492us; 1us; 65535us; 1514us; 1515us; 2us; 65535us; 1492us; 1493us; 1514us; 1499us; 1us; 65535us; 1496us; 1497us; 4us; 65535us; 1494us; 1495us; 1507us; 1508us; 1509us; 1510us; 1511us; 1512us; 5us; 65535us; 1494us; 1509us; 1496us; 1507us; 1507us; 1509us; 1509us; 1509us; 1511us; 1509us; 148us; 65535us; 6us; 1357us; 31us; 1357us; 109us; 1357us; 111us; 1357us; 228us; 1357us; 242us; 1357us; 264us; 1357us; 318us; 1357us; 322us; 1357us; 327us; 1357us; 409us; 1357us; 414us; 1357us; 449us; 1357us; 465us; 1357us; 496us; 1357us; 697us; 1357us; 703us; 1357us; 752us; 1357us; 756us; 1357us; 766us; 1357us; 955us; 1357us; 960us; 1357us; 972us; 1357us; 974us; 1357us; 977us; 1357us; 980us; 1357us; 997us; 1357us; 1002us; 1357us; 1008us; 1357us; 1011us; 1357us; 1014us; 1357us; 1020us; 1357us; 1024us; 1357us; 1028us; 1357us; 1032us; 1357us; 1034us; 1357us; 1039us; 1357us; 1041us; 1357us; 1043us; 1357us; 1045us; 1357us; 1047us; 1357us; 1049us; 1357us; 1060us; 1357us; 1068us; 1357us; 1075us; 1357us; 1081us; 1357us; 1083us; 1357us; 1088us; 1357us; 1092us; 1357us; 1095us; 1357us; 1099us; 1357us; 1102us; 1357us; 1105us; 1357us; 1107us; 1357us; 1112us; 1357us; 1114us; 1357us; 1157us; 1357us; 1159us; 1357us; 1163us; 1357us; 1164us; 1357us; 1165us; 1357us; 1166us; 1357us; 1167us; 1357us; 1168us; 1357us; 1169us; 1357us; 1170us; 1357us; 1171us; 1357us; 1172us; 1357us; 1173us; 1357us; 1175us; 1357us; 1176us; 1357us; 1177us; 1357us; 1178us; 1357us; 1179us; 1357us; 1180us; 1357us; 1181us; 1357us; 1182us; 1357us; 1183us; 1357us; 1204us; 1357us; 1205us; 1357us; 1206us; 1357us; 1207us; 1357us; 1210us; 1357us; 1211us; 1357us; 1212us; 1357us; 1213us; 1357us; 1215us; 1357us; 1239us; 1357us; 1240us; 1357us; 1244us; 1357us; 1246us; 1357us; 1250us; 1357us; 1252us; 1357us; 1256us; 1357us; 1259us; 1357us; 1261us; 1357us; 1263us; 1357us; 1264us; 1357us; 1266us; 1357us; 1267us; 1357us; 1269us; 1357us; 1270us; 1357us; 1272us; 1357us; 1273us; 1357us; 1275us; 1357us; 1276us; 1357us; 1278us; 1357us; 1279us; 1357us; 1285us; 1357us; 1286us; 1357us; 1293us; 1357us; 1295us; 1357us; 1297us; 1357us; 1298us; 1357us; 1299us; 1357us; 1302us; 1357us; 1309us; 1357us; 1310us; 1357us; 1313us; 1357us; 1314us; 1357us; 1327us; 1357us; 1334us; 1357us; 1341us; 1357us; 1348us; 1357us; 1365us; 1357us; 1372us; 1357us; 1373us; 1357us; 1379us; 1357us; 1385us; 1357us; 1386us; 1357us; 1387us; 1357us; 1403us; 1357us; 1413us; 1357us; 1426us; 1357us; 1428us; 1357us; 1431us; 1357us; 1432us; 1357us; 1438us; 1357us; 1453us; 1357us; 1458us; 1357us; 1463us; 1357us; 1488us; 1357us; 1521us; 1357us; 1530us; 1357us; 1535us; 1357us; 1666us; 1357us; 1825us; 1357us; 1829us; 1357us; 150us; 65535us; 6us; 1520us; 31us; 1520us; 109us; 1520us; 111us; 1520us; 228us; 1520us; 242us; 1520us; 264us; 1520us; 318us; 1520us; 322us; 1520us; 327us; 1520us; 409us; 1520us; 414us; 1520us; 449us; 1520us; 465us; 1520us; 496us; 1520us; 697us; 1520us; 703us; 1520us; 752us; 1520us; 756us; 1520us; 766us; 1520us; 955us; 1520us; 960us; 1520us; 972us; 1520us; 974us; 1520us; 977us; 1520us; 980us; 1520us; 997us; 1520us; 1002us; 1520us; 1008us; 1520us; 1011us; 1520us; 1014us; 1520us; 1020us; 1520us; 1024us; 1520us; 1028us; 1520us; 1032us; 1520us; 1034us; 1520us; 1039us; 1520us; 1041us; 1520us; 1043us; 1520us; 1045us; 1520us; 1047us; 1520us; 1049us; 1520us; 1060us; 1520us; 1068us; 1520us; 1075us; 1520us; 1081us; 1520us; 1083us; 1520us; 1088us; 1520us; 1092us; 1520us; 1095us; 1520us; 1099us; 1520us; 1102us; 1520us; 1105us; 1520us; 1107us; 1520us; 1112us; 1520us; 1114us; 1520us; 1157us; 1520us; 1159us; 1520us; 1163us; 1520us; 1164us; 1520us; 1165us; 1520us; 1166us; 1520us; 1167us; 1520us; 1168us; 1520us; 1169us; 1520us; 1170us; 1520us; 1171us; 1520us; 1172us; 1520us; 1173us; 1520us; 1175us; 1520us; 1176us; 1520us; 1177us; 1520us; 1178us; 1520us; 1179us; 1520us; 1180us; 1520us; 1181us; 1520us; 1182us; 1520us; 1183us; 1520us; 1204us; 1520us; 1205us; 1520us; 1206us; 1520us; 1207us; 1520us; 1210us; 1520us; 1211us; 1520us; 1212us; 1520us; 1213us; 1520us; 1215us; 1520us; 1239us; 1520us; 1240us; 1520us; 1244us; 1520us; 1246us; 1520us; 1250us; 1520us; 1252us; 1520us; 1256us; 1520us; 1259us; 1520us; 1261us; 1520us; 1263us; 1520us; 1264us; 1520us; 1266us; 1520us; 1267us; 1520us; 1269us; 1520us; 1270us; 1520us; 1272us; 1520us; 1273us; 1520us; 1275us; 1520us; 1276us; 1520us; 1278us; 1520us; 1279us; 1520us; 1285us; 1520us; 1286us; 1520us; 1293us; 1520us; 1295us; 1520us; 1297us; 1520us; 1298us; 1520us; 1299us; 1520us; 1302us; 1520us; 1309us; 1520us; 1310us; 1520us; 1313us; 1520us; 1314us; 1520us; 1327us; 1520us; 1333us; 1519us; 1334us; 1520us; 1341us; 1520us; 1348us; 1520us; 1365us; 1520us; 1372us; 1520us; 1373us; 1520us; 1379us; 1520us; 1385us; 1520us; 1386us; 1520us; 1387us; 1520us; 1403us; 1520us; 1413us; 1520us; 1426us; 1520us; 1428us; 1520us; 1431us; 1520us; 1432us; 1520us; 1438us; 1520us; 1453us; 1520us; 1458us; 1520us; 1463us; 1520us; 1488us; 1520us; 1518us; 1519us; 1521us; 1520us; 1530us; 1520us; 1535us; 1520us; 1666us; 1520us; 1825us; 1520us; 1829us; 1520us; 116us; 65535us; 6us; 1019us; 31us; 1019us; 109us; 1019us; 111us; 1019us; 228us; 1019us; 242us; 1019us; 264us; 1019us; 409us; 1019us; 414us; 1019us; 449us; 1019us; 465us; 1019us; 697us; 1019us; 703us; 1019us; 752us; 1019us; 756us; 1019us; 766us; 1019us; 955us; 1019us; 960us; 1019us; 972us; 1019us; 974us; 1019us; 977us; 1019us; 980us; 1019us; 997us; 1019us; 1002us; 1019us; 1008us; 1019us; 1011us; 1019us; 1014us; 1019us; 1020us; 1019us; 1024us; 1019us; 1028us; 1019us; 1032us; 1019us; 1034us; 1019us; 1039us; 1019us; 1041us; 1019us; 1043us; 1019us; 1045us; 1019us; 1047us; 1019us; 1049us; 1019us; 1060us; 1019us; 1068us; 1019us; 1075us; 1019us; 1081us; 1019us; 1083us; 1019us; 1088us; 1019us; 1092us; 1019us; 1095us; 1019us; 1099us; 1019us; 1102us; 1019us; 1105us; 1019us; 1107us; 1019us; 1112us; 1019us; 1114us; 1019us; 1157us; 1019us; 1159us; 1019us; 1163us; 1019us; 1164us; 1019us; 1165us; 1019us; 1166us; 1019us; 1167us; 1019us; 1168us; 1019us; 1169us; 1019us; 1170us; 1019us; 1171us; 1019us; 1172us; 1019us; 1173us; 1019us; 1175us; 1019us; 1176us; 1019us; 1177us; 1019us; 1178us; 1019us; 1179us; 1019us; 1180us; 1019us; 1181us; 1019us; 1182us; 1019us; 1183us; 1019us; 1204us; 1019us; 1205us; 1019us; 1206us; 1019us; 1207us; 1019us; 1210us; 1019us; 1211us; 1019us; 1212us; 1019us; 1213us; 1019us; 1215us; 1019us; 1239us; 1019us; 1240us; 1019us; 1244us; 1019us; 1246us; 1019us; 1250us; 1019us; 1252us; 1019us; 1256us; 1019us; 1259us; 1019us; 1261us; 1019us; 1327us; 1019us; 1334us; 1019us; 1341us; 1019us; 1348us; 1019us; 1365us; 1019us; 1372us; 1019us; 1373us; 1019us; 1379us; 1019us; 1385us; 1019us; 1386us; 1019us; 1387us; 1019us; 1403us; 1019us; 1413us; 1019us; 1426us; 1019us; 1428us; 1019us; 1431us; 1019us; 1432us; 1019us; 1458us; 1019us; 1463us; 1019us; 1488us; 1019us; 1530us; 1019us; 1535us; 1019us; 1825us; 1019us; 1829us; 1019us; 116us; 65535us; 6us; 1018us; 31us; 1018us; 109us; 1018us; 111us; 1018us; 228us; 1018us; 242us; 1018us; 264us; 1018us; 409us; 1018us; 414us; 1018us; 449us; 1018us; 465us; 1018us; 697us; 1018us; 703us; 1018us; 752us; 1018us; 756us; 1018us; 766us; 1018us; 955us; 1018us; 960us; 1018us; 972us; 1018us; 974us; 1018us; 977us; 1018us; 980us; 1018us; 997us; 1018us; 1002us; 1018us; 1008us; 1018us; 1011us; 1018us; 1014us; 1018us; 1020us; 1018us; 1024us; 1018us; 1028us; 1018us; 1032us; 1018us; 1034us; 1018us; 1039us; 1018us; 1041us; 1018us; 1043us; 1018us; 1045us; 1018us; 1047us; 1018us; 1049us; 1018us; 1060us; 1018us; 1068us; 1018us; 1075us; 1018us; 1081us; 1018us; 1083us; 1018us; 1088us; 1018us; 1092us; 1018us; 1095us; 1018us; 1099us; 1018us; 1102us; 1018us; 1105us; 1018us; 1107us; 1018us; 1112us; 1018us; 1114us; 1018us; 1157us; 1018us; 1159us; 1018us; 1163us; 1018us; 1164us; 1018us; 1165us; 1018us; 1166us; 1018us; 1167us; 1018us; 1168us; 1018us; 1169us; 1018us; 1170us; 1018us; 1171us; 1018us; 1172us; 1018us; 1173us; 1018us; 1175us; 1018us; 1176us; 1018us; 1177us; 1018us; 1178us; 1018us; 1179us; 1018us; 1180us; 1018us; 1181us; 1018us; 1182us; 1018us; 1183us; 1018us; 1204us; 1018us; 1205us; 1018us; 1206us; 1018us; 1207us; 1018us; 1210us; 1018us; 1211us; 1018us; 1212us; 1018us; 1213us; 1018us; 1215us; 1018us; 1239us; 1018us; 1240us; 1018us; 1244us; 1018us; 1246us; 1018us; 1250us; 1018us; 1252us; 1018us; 1256us; 1018us; 1259us; 1018us; 1261us; 1018us; 1327us; 1018us; 1334us; 1018us; 1341us; 1018us; 1348us; 1018us; 1365us; 1018us; 1372us; 1018us; 1373us; 1018us; 1379us; 1018us; 1385us; 1018us; 1386us; 1018us; 1387us; 1018us; 1403us; 1018us; 1413us; 1018us; 1426us; 1018us; 1428us; 1018us; 1431us; 1018us; 1432us; 1018us; 1458us; 1018us; 1463us; 1018us; 1488us; 1018us; 1530us; 1018us; 1535us; 1018us; 1825us; 1018us; 1829us; 1018us; 3us; 65535us; 817us; 818us; 937us; 938us; 967us; 968us; 5us; 65535us; 106us; 107us; 179us; 180us; 195us; 196us; 435us; 436us; 1555us; 1556us; 3us; 65535us; 407us; 408us; 412us; 413us; 750us; 751us; 9us; 65535us; 106us; 1553us; 144us; 145us; 179us; 1553us; 195us; 1553us; 372us; 373us; 435us; 1553us; 641us; 642us; 1555us; 1553us; 1558us; 1559us; 9us; 65535us; 106us; 1557us; 144us; 1557us; 179us; 1557us; 195us; 1557us; 372us; 1557us; 435us; 1557us; 641us; 1557us; 1555us; 1557us; 1558us; 1557us; 2us; 65535us; 1561us; 1562us; 1564us; 1565us; 11us; 65535us; 106us; 1560us; 144us; 1560us; 179us; 1560us; 195us; 1560us; 372us; 1560us; 435us; 1560us; 641us; 1560us; 1555us; 1560us; 1558us; 1560us; 1561us; 1563us; 1564us; 1563us; 31us; 65535us; 8us; 1584us; 173us; 534us; 422us; 534us; 458us; 459us; 468us; 469us; 529us; 534us; 537us; 1652us; 599us; 600us; 602us; 603us; 678us; 679us; 772us; 773us; 817us; 1551us; 937us; 1551us; 967us; 1551us; 1151us; 1152us; 1153us; 1154us; 1155us; 1156us; 1444us; 1445us; 1447us; 1448us; 1449us; 1652us; 1582us; 1583us; 1610us; 1652us; 1615us; 1616us; 1618us; 1619us; 1629us; 1692us; 1633us; 1692us; 1639us; 1652us; 1650us; 1651us; 1680us; 1692us; 1682us; 1692us; 1693us; 1694us; 1us; 65535us; 8us; 9us; 31us; 65535us; 8us; 1581us; 173us; 1581us; 422us; 1581us; 458us; 1581us; 468us; 1581us; 529us; 1581us; 537us; 1581us; 599us; 1581us; 602us; 1581us; 678us; 1581us; 772us; 1581us; 817us; 1581us; 937us; 1581us; 967us; 1581us; 1151us; 1581us; 1153us; 1581us; 1155us; 1581us; 1444us; 1581us; 1447us; 1581us; 1449us; 1581us; 1582us; 1581us; 1610us; 1581us; 1615us; 1581us; 1618us; 1581us; 1629us; 1581us; 1633us; 1581us; 1639us; 1581us; 1650us; 1581us; 1680us; 1581us; 1682us; 1581us; 1693us; 1581us; 6us; 65535us; 1587us; 1588us; 1589us; 1590us; 1591us; 1592us; 1594us; 1595us; 1596us; 1597us; 1657us; 1658us; 93us; 65535us; 8us; 1602us; 106us; 1602us; 144us; 1602us; 173us; 1602us; 179us; 1602us; 183us; 1602us; 184us; 1601us; 185us; 1602us; 186us; 1601us; 195us; 1602us; 278us; 1602us; 279us; 1601us; 372us; 1602us; 422us; 1602us; 428us; 1602us; 429us; 1601us; 435us; 1602us; 458us; 1602us; 468us; 1602us; 493us; 1602us; 529us; 1602us; 537us; 1602us; 538us; 1602us; 599us; 1602us; 602us; 1602us; 612us; 1602us; 622us; 1602us; 623us; 1601us; 624us; 1601us; 638us; 1602us; 641us; 1602us; 658us; 1602us; 661us; 1602us; 664us; 1602us; 665us; 1601us; 666us; 1601us; 678us; 1602us; 688us; 1602us; 772us; 1602us; 817us; 1602us; 871us; 1602us; 937us; 1602us; 967us; 1602us; 1151us; 1602us; 1153us; 1602us; 1155us; 1602us; 1281us; 1602us; 1282us; 1602us; 1444us; 1602us; 1447us; 1602us; 1449us; 1602us; 1451us; 1602us; 1513us; 1602us; 1514us; 1601us; 1555us; 1602us; 1558us; 1602us; 1561us; 1602us; 1564us; 1602us; 1566us; 1602us; 1567us; 1601us; 1568us; 1602us; 1569us; 1601us; 1572us; 1602us; 1573us; 1601us; 1574us; 1601us; 1575us; 1602us; 1576us; 1601us; 1579us; 1602us; 1580us; 1601us; 1582us; 1602us; 1586us; 1601us; 1587us; 1602us; 1589us; 1602us; 1591us; 1602us; 1593us; 1601us; 1594us; 1602us; 1596us; 1602us; 1605us; 1601us; 1610us; 1602us; 1612us; 1601us; 1615us; 1602us; 1618us; 1602us; 1629us; 1602us; 1633us; 1602us; 1639us; 1602us; 1641us; 1601us; 1646us; 1602us; 1650us; 1602us; 1656us; 1602us; 1657us; 1602us; 1680us; 1602us; 1682us; 1602us; 1693us; 1602us; 93us; 65535us; 8us; 1648us; 106us; 1648us; 144us; 1648us; 173us; 1648us; 179us; 1648us; 183us; 1648us; 184us; 1609us; 185us; 1648us; 186us; 1609us; 195us; 1648us; 278us; 1648us; 279us; 1609us; 372us; 1648us; 422us; 1648us; 428us; 1648us; 429us; 1609us; 435us; 1648us; 458us; 1648us; 468us; 1648us; 493us; 1648us; 529us; 1648us; 537us; 1648us; 538us; 1648us; 599us; 1648us; 602us; 1648us; 612us; 1648us; 622us; 1648us; 623us; 1609us; 624us; 1609us; 638us; 1648us; 641us; 1648us; 658us; 1648us; 661us; 1648us; 664us; 1648us; 665us; 1609us; 666us; 1609us; 678us; 1648us; 688us; 1648us; 772us; 1648us; 817us; 1648us; 871us; 1648us; 937us; 1648us; 967us; 1648us; 1151us; 1648us; 1153us; 1648us; 1155us; 1648us; 1281us; 1648us; 1282us; 1648us; 1444us; 1648us; 1447us; 1648us; 1449us; 1648us; 1451us; 1648us; 1513us; 1648us; 1514us; 1609us; 1555us; 1648us; 1558us; 1648us; 1561us; 1648us; 1564us; 1648us; 1566us; 1648us; 1567us; 1609us; 1568us; 1648us; 1569us; 1609us; 1572us; 1648us; 1573us; 1609us; 1574us; 1609us; 1575us; 1648us; 1576us; 1609us; 1579us; 1648us; 1580us; 1609us; 1582us; 1648us; 1586us; 1609us; 1587us; 1648us; 1589us; 1648us; 1591us; 1648us; 1593us; 1609us; 1594us; 1648us; 1596us; 1648us; 1605us; 1609us; 1610us; 1648us; 1612us; 1613us; 1615us; 1648us; 1618us; 1648us; 1629us; 1648us; 1633us; 1648us; 1639us; 1648us; 1641us; 1642us; 1646us; 1648us; 1650us; 1648us; 1656us; 1648us; 1657us; 1648us; 1680us; 1648us; 1682us; 1648us; 1693us; 1648us; 66us; 65535us; 8us; 1586us; 106us; 1574us; 144us; 1574us; 173us; 1586us; 179us; 1574us; 183us; 184us; 185us; 186us; 195us; 1574us; 278us; 279us; 372us; 1574us; 422us; 1586us; 428us; 429us; 435us; 1574us; 458us; 1586us; 468us; 1586us; 529us; 1586us; 537us; 1586us; 599us; 1586us; 602us; 1586us; 612us; 624us; 622us; 623us; 638us; 666us; 641us; 1574us; 658us; 666us; 661us; 666us; 664us; 665us; 678us; 1586us; 688us; 666us; 772us; 1586us; 817us; 1586us; 937us; 1586us; 967us; 1586us; 1151us; 1586us; 1153us; 1586us; 1155us; 1586us; 1444us; 1586us; 1447us; 1586us; 1449us; 1586us; 1513us; 1514us; 1555us; 1574us; 1558us; 1574us; 1561us; 1574us; 1564us; 1574us; 1566us; 1567us; 1568us; 1569us; 1572us; 1573us; 1575us; 1576us; 1579us; 1580us; 1582us; 1586us; 1587us; 1593us; 1589us; 1593us; 1591us; 1593us; 1594us; 1593us; 1596us; 1593us; 1610us; 1586us; 1615us; 1586us; 1618us; 1586us; 1629us; 1586us; 1633us; 1586us; 1639us; 1586us; 1650us; 1586us; 1656us; 1605us; 1657us; 1593us; 1680us; 1586us; 1682us; 1586us; 1693us; 1586us; 19us; 65535us; 184us; 1606us; 186us; 1606us; 279us; 1606us; 429us; 1606us; 623us; 1606us; 624us; 1606us; 665us; 1606us; 666us; 1606us; 1514us; 1606us; 1567us; 1606us; 1569us; 1606us; 1573us; 1606us; 1574us; 1606us; 1576us; 1606us; 1580us; 1606us; 1586us; 1606us; 1593us; 1606us; 1605us; 1606us; 1607us; 1608us; 4us; 65535us; 537us; 1611us; 1449us; 1611us; 1610us; 1611us; 1639us; 1640us; 2us; 65535us; 1630us; 1631us; 1683us; 1632us; 66us; 65535us; 8us; 1614us; 106us; 1614us; 144us; 1614us; 173us; 1614us; 179us; 1614us; 183us; 1614us; 185us; 1614us; 195us; 1614us; 278us; 1614us; 372us; 1614us; 422us; 1614us; 428us; 1614us; 435us; 1614us; 458us; 1614us; 468us; 1614us; 529us; 1614us; 537us; 1614us; 599us; 1614us; 602us; 1614us; 612us; 1614us; 622us; 1614us; 638us; 1614us; 641us; 1614us; 658us; 1614us; 661us; 1614us; 664us; 1614us; 678us; 1614us; 688us; 1614us; 772us; 1614us; 817us; 1614us; 937us; 1614us; 967us; 1614us; 1151us; 1614us; 1153us; 1614us; 1155us; 1614us; 1444us; 1614us; 1447us; 1614us; 1449us; 1614us; 1513us; 1614us; 1555us; 1614us; 1558us; 1614us; 1561us; 1614us; 1564us; 1614us; 1566us; 1614us; 1568us; 1614us; 1572us; 1614us; 1575us; 1614us; 1579us; 1614us; 1582us; 1614us; 1587us; 1614us; 1589us; 1614us; 1591us; 1614us; 1594us; 1614us; 1596us; 1614us; 1610us; 1614us; 1615us; 1614us; 1618us; 1614us; 1629us; 1614us; 1633us; 1614us; 1639us; 1614us; 1650us; 1614us; 1656us; 1614us; 1657us; 1614us; 1680us; 1614us; 1682us; 1614us; 1693us; 1614us; 4us; 65535us; 493us; 494us; 1281us; 1283us; 1282us; 1284us; 1451us; 1452us; 67us; 65535us; 8us; 1636us; 106us; 1636us; 144us; 1636us; 173us; 1636us; 179us; 1636us; 183us; 1636us; 185us; 1636us; 195us; 1636us; 278us; 1636us; 372us; 1636us; 422us; 1636us; 428us; 1636us; 435us; 1636us; 458us; 1636us; 468us; 1636us; 529us; 1636us; 537us; 1636us; 599us; 1636us; 602us; 1636us; 612us; 1636us; 622us; 1636us; 638us; 1636us; 641us; 1636us; 658us; 1636us; 661us; 1636us; 664us; 1636us; 678us; 1636us; 688us; 1636us; 772us; 1636us; 817us; 1636us; 871us; 872us; 937us; 1636us; 967us; 1636us; 1151us; 1636us; 1153us; 1636us; 1155us; 1636us; 1444us; 1636us; 1447us; 1636us; 1449us; 1636us; 1513us; 1636us; 1555us; 1636us; 1558us; 1636us; 1561us; 1636us; 1564us; 1636us; 1566us; 1636us; 1568us; 1636us; 1572us; 1636us; 1575us; 1636us; 1579us; 1636us; 1582us; 1636us; 1587us; 1636us; 1589us; 1636us; 1591us; 1636us; 1594us; 1636us; 1596us; 1636us; 1610us; 1636us; 1615us; 1636us; 1618us; 1636us; 1629us; 1636us; 1633us; 1636us; 1639us; 1636us; 1650us; 1636us; 1656us; 1636us; 1657us; 1636us; 1680us; 1636us; 1682us; 1636us; 1693us; 1636us; 73us; 65535us; 8us; 1644us; 106us; 1644us; 144us; 1644us; 173us; 1644us; 179us; 1644us; 183us; 1644us; 185us; 1644us; 195us; 1644us; 278us; 1644us; 372us; 1644us; 422us; 1644us; 428us; 1644us; 435us; 1644us; 458us; 1644us; 468us; 1644us; 493us; 1643us; 529us; 1644us; 537us; 1644us; 538us; 1647us; 599us; 1644us; 602us; 1644us; 612us; 1644us; 622us; 1644us; 638us; 1644us; 641us; 1644us; 658us; 1644us; 661us; 1644us; 664us; 1644us; 678us; 1644us; 688us; 1644us; 772us; 1644us; 817us; 1644us; 871us; 1644us; 937us; 1644us; 967us; 1644us; 1151us; 1644us; 1153us; 1644us; 1155us; 1644us; 1281us; 1643us; 1282us; 1643us; 1444us; 1644us; 1447us; 1644us; 1449us; 1644us; 1451us; 1643us; 1513us; 1644us; 1555us; 1644us; 1558us; 1644us; 1561us; 1644us; 1564us; 1644us; 1566us; 1644us; 1568us; 1644us; 1572us; 1644us; 1575us; 1644us; 1579us; 1644us; 1582us; 1644us; 1587us; 1644us; 1589us; 1644us; 1591us; 1644us; 1594us; 1644us; 1596us; 1644us; 1610us; 1644us; 1615us; 1644us; 1618us; 1644us; 1629us; 1644us; 1633us; 1644us; 1639us; 1644us; 1646us; 1647us; 1650us; 1644us; 1656us; 1644us; 1657us; 1644us; 1680us; 1644us; 1682us; 1644us; 1693us; 1644us; 4us; 65535us; 606us; 621us; 619us; 620us; 1602us; 1671us; 1673us; 1674us; 6us; 65535us; 606us; 1677us; 619us; 1677us; 1311us; 1312us; 1602us; 1677us; 1673us; 1677us; 1678us; 1679us; 8us; 65535us; 537us; 1628us; 1449us; 1628us; 1610us; 1628us; 1629us; 1630us; 1633us; 1634us; 1639us; 1628us; 1680us; 1687us; 1682us; 1695us; 2us; 65535us; 1680us; 1681us; 1682us; 1683us; 3us; 65535us; 1633us; 1635us; 1680us; 1696us; 1682us; 1696us; 1us; 65535us; 809us; 810us; 6us; 65535us; 1697us; 1707us; 1704us; 1707us; 1711us; 1707us; 1717us; 1707us; 1718us; 1707us; 1719us; 1707us; 6us; 65535us; 1697us; 1711us; 1704us; 1711us; 1711us; 1711us; 1717us; 1711us; 1718us; 1711us; 1719us; 1711us; 6us; 65535us; 1697us; 1713us; 1704us; 1713us; 1711us; 1712us; 1717us; 1713us; 1718us; 1713us; 1719us; 1713us; 5us; 65535us; 1697us; 1698us; 1704us; 1705us; 1717us; 1714us; 1718us; 1715us; 1719us; 1716us; 108us; 65535us; 8us; 1600us; 106us; 1600us; 144us; 1600us; 173us; 1600us; 179us; 1600us; 183us; 1600us; 184us; 1599us; 185us; 1600us; 186us; 1599us; 195us; 1600us; 278us; 1600us; 279us; 1599us; 372us; 1600us; 422us; 1600us; 428us; 1600us; 429us; 1599us; 435us; 1600us; 458us; 1600us; 468us; 1600us; 493us; 1599us; 529us; 1600us; 537us; 1600us; 538us; 1599us; 562us; 567us; 577us; 578us; 590us; 601us; 594us; 601us; 597us; 598us; 599us; 1600us; 602us; 1600us; 612us; 1600us; 622us; 1600us; 623us; 1599us; 624us; 1599us; 638us; 1600us; 641us; 1600us; 658us; 1600us; 661us; 1600us; 664us; 1600us; 665us; 1599us; 666us; 1599us; 678us; 1600us; 688us; 1600us; 764us; 771us; 768us; 771us; 772us; 1600us; 817us; 1600us; 871us; 1599us; 937us; 1600us; 967us; 1600us; 1151us; 1600us; 1153us; 1600us; 1155us; 1600us; 1281us; 1599us; 1282us; 1599us; 1444us; 1600us; 1447us; 1600us; 1449us; 1600us; 1451us; 1599us; 1513us; 1600us; 1514us; 1599us; 1552us; 601us; 1554us; 601us; 1555us; 1600us; 1558us; 1600us; 1561us; 1600us; 1564us; 1600us; 1566us; 1600us; 1567us; 1599us; 1568us; 1600us; 1569us; 1599us; 1572us; 1600us; 1573us; 1599us; 1574us; 1599us; 1575us; 1600us; 1576us; 1599us; 1579us; 1600us; 1580us; 1599us; 1582us; 1600us; 1586us; 1599us; 1587us; 1600us; 1589us; 1600us; 1591us; 1600us; 1593us; 1599us; 1594us; 1600us; 1596us; 1600us; 1605us; 1599us; 1610us; 1600us; 1612us; 1599us; 1615us; 1600us; 1618us; 1600us; 1629us; 1600us; 1633us; 1600us; 1639us; 1600us; 1641us; 1599us; 1646us; 1599us; 1650us; 1600us; 1656us; 1600us; 1657us; 1600us; 1680us; 1600us; 1682us; 1600us; 1693us; 1600us; 1697us; 1703us; 1704us; 1703us; 1711us; 1703us; 1717us; 1703us; 1718us; 1703us; 1719us; 1703us; 112us; 65535us; 8us; 1722us; 106us; 1722us; 144us; 1722us; 173us; 1722us; 179us; 1722us; 183us; 1722us; 184us; 1722us; 185us; 1722us; 186us; 1722us; 195us; 1722us; 278us; 1722us; 279us; 1722us; 372us; 1722us; 422us; 1722us; 428us; 1722us; 429us; 1722us; 435us; 1722us; 458us; 1722us; 468us; 1722us; 493us; 1722us; 529us; 1722us; 537us; 1722us; 538us; 1722us; 562us; 1722us; 577us; 1722us; 590us; 1722us; 594us; 1722us; 597us; 1722us; 599us; 1722us; 602us; 1722us; 612us; 1722us; 622us; 1722us; 623us; 1722us; 624us; 1722us; 638us; 1722us; 641us; 1722us; 658us; 1722us; 661us; 1722us; 664us; 1722us; 665us; 1722us; 666us; 1722us; 678us; 1722us; 688us; 1722us; 764us; 1722us; 768us; 1722us; 772us; 1722us; 817us; 1722us; 871us; 1722us; 937us; 1722us; 967us; 1722us; 1151us; 1722us; 1153us; 1722us; 1155us; 1722us; 1281us; 1722us; 1282us; 1722us; 1385us; 1407us; 1386us; 1408us; 1387us; 1407us; 1411us; 1412us; 1444us; 1722us; 1447us; 1722us; 1449us; 1722us; 1451us; 1722us; 1513us; 1722us; 1514us; 1722us; 1552us; 1722us; 1554us; 1722us; 1555us; 1722us; 1558us; 1722us; 1561us; 1722us; 1564us; 1722us; 1566us; 1722us; 1567us; 1722us; 1568us; 1722us; 1569us; 1722us; 1572us; 1722us; 1573us; 1722us; 1574us; 1722us; 1575us; 1722us; 1576us; 1722us; 1579us; 1722us; 1580us; 1722us; 1582us; 1722us; 1586us; 1722us; 1587us; 1722us; 1589us; 1722us; 1591us; 1722us; 1593us; 1722us; 1594us; 1722us; 1596us; 1722us; 1605us; 1722us; 1610us; 1722us; 1612us; 1722us; 1615us; 1722us; 1618us; 1722us; 1629us; 1722us; 1633us; 1722us; 1639us; 1722us; 1641us; 1722us; 1646us; 1722us; 1650us; 1722us; 1656us; 1722us; 1657us; 1722us; 1680us; 1722us; 1682us; 1722us; 1693us; 1722us; 1697us; 1722us; 1704us; 1722us; 1711us; 1722us; 1717us; 1722us; 1718us; 1722us; 1719us; 1722us; 349us; 65535us; 6us; 1783us; 8us; 1728us; 31us; 1783us; 53us; 1728us; 56us; 1728us; 91us; 1728us; 103us; 1775us; 106us; 1728us; 109us; 1783us; 111us; 1783us; 115us; 1728us; 144us; 1728us; 173us; 652us; 176us; 1775us; 179us; 1728us; 183us; 1728us; 184us; 1728us; 185us; 1728us; 186us; 1728us; 195us; 1728us; 197us; 1775us; 199us; 1775us; 204us; 1775us; 228us; 1783us; 242us; 1783us; 264us; 1783us; 271us; 1728us; 276us; 1728us; 278us; 1728us; 279us; 1728us; 304us; 333us; 315us; 333us; 320us; 1728us; 324us; 1728us; 372us; 1728us; 406us; 1777us; 409us; 1783us; 411us; 1777us; 414us; 1783us; 422us; 652us; 428us; 1728us; 429us; 1728us; 432us; 1775us; 435us; 1728us; 446us; 1777us; 449us; 1783us; 456us; 457us; 458us; 1728us; 462us; 463us; 465us; 1783us; 468us; 1728us; 471us; 1777us; 474us; 1777us; 477us; 1777us; 479us; 1777us; 493us; 1728us; 501us; 502us; 504us; 505us; 529us; 652us; 537us; 1728us; 538us; 1728us; 562us; 1728us; 564us; 1728us; 599us; 1728us; 602us; 1728us; 612us; 1728us; 622us; 1728us; 623us; 1728us; 624us; 1728us; 636us; 1775us; 638us; 663us; 641us; 1728us; 658us; 663us; 661us; 663us; 664us; 1728us; 665us; 1728us; 666us; 1728us; 676us; 677us; 678us; 1728us; 684us; 687us; 688us; 663us; 691us; 1728us; 697us; 1783us; 703us; 1783us; 714us; 715us; 726us; 1728us; 727us; 728us; 739us; 1728us; 749us; 1777us; 752us; 1783us; 756us; 1783us; 766us; 1783us; 772us; 1728us; 813us; 814us; 817us; 1728us; 819us; 812us; 820us; 812us; 822us; 812us; 840us; 1777us; 842us; 1777us; 843us; 1777us; 847us; 1777us; 848us; 1777us; 849us; 1777us; 850us; 1777us; 853us; 855us; 857us; 1777us; 859us; 1777us; 860us; 1777us; 862us; 1777us; 864us; 1777us; 867us; 1777us; 869us; 1777us; 871us; 1728us; 874us; 856us; 878us; 1777us; 880us; 1777us; 882us; 1777us; 887us; 1728us; 890us; 1777us; 893us; 1777us; 896us; 898us; 897us; 898us; 904us; 1777us; 912us; 1777us; 932us; 1777us; 934us; 1777us; 937us; 1728us; 939us; 1777us; 940us; 1777us; 942us; 1777us; 943us; 1777us; 944us; 1777us; 945us; 1777us; 948us; 1728us; 951us; 1777us; 953us; 1777us; 955us; 1783us; 960us; 1783us; 967us; 1728us; 972us; 1783us; 974us; 1783us; 977us; 1783us; 980us; 1783us; 996us; 1777us; 997us; 1783us; 1001us; 1777us; 1002us; 1783us; 1008us; 1783us; 1011us; 1783us; 1014us; 1783us; 1020us; 1783us; 1024us; 1783us; 1028us; 1783us; 1032us; 1783us; 1034us; 1783us; 1039us; 1783us; 1041us; 1783us; 1043us; 1783us; 1045us; 1783us; 1047us; 1783us; 1049us; 1783us; 1058us; 1777us; 1060us; 1783us; 1068us; 1783us; 1075us; 1783us; 1081us; 1783us; 1083us; 1783us; 1087us; 1777us; 1088us; 1783us; 1092us; 1783us; 1094us; 1777us; 1095us; 1783us; 1099us; 1783us; 1102us; 1783us; 1105us; 1783us; 1107us; 1783us; 1112us; 1783us; 1114us; 1783us; 1151us; 1728us; 1153us; 1728us; 1155us; 1728us; 1157us; 1783us; 1159us; 1783us; 1163us; 1783us; 1164us; 1783us; 1165us; 1783us; 1166us; 1783us; 1167us; 1783us; 1168us; 1783us; 1169us; 1783us; 1170us; 1783us; 1171us; 1783us; 1172us; 1783us; 1173us; 1783us; 1175us; 1783us; 1176us; 1783us; 1177us; 1783us; 1178us; 1783us; 1179us; 1783us; 1180us; 1783us; 1181us; 1783us; 1182us; 1783us; 1183us; 1783us; 1204us; 1783us; 1205us; 1783us; 1206us; 1783us; 1207us; 1783us; 1210us; 1783us; 1211us; 1725us; 1212us; 1725us; 1213us; 1783us; 1215us; 1783us; 1218us; 1777us; 1220us; 1777us; 1225us; 1777us; 1232us; 1777us; 1235us; 1777us; 1239us; 1783us; 1240us; 1783us; 1244us; 1783us; 1246us; 1783us; 1250us; 1783us; 1252us; 1783us; 1256us; 1783us; 1259us; 1783us; 1261us; 1783us; 1263us; 1783us; 1264us; 1783us; 1266us; 1783us; 1267us; 1783us; 1269us; 1783us; 1270us; 1783us; 1272us; 1783us; 1273us; 1783us; 1275us; 1783us; 1276us; 1783us; 1278us; 1783us; 1279us; 1783us; 1281us; 1728us; 1282us; 1728us; 1289us; 1775us; 1293us; 1783us; 1295us; 1783us; 1297us; 1783us; 1298us; 1783us; 1299us; 1783us; 1302us; 1783us; 1309us; 1783us; 1310us; 1783us; 1313us; 1783us; 1314us; 1783us; 1315us; 1775us; 1318us; 1775us; 1320us; 1775us; 1321us; 1775us; 1327us; 1783us; 1334us; 1783us; 1341us; 1783us; 1348us; 1783us; 1365us; 1783us; 1372us; 1783us; 1373us; 1783us; 1379us; 1783us; 1385us; 1783us; 1386us; 1783us; 1387us; 1783us; 1403us; 1783us; 1413us; 1783us; 1426us; 1783us; 1428us; 1783us; 1431us; 1783us; 1432us; 1783us; 1438us; 1783us; 1444us; 1728us; 1447us; 1728us; 1449us; 1728us; 1451us; 1728us; 1458us; 1783us; 1463us; 1783us; 1467us; 1728us; 1471us; 1728us; 1479us; 1728us; 1488us; 1783us; 1513us; 1728us; 1514us; 1728us; 1521us; 1783us; 1528us; 1777us; 1530us; 1783us; 1533us; 1777us; 1535us; 1783us; 1546us; 1777us; 1548us; 1777us; 1555us; 1728us; 1558us; 1728us; 1561us; 1728us; 1564us; 1728us; 1566us; 1728us; 1567us; 1728us; 1568us; 1728us; 1569us; 1728us; 1570us; 1571us; 1572us; 1728us; 1573us; 1728us; 1574us; 1728us; 1575us; 1728us; 1576us; 1728us; 1577us; 1578us; 1579us; 1728us; 1580us; 1728us; 1582us; 1728us; 1586us; 1728us; 1587us; 1728us; 1589us; 1728us; 1591us; 1728us; 1593us; 1728us; 1594us; 1728us; 1596us; 1728us; 1605us; 1728us; 1610us; 1728us; 1612us; 1728us; 1615us; 1728us; 1618us; 1728us; 1629us; 1728us; 1633us; 1728us; 1639us; 1728us; 1641us; 1728us; 1646us; 1728us; 1650us; 1728us; 1656us; 1728us; 1657us; 1728us; 1666us; 1783us; 1672us; 1728us; 1680us; 1728us; 1682us; 1728us; 1693us; 1728us; 1697us; 1728us; 1704us; 1728us; 1711us; 1728us; 1717us; 1728us; 1718us; 1728us; 1719us; 1728us; 1720us; 1721us; 1723us; 1724us; 1729us; 1730us; 1779us; 1777us; 1822us; 1823us; 1825us; 1783us; 1829us; 1783us; 120us; 65535us; 8us; 1598us; 53us; 54us; 56us; 57us; 91us; 282us; 106us; 1598us; 115us; 280us; 144us; 1598us; 173us; 530us; 179us; 1598us; 183us; 1598us; 184us; 1598us; 185us; 1598us; 186us; 1598us; 195us; 1598us; 271us; 292us; 276us; 277us; 278us; 1598us; 279us; 1598us; 304us; 317us; 315us; 317us; 320us; 321us; 324us; 325us; 372us; 1598us; 422us; 530us; 428us; 1598us; 429us; 1598us; 435us; 1598us; 458us; 1598us; 468us; 1598us; 493us; 1598us; 529us; 530us; 537us; 1598us; 538us; 1598us; 562us; 563us; 564us; 565us; 599us; 1598us; 602us; 1598us; 612us; 1598us; 622us; 1598us; 623us; 1598us; 624us; 1598us; 638us; 1598us; 641us; 1598us; 658us; 1598us; 661us; 1598us; 664us; 1598us; 665us; 1598us; 666us; 1598us; 678us; 1598us; 688us; 1598us; 691us; 692us; 726us; 729us; 739us; 729us; 772us; 1598us; 817us; 1598us; 871us; 1598us; 887us; 950us; 937us; 1598us; 948us; 950us; 967us; 1598us; 1151us; 1598us; 1153us; 1598us; 1155us; 1598us; 1281us; 1598us; 1282us; 1598us; 1444us; 1598us; 1447us; 1598us; 1449us; 1598us; 1451us; 1598us; 1467us; 1484us; 1471us; 1484us; 1479us; 1484us; 1513us; 1598us; 1514us; 1598us; 1555us; 1598us; 1558us; 1598us; 1561us; 1598us; 1564us; 1598us; 1566us; 1598us; 1567us; 1598us; 1568us; 1598us; 1569us; 1598us; 1572us; 1598us; 1573us; 1598us; 1574us; 1598us; 1575us; 1598us; 1576us; 1598us; 1579us; 1598us; 1580us; 1598us; 1582us; 1598us; 1586us; 1598us; 1587us; 1598us; 1589us; 1598us; 1591us; 1598us; 1593us; 1598us; 1594us; 1598us; 1596us; 1598us; 1605us; 1598us; 1610us; 1598us; 1612us; 1598us; 1615us; 1598us; 1618us; 1598us; 1629us; 1598us; 1633us; 1598us; 1639us; 1598us; 1641us; 1598us; 1646us; 1598us; 1650us; 1598us; 1656us; 1598us; 1657us; 1598us; 1672us; 1673us; 1680us; 1598us; 1682us; 1598us; 1693us; 1598us; 1697us; 1702us; 1704us; 1702us; 1711us; 1702us; 1717us; 1702us; 1718us; 1702us; 1719us; 1702us; 208us; 65535us; 6us; 1784us; 31us; 1784us; 103us; 1776us; 109us; 1784us; 111us; 1784us; 176us; 1776us; 197us; 1776us; 199us; 1776us; 204us; 1776us; 228us; 1784us; 242us; 1784us; 264us; 1784us; 406us; 1778us; 409us; 1784us; 411us; 1778us; 414us; 1784us; 432us; 1776us; 446us; 1778us; 449us; 1784us; 465us; 1784us; 471us; 1778us; 474us; 1778us; 477us; 1778us; 479us; 1778us; 636us; 1776us; 697us; 1784us; 703us; 1784us; 749us; 1778us; 752us; 1784us; 756us; 1784us; 766us; 1784us; 840us; 1778us; 842us; 1778us; 843us; 1778us; 847us; 1778us; 848us; 1778us; 849us; 1778us; 850us; 1778us; 857us; 1778us; 859us; 1778us; 860us; 1778us; 862us; 1778us; 864us; 1778us; 867us; 1778us; 869us; 1778us; 874us; 1778us; 878us; 1778us; 880us; 1778us; 882us; 1778us; 890us; 1778us; 893us; 1778us; 904us; 1778us; 912us; 1778us; 932us; 1778us; 934us; 1778us; 939us; 1778us; 940us; 1778us; 942us; 1778us; 943us; 1778us; 944us; 1778us; 945us; 1778us; 951us; 1778us; 953us; 1778us; 955us; 1784us; 960us; 1784us; 972us; 1784us; 974us; 1784us; 977us; 1784us; 980us; 1784us; 996us; 1778us; 997us; 1784us; 1001us; 1778us; 1002us; 1784us; 1008us; 1784us; 1011us; 1784us; 1014us; 1784us; 1020us; 1784us; 1024us; 1784us; 1028us; 1784us; 1032us; 1784us; 1034us; 1784us; 1039us; 1784us; 1041us; 1784us; 1043us; 1784us; 1045us; 1784us; 1047us; 1784us; 1049us; 1784us; 1058us; 1778us; 1060us; 1784us; 1068us; 1784us; 1075us; 1784us; 1081us; 1784us; 1083us; 1784us; 1087us; 1778us; 1088us; 1784us; 1092us; 1784us; 1094us; 1778us; 1095us; 1784us; 1099us; 1784us; 1102us; 1784us; 1105us; 1784us; 1107us; 1784us; 1112us; 1784us; 1114us; 1784us; 1157us; 1784us; 1159us; 1784us; 1163us; 1784us; 1164us; 1784us; 1165us; 1784us; 1166us; 1784us; 1167us; 1784us; 1168us; 1784us; 1169us; 1784us; 1170us; 1784us; 1171us; 1784us; 1172us; 1784us; 1173us; 1784us; 1175us; 1784us; 1176us; 1784us; 1177us; 1784us; 1178us; 1784us; 1179us; 1784us; 1180us; 1784us; 1181us; 1784us; 1182us; 1784us; 1183us; 1784us; 1204us; 1784us; 1205us; 1784us; 1206us; 1784us; 1207us; 1784us; 1210us; 1784us; 1211us; 1784us; 1212us; 1784us; 1213us; 1784us; 1215us; 1784us; 1218us; 1778us; 1220us; 1778us; 1225us; 1778us; 1232us; 1778us; 1235us; 1778us; 1239us; 1784us; 1240us; 1784us; 1244us; 1784us; 1246us; 1784us; 1250us; 1784us; 1252us; 1784us; 1256us; 1784us; 1259us; 1784us; 1261us; 1784us; 1263us; 1784us; 1264us; 1784us; 1266us; 1784us; 1267us; 1784us; 1269us; 1784us; 1270us; 1784us; 1272us; 1784us; 1273us; 1784us; 1275us; 1784us; 1276us; 1784us; 1278us; 1784us; 1279us; 1784us; 1289us; 1776us; 1293us; 1784us; 1295us; 1784us; 1297us; 1784us; 1298us; 1784us; 1299us; 1784us; 1302us; 1784us; 1309us; 1784us; 1310us; 1784us; 1313us; 1784us; 1314us; 1784us; 1315us; 1776us; 1318us; 1776us; 1320us; 1776us; 1321us; 1776us; 1327us; 1784us; 1334us; 1784us; 1341us; 1784us; 1348us; 1784us; 1365us; 1784us; 1372us; 1784us; 1373us; 1784us; 1379us; 1784us; 1385us; 1784us; 1386us; 1784us; 1387us; 1784us; 1403us; 1784us; 1413us; 1784us; 1426us; 1784us; 1428us; 1784us; 1431us; 1784us; 1432us; 1784us; 1438us; 1784us; 1458us; 1784us; 1463us; 1784us; 1488us; 1784us; 1521us; 1784us; 1528us; 1778us; 1530us; 1784us; 1533us; 1778us; 1535us; 1784us; 1546us; 1778us; 1548us; 1778us; 1666us; 1784us; 1779us; 1778us; 1825us; 1784us; 1829us; 1784us; 7us; 65535us; 646us; 1733us; 874us; 1733us; 904us; 1733us; 1341us; 1733us; 1386us; 1733us; 1387us; 1733us; 1732us; 1733us; 2us; 65535us; 1739us; 1774us; 1772us; 1773us; 7us; 65535us; 646us; 1738us; 874us; 1738us; 904us; 1738us; 1341us; 1738us; 1386us; 1738us; 1387us; 1738us; 1732us; 1738us; 12us; 65535us; 103us; 1782us; 176us; 1782us; 197us; 1782us; 199us; 1782us; 204us; 1782us; 432us; 1782us; 636us; 1782us; 1289us; 1338us; 1315us; 1338us; 1318us; 1338us; 1320us; 1782us; 1321us; 1782us; 55us; 65535us; 406us; 476us; 411us; 476us; 446us; 476us; 471us; 472us; 474us; 475us; 477us; 481us; 479us; 480us; 749us; 476us; 840us; 476us; 842us; 476us; 843us; 476us; 847us; 476us; 848us; 476us; 849us; 476us; 850us; 476us; 857us; 476us; 859us; 476us; 860us; 476us; 862us; 476us; 864us; 476us; 867us; 476us; 869us; 476us; 874us; 476us; 878us; 476us; 880us; 476us; 882us; 476us; 890us; 476us; 893us; 476us; 904us; 476us; 912us; 476us; 932us; 476us; 934us; 476us; 939us; 476us; 940us; 476us; 942us; 476us; 943us; 476us; 944us; 476us; 945us; 476us; 951us; 476us; 953us; 476us; 996us; 476us; 1001us; 476us; 1058us; 476us; 1087us; 476us; 1094us; 476us; 1218us; 476us; 1220us; 476us; 1225us; 476us; 1232us; 476us; 1235us; 476us; 1528us; 476us; 1533us; 476us; 1546us; 476us; 1548us; 476us; 1779us; 1780us; 9us; 65535us; 103us; 104us; 176us; 177us; 197us; 203us; 199us; 203us; 204us; 205us; 432us; 433us; 636us; 645us; 1320us; 1322us; 1321us; 1322us; 141us; 65535us; 6us; 1326us; 31us; 1326us; 109us; 1326us; 111us; 1326us; 228us; 1326us; 242us; 1326us; 264us; 1326us; 409us; 1326us; 414us; 1326us; 449us; 1326us; 465us; 1326us; 697us; 1326us; 703us; 1326us; 752us; 1326us; 756us; 1326us; 766us; 1326us; 955us; 1326us; 960us; 1326us; 972us; 1326us; 974us; 1326us; 977us; 1326us; 980us; 1326us; 997us; 1326us; 1002us; 1326us; 1008us; 1326us; 1011us; 1326us; 1014us; 1326us; 1020us; 1326us; 1024us; 1326us; 1028us; 1326us; 1032us; 1326us; 1034us; 1326us; 1039us; 1326us; 1041us; 1326us; 1043us; 1326us; 1045us; 1326us; 1047us; 1326us; 1049us; 1326us; 1060us; 1326us; 1068us; 1326us; 1075us; 1326us; 1081us; 1326us; 1083us; 1326us; 1088us; 1326us; 1092us; 1326us; 1095us; 1326us; 1099us; 1326us; 1102us; 1326us; 1105us; 1326us; 1107us; 1326us; 1112us; 1326us; 1114us; 1326us; 1157us; 1326us; 1159us; 1326us; 1163us; 1326us; 1164us; 1326us; 1165us; 1326us; 1166us; 1326us; 1167us; 1326us; 1168us; 1326us; 1169us; 1326us; 1170us; 1326us; 1171us; 1326us; 1172us; 1326us; 1173us; 1326us; 1175us; 1326us; 1176us; 1326us; 1177us; 1326us; 1178us; 1326us; 1179us; 1326us; 1180us; 1326us; 1181us; 1326us; 1182us; 1326us; 1183us; 1326us; 1204us; 1326us; 1205us; 1326us; 1206us; 1326us; 1207us; 1326us; 1210us; 1326us; 1211us; 1326us; 1212us; 1326us; 1213us; 1326us; 1215us; 1326us; 1239us; 1326us; 1240us; 1326us; 1244us; 1326us; 1246us; 1326us; 1250us; 1326us; 1252us; 1326us; 1256us; 1326us; 1259us; 1326us; 1261us; 1326us; 1263us; 1326us; 1264us; 1326us; 1266us; 1326us; 1267us; 1326us; 1269us; 1326us; 1270us; 1326us; 1272us; 1326us; 1273us; 1326us; 1275us; 1326us; 1276us; 1326us; 1278us; 1326us; 1279us; 1326us; 1293us; 1326us; 1295us; 1326us; 1297us; 1326us; 1298us; 1326us; 1299us; 1326us; 1302us; 1326us; 1309us; 1326us; 1310us; 1326us; 1313us; 1326us; 1314us; 1326us; 1327us; 1326us; 1334us; 1326us; 1341us; 1326us; 1348us; 1326us; 1365us; 1326us; 1372us; 1326us; 1373us; 1326us; 1379us; 1326us; 1385us; 1326us; 1386us; 1326us; 1387us; 1326us; 1403us; 1326us; 1413us; 1326us; 1426us; 1326us; 1428us; 1326us; 1431us; 1326us; 1432us; 1326us; 1438us; 1326us; 1458us; 1326us; 1463us; 1326us; 1488us; 1326us; 1521us; 1326us; 1530us; 1326us; 1535us; 1326us; 1666us; 1326us; 1825us; 1326us; 1829us; 1326us; 14us; 65535us; 48us; 1788us; 76us; 1788us; 79us; 1788us; 80us; 1790us; 83us; 1788us; 218us; 1788us; 237us; 1788us; 243us; 1788us; 248us; 1788us; 252us; 1788us; 253us; 1788us; 254us; 1788us; 1788us; 1788us; 1790us; 1790us; 12us; 65535us; 48us; 84us; 76us; 84us; 79us; 84us; 83us; 84us; 218us; 255us; 237us; 255us; 243us; 244us; 248us; 250us; 252us; 255us; 253us; 255us; 254us; 255us; 1788us; 1789us; 2us; 65535us; 80us; 81us; 1790us; 1791us; 9us; 65535us; 167us; 1806us; 305us; 315us; 393us; 1806us; 512us; 1806us; 669us; 670us; 851us; 853us; 929us; 953us; 946us; 948us; 971us; 972us; 4us; 65535us; 212us; 213us; 299us; 300us; 488us; 489us; 491us; 492us; 2us; 65535us; 1505us; 1506us; 1515us; 1516us; 10us; 65535us; 113us; 114us; 426us; 427us; 437us; 438us; 440us; 441us; 442us; 443us; 444us; 445us; 450us; 451us; 518us; 519us; 520us; 521us; 524us; 525us; 2us; 65535us; 62us; 63us; 224us; 225us; 1us; 65535us; 348us; 349us; 17us; 65535us; 73us; 74us; 133us; 134us; 234us; 235us; 307us; 308us; 310us; 311us; 360us; 361us; 630us; 657us; 652us; 653us; 655us; 656us; 1004us; 1005us; 1059us; 1110us; 1090us; 1091us; 1097us; 1098us; 1104us; 1105us; 1492us; 1496us; 1493us; 1494us; 1516us; 1517us; 8us; 65535us; 167us; 168us; 305us; 306us; 393us; 394us; 512us; 513us; 669us; 672us; 851us; 852us; 929us; 952us; 946us; 947us; 4us; 65535us; 52us; 53us; 55us; 56us; 693us; 694us; 699us; 700us; 0us; 65535us; 11us; 65535us; 100us; 101us; 174us; 175us; 396us; 405us; 398us; 405us; 403us; 405us; 425us; 411us; 431us; 432us; 516us; 748us; 517us; 411us; 523us; 411us; 745us; 748us; 7us; 65535us; 101us; 102us; 187us; 675us; 190us; 675us; 454us; 455us; 460us; 461us; 673us; 675us; 748us; 749us; 4us; 65535us; 985us; 1075us; 1048us; 1049us; 1059us; 1060us; 1067us; 1068us; 9us; 65535us; 982us; 1057us; 983us; 1064us; 984us; 1072us; 986us; 1079us; 1050us; 1051us; 1053us; 1054us; 1061us; 1062us; 1069us; 1070us; 1076us; 1077us; 2us; 65535us; 271us; 293us; 283us; 293us; 2us; 65535us; 91us; 122us; 115us; 118us; 2us; 65535us; 67us; 91us; 90us; 91us; 275us; 65535us; 6us; 791us; 8us; 791us; 31us; 791us; 40us; 42us; 106us; 791us; 109us; 791us; 111us; 791us; 144us; 791us; 173us; 791us; 179us; 791us; 183us; 791us; 185us; 791us; 195us; 791us; 228us; 791us; 242us; 791us; 264us; 791us; 278us; 791us; 318us; 791us; 322us; 791us; 327us; 791us; 372us; 791us; 406us; 791us; 409us; 791us; 411us; 791us; 414us; 791us; 422us; 791us; 428us; 791us; 435us; 791us; 446us; 791us; 449us; 791us; 458us; 791us; 465us; 791us; 468us; 791us; 493us; 791us; 496us; 791us; 529us; 791us; 537us; 791us; 538us; 539us; 599us; 791us; 602us; 791us; 612us; 791us; 622us; 791us; 638us; 791us; 641us; 791us; 643us; 791us; 654us; 791us; 658us; 791us; 661us; 791us; 664us; 791us; 678us; 791us; 688us; 791us; 697us; 791us; 703us; 791us; 749us; 791us; 752us; 791us; 756us; 791us; 766us; 791us; 772us; 791us; 817us; 791us; 840us; 791us; 842us; 791us; 843us; 791us; 847us; 791us; 848us; 791us; 849us; 791us; 850us; 791us; 857us; 791us; 859us; 791us; 860us; 791us; 862us; 791us; 864us; 791us; 867us; 791us; 869us; 791us; 871us; 791us; 874us; 791us; 878us; 791us; 880us; 791us; 882us; 791us; 890us; 791us; 893us; 791us; 904us; 791us; 912us; 791us; 932us; 791us; 934us; 791us; 937us; 791us; 939us; 791us; 940us; 791us; 942us; 791us; 943us; 791us; 944us; 791us; 945us; 791us; 951us; 791us; 953us; 791us; 955us; 791us; 960us; 791us; 967us; 791us; 972us; 791us; 974us; 791us; 977us; 791us; 980us; 791us; 996us; 791us; 997us; 791us; 1001us; 791us; 1002us; 791us; 1008us; 791us; 1011us; 791us; 1014us; 791us; 1020us; 791us; 1024us; 791us; 1028us; 791us; 1032us; 791us; 1034us; 791us; 1039us; 791us; 1041us; 791us; 1043us; 791us; 1045us; 791us; 1047us; 791us; 1049us; 791us; 1058us; 791us; 1060us; 791us; 1068us; 791us; 1075us; 791us; 1081us; 791us; 1083us; 791us; 1087us; 791us; 1088us; 791us; 1092us; 791us; 1094us; 791us; 1095us; 791us; 1099us; 791us; 1102us; 791us; 1105us; 791us; 1107us; 791us; 1112us; 791us; 1114us; 791us; 1151us; 791us; 1153us; 791us; 1155us; 791us; 1157us; 791us; 1159us; 791us; 1163us; 791us; 1164us; 791us; 1165us; 791us; 1166us; 791us; 1167us; 791us; 1168us; 791us; 1169us; 791us; 1170us; 791us; 1171us; 791us; 1172us; 791us; 1173us; 791us; 1175us; 791us; 1176us; 791us; 1177us; 791us; 1178us; 791us; 1179us; 791us; 1180us; 791us; 1181us; 791us; 1182us; 791us; 1183us; 791us; 1204us; 791us; 1205us; 791us; 1206us; 791us; 1207us; 791us; 1210us; 791us; 1211us; 791us; 1212us; 791us; 1213us; 791us; 1215us; 791us; 1218us; 791us; 1220us; 791us; 1225us; 791us; 1232us; 791us; 1235us; 791us; 1239us; 791us; 1240us; 791us; 1244us; 791us; 1246us; 791us; 1250us; 791us; 1252us; 791us; 1256us; 791us; 1259us; 791us; 1261us; 791us; 1263us; 791us; 1264us; 791us; 1266us; 791us; 1267us; 791us; 1269us; 791us; 1270us; 791us; 1272us; 791us; 1273us; 791us; 1275us; 791us; 1276us; 791us; 1278us; 791us; 1279us; 791us; 1281us; 791us; 1282us; 791us; 1285us; 791us; 1286us; 791us; 1293us; 791us; 1295us; 791us; 1297us; 791us; 1298us; 791us; 1299us; 791us; 1302us; 791us; 1309us; 791us; 1310us; 791us; 1313us; 791us; 1314us; 791us; 1327us; 791us; 1334us; 791us; 1341us; 791us; 1348us; 791us; 1365us; 791us; 1372us; 791us; 1373us; 791us; 1379us; 791us; 1385us; 791us; 1386us; 791us; 1387us; 791us; 1403us; 791us; 1413us; 791us; 1426us; 791us; 1428us; 791us; 1431us; 791us; 1432us; 791us; 1435us; 1436us; 1438us; 791us; 1444us; 791us; 1447us; 791us; 1449us; 791us; 1451us; 791us; 1453us; 791us; 1458us; 791us; 1463us; 791us; 1488us; 791us; 1513us; 791us; 1521us; 791us; 1528us; 791us; 1530us; 791us; 1533us; 791us; 1535us; 791us; 1546us; 791us; 1548us; 791us; 1555us; 791us; 1558us; 791us; 1561us; 791us; 1564us; 791us; 1566us; 791us; 1568us; 791us; 1572us; 791us; 1575us; 791us; 1579us; 791us; 1582us; 791us; 1587us; 791us; 1589us; 791us; 1591us; 791us; 1594us; 791us; 1596us; 791us; 1610us; 791us; 1615us; 791us; 1618us; 791us; 1629us; 791us; 1633us; 791us; 1639us; 791us; 1646us; 791us; 1650us; 791us; 1656us; 791us; 1657us; 791us; 1666us; 791us; 1680us; 791us; 1682us; 791us; 1693us; 791us; 1825us; 791us; 1829us; 791us; 274us; 65535us; 6us; 792us; 8us; 792us; 31us; 792us; 40us; 43us; 106us; 792us; 109us; 792us; 111us; 792us; 144us; 792us; 173us; 792us; 179us; 792us; 183us; 792us; 185us; 792us; 195us; 792us; 228us; 792us; 242us; 792us; 264us; 792us; 278us; 792us; 318us; 792us; 322us; 792us; 327us; 792us; 372us; 792us; 406us; 792us; 409us; 792us; 411us; 792us; 414us; 792us; 422us; 792us; 428us; 792us; 435us; 792us; 446us; 792us; 449us; 792us; 458us; 792us; 465us; 792us; 468us; 792us; 493us; 792us; 496us; 792us; 529us; 792us; 537us; 792us; 538us; 792us; 599us; 792us; 602us; 792us; 612us; 792us; 622us; 792us; 638us; 792us; 641us; 792us; 643us; 792us; 654us; 792us; 658us; 792us; 661us; 792us; 664us; 792us; 678us; 792us; 688us; 792us; 697us; 792us; 703us; 792us; 749us; 792us; 752us; 792us; 756us; 792us; 766us; 792us; 772us; 792us; 817us; 792us; 840us; 792us; 842us; 792us; 843us; 792us; 847us; 792us; 848us; 792us; 849us; 792us; 850us; 792us; 857us; 792us; 859us; 792us; 860us; 792us; 862us; 792us; 864us; 792us; 867us; 792us; 869us; 792us; 871us; 792us; 874us; 792us; 878us; 792us; 880us; 792us; 882us; 792us; 890us; 792us; 893us; 792us; 904us; 792us; 912us; 792us; 932us; 792us; 934us; 792us; 937us; 792us; 939us; 792us; 940us; 792us; 942us; 792us; 943us; 792us; 944us; 792us; 945us; 792us; 951us; 792us; 953us; 792us; 955us; 792us; 960us; 792us; 967us; 792us; 972us; 792us; 974us; 792us; 977us; 792us; 980us; 792us; 996us; 792us; 997us; 792us; 1001us; 792us; 1002us; 792us; 1008us; 792us; 1011us; 792us; 1014us; 792us; 1020us; 792us; 1024us; 792us; 1028us; 792us; 1032us; 792us; 1034us; 792us; 1039us; 792us; 1041us; 792us; 1043us; 792us; 1045us; 792us; 1047us; 792us; 1049us; 792us; 1058us; 792us; 1060us; 792us; 1068us; 792us; 1075us; 792us; 1081us; 792us; 1083us; 792us; 1087us; 792us; 1088us; 792us; 1092us; 792us; 1094us; 792us; 1095us; 792us; 1099us; 792us; 1102us; 792us; 1105us; 792us; 1107us; 792us; 1112us; 792us; 1114us; 792us; 1151us; 792us; 1153us; 792us; 1155us; 792us; 1157us; 792us; 1159us; 792us; 1163us; 792us; 1164us; 792us; 1165us; 792us; 1166us; 792us; 1167us; 792us; 1168us; 792us; 1169us; 792us; 1170us; 792us; 1171us; 792us; 1172us; 792us; 1173us; 792us; 1175us; 792us; 1176us; 792us; 1177us; 792us; 1178us; 792us; 1179us; 792us; 1180us; 792us; 1181us; 792us; 1182us; 792us; 1183us; 792us; 1204us; 792us; 1205us; 792us; 1206us; 792us; 1207us; 792us; 1210us; 792us; 1211us; 792us; 1212us; 792us; 1213us; 792us; 1215us; 792us; 1218us; 792us; 1220us; 792us; 1225us; 792us; 1232us; 792us; 1235us; 792us; 1239us; 792us; 1240us; 792us; 1244us; 792us; 1246us; 792us; 1250us; 792us; 1252us; 792us; 1256us; 792us; 1259us; 792us; 1261us; 792us; 1263us; 792us; 1264us; 792us; 1266us; 792us; 1267us; 792us; 1269us; 792us; 1270us; 792us; 1272us; 792us; 1273us; 792us; 1275us; 792us; 1276us; 792us; 1278us; 792us; 1279us; 792us; 1281us; 792us; 1282us; 792us; 1285us; 792us; 1286us; 792us; 1293us; 792us; 1295us; 792us; 1297us; 792us; 1298us; 792us; 1299us; 792us; 1302us; 792us; 1309us; 792us; 1310us; 792us; 1313us; 792us; 1314us; 792us; 1327us; 792us; 1334us; 792us; 1341us; 792us; 1348us; 792us; 1365us; 792us; 1372us; 792us; 1373us; 792us; 1379us; 792us; 1385us; 792us; 1386us; 792us; 1387us; 792us; 1403us; 792us; 1413us; 792us; 1426us; 792us; 1428us; 792us; 1431us; 792us; 1432us; 792us; 1438us; 792us; 1444us; 792us; 1447us; 792us; 1449us; 792us; 1451us; 792us; 1453us; 792us; 1458us; 792us; 1463us; 792us; 1488us; 792us; 1513us; 792us; 1521us; 792us; 1528us; 792us; 1530us; 792us; 1533us; 792us; 1535us; 792us; 1546us; 792us; 1548us; 792us; 1555us; 792us; 1558us; 792us; 1561us; 792us; 1564us; 792us; 1566us; 792us; 1568us; 792us; 1572us; 792us; 1575us; 792us; 1579us; 792us; 1582us; 792us; 1587us; 792us; 1589us; 792us; 1591us; 792us; 1594us; 792us; 1596us; 792us; 1610us; 792us; 1615us; 792us; 1618us; 792us; 1629us; 792us; 1633us; 792us; 1639us; 792us; 1646us; 792us; 1650us; 792us; 1656us; 792us; 1657us; 792us; 1666us; 792us; 1680us; 792us; 1682us; 792us; 1693us; 792us; 1825us; 792us; 1829us; 792us; 2us; 65535us; 1825us; 1826us; 1829us; 1830us; 4us; 65535us; 1825us; 1828us; 1826us; 1827us; 1829us; 1833us; 1830us; 1831us; 148us; 65535us; 6us; 1358us; 31us; 1358us; 109us; 1358us; 111us; 1358us; 228us; 1358us; 242us; 1358us; 264us; 1358us; 318us; 1358us; 322us; 1358us; 327us; 1358us; 409us; 1358us; 414us; 1358us; 449us; 1358us; 465us; 1358us; 496us; 1358us; 697us; 1358us; 703us; 1358us; 752us; 1358us; 756us; 1358us; 766us; 1358us; 955us; 1358us; 960us; 1358us; 972us; 1358us; 974us; 1358us; 977us; 1358us; 980us; 1358us; 997us; 1358us; 1002us; 1358us; 1008us; 1358us; 1011us; 1358us; 1014us; 1358us; 1020us; 1358us; 1024us; 1358us; 1028us; 1358us; 1032us; 1358us; 1034us; 1358us; 1039us; 1358us; 1041us; 1358us; 1043us; 1358us; 1045us; 1358us; 1047us; 1358us; 1049us; 1358us; 1060us; 1358us; 1068us; 1358us; 1075us; 1358us; 1081us; 1358us; 1083us; 1358us; 1088us; 1358us; 1092us; 1358us; 1095us; 1358us; 1099us; 1358us; 1102us; 1358us; 1105us; 1358us; 1107us; 1358us; 1112us; 1358us; 1114us; 1358us; 1157us; 1358us; 1159us; 1358us; 1163us; 1358us; 1164us; 1358us; 1165us; 1358us; 1166us; 1358us; 1167us; 1358us; 1168us; 1358us; 1169us; 1358us; 1170us; 1358us; 1171us; 1358us; 1172us; 1358us; 1173us; 1358us; 1175us; 1358us; 1176us; 1358us; 1177us; 1358us; 1178us; 1358us; 1179us; 1358us; 1180us; 1358us; 1181us; 1358us; 1182us; 1358us; 1183us; 1358us; 1204us; 1358us; 1205us; 1358us; 1206us; 1358us; 1207us; 1358us; 1210us; 1358us; 1211us; 1358us; 1212us; 1358us; 1213us; 1358us; 1215us; 1358us; 1239us; 1358us; 1240us; 1358us; 1244us; 1358us; 1246us; 1358us; 1250us; 1358us; 1252us; 1358us; 1256us; 1358us; 1259us; 1358us; 1261us; 1358us; 1263us; 1358us; 1264us; 1358us; 1266us; 1358us; 1267us; 1358us; 1269us; 1358us; 1270us; 1358us; 1272us; 1358us; 1273us; 1358us; 1275us; 1358us; 1276us; 1358us; 1278us; 1358us; 1279us; 1358us; 1285us; 1358us; 1286us; 1358us; 1293us; 1358us; 1295us; 1358us; 1297us; 1358us; 1298us; 1358us; 1299us; 1358us; 1302us; 1358us; 1309us; 1358us; 1310us; 1358us; 1313us; 1358us; 1314us; 1358us; 1327us; 1358us; 1334us; 1358us; 1341us; 1358us; 1348us; 1358us; 1365us; 1358us; 1372us; 1358us; 1373us; 1358us; 1379us; 1358us; 1385us; 1358us; 1386us; 1358us; 1387us; 1358us; 1403us; 1358us; 1413us; 1358us; 1426us; 1358us; 1428us; 1358us; 1431us; 1358us; 1432us; 1358us; 1438us; 1358us; 1453us; 1358us; 1458us; 1358us; 1463us; 1358us; 1488us; 1358us; 1521us; 1358us; 1530us; 1358us; 1535us; 1358us; 1666us; 1358us; 1825us; 1358us; 1829us; 1358us; 11us; 65535us; 317us; 318us; 321us; 322us; 326us; 327us; 353us; 354us; 494us; 496us; 715us; 716us; 727us; 731us; 730us; 731us; 1283us; 1285us; 1284us; 1286us; 1452us; 1453us; 5us; 65535us; 104us; 584us; 177us; 584us; 433us; 584us; 563us; 579us; 859us; 584us; 14us; 65535us; 31us; 266us; 66us; 94us; 89us; 94us; 189us; 192us; 228us; 266us; 242us; 266us; 260us; 266us; 276us; 278us; 304us; 331us; 315us; 331us; 337us; 452us; 1436us; 1443us; 1837us; 1839us; 1838us; 1839us; 10us; 65535us; 31us; 50us; 66us; 50us; 89us; 50us; 228us; 50us; 242us; 50us; 260us; 50us; 304us; 329us; 315us; 329us; 1842us; 1844us; 1843us; 1844us; 7us; 65535us; 543us; 544us; 546us; 547us; 888us; 889us; 993us; 1417us; 1413us; 1419us; 1414us; 1415us; 1847us; 1848us; 5us; 65535us; 552us; 553us; 555us; 556us; 994us; 1525us; 1521us; 1527us; 1522us; 1523us; 43us; 65535us; 540us; 541us; 569us; 570us; 610us; 611us; 613us; 614us; 617us; 618us; 647us; 648us; 650us; 651us; 718us; 719us; 803us; 804us; 822us; 825us; 823us; 824us; 827us; 828us; 875us; 876us; 905us; 906us; 908us; 909us; 913us; 914us; 916us; 917us; 991us; 1392us; 992us; 1393us; 1162us; 1335us; 1216us; 1217us; 1342us; 1343us; 1346us; 1347us; 1385us; 1388us; 1386us; 1388us; 1387us; 1388us; 1389us; 1390us; 1402us; 1403us; 1409us; 1410us; 1445us; 1446us; 1449us; 1450us; 1611us; 1612us; 1640us; 1641us; 1651us; 1653us; 1652us; 1653us; 1658us; 1659us; 1669us; 1670us; 1705us; 1706us; 1733us; 1734us; 1735us; 1736us; 1739us; 1740us; 1742us; 1743us; 1852us; 1853us; 26us; 65535us; 72us; 73us; 76us; 77us; 112us; 113us; 116us; 117us; 120us; 121us; 136us; 137us; 154us; 155us; 162us; 163us; 233us; 234us; 237us; 238us; 253us; 290us; 280us; 281us; 284us; 285us; 287us; 288us; 325us; 326us; 363us; 364us; 382us; 384us; 386us; 388us; 508us; 509us; 757us; 758us; 956us; 957us; 961us; 962us; 978us; 979us; 1247us; 1248us; 1253us; 1254us; 1856us; 1857us; 1us; 65535us; 1389us; 1391us; 17us; 65535us; 304us; 313us; 306us; 312us; 493us; 499us; 930us; 1430us; 1058us; 1078us; 1059us; 1066us; 1060us; 1065us; 1061us; 1063us; 1259us; 1260us; 1261us; 1262us; 1428us; 1429us; 1487us; 1491us; 1488us; 1490us; 1675us; 1676us; 1682us; 1686us; 1687us; 1689us; 1729us; 1731us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 152us; 154us; 157us; 160us; 163us; 167us; 176us; 185us; 197us; 201us; 204us; 207us; 210us; 216us; 218us; 220us; 223us; 226us; 229us; 233us; 239us; 249us; 260us; 271us; 287us; 312us; 314us; 316us; 319us; 321us; 404us; 525us; 646us; 648us; 651us; 654us; 659us; 666us; 669us; 673us; 676us; 680us; 684us; 688us; 692us; 703us; 714us; 716us; 719us; 723us; 727us; 730us; 741us; 745us; 748us; 750us; 801us; 812us; 885us; 898us; 900us; 905us; 908us; 911us; 914us; 917us; 921us; 924us; 929us; 934us; 937us; 943us; 950us; 1018us; 1087us; 1093us; 1103us; 1105us; 1107us; 1111us; 1117us; 1119us; 1121us; 1126us; 1130us; 1134us; 1138us; 1143us; 1145us; 1149us; 1155us; 1159us; 1163us; 1165us; 1169us; 1173us; 1178us; 1183us; 1187us; 1191us; 1195us; 1199us; 1204us; 1211us; 1213us; 1215us; 1336us; 1344us; 1465us; 1585us; 1589us; 1595us; 1716us; 1718us; 1720us; 1724us; 1727us; 1729us; 1734us; 1737us; 1743us; 1746us; 1748us; 1751us; 1753us; 1755us; 1757us; 1760us; 2034us; 2036us; 2041us; 2045us; 2246us; 2250us; 2254us; 2257us; 2259us; 2273us; 2287us; 2301us; 2304us; 2307us; 2346us; 2353us; 2365us; 2416us; 2419us; 2443us; 2467us; 2491us; 2494us; 2497us; 2501us; 2527us; 2534us; 2540us; 2593us; 2595us; 2653us; 2756us; 2761us; 2878us; 2880us; 2884us; 2889us; 2897us; 2905us; 2907us; 2909us; 2912us; 2915us; 2917us; 3034us; 3165us; 3297us; 3302us; 3444us; 3448us; 3597us; 3746us; 3945us; 4094us; 4243us; 4247us; 4251us; 4253us; 4402us; 4404us; 4406us; 4408us; 4410us; 4412us; 4414us; 4416us; 4418us; 4422us; 4424us; 4429us; 4431us; 4433us; 4435us; 4438us; 4445us; 4452us; 4456us; 4462us; 4466us; 4468us; 4470us; 4472us; 4475us; 4477us; 4482us; 4488us; 4637us; 4788us; 4905us; 5022us; 5026us; 5032us; 5036us; 5046us; 5056us; 5059us; 5071us; 5103us; 5105us; 5137us; 5144us; 5238us; 5332us; 5399us; 5419us; 5424us; 5427us; 5494us; 5499us; 5567us; 5641us; 5646us; 5653us; 5662us; 5665us; 5669us; 5671us; 5678us; 5685us; 5692us; 5698us; 5807us; 5920us; 6270us; 6391us; 6600us; 6608us; 6611us; 6619us; 6632us; 6688us; 6698us; 6840us; 6855us; 6868us; 6871us; 6881us; 6886us; 6889us; 6900us; 6903us; 6905us; 6923us; 6932us; 6937us; 6938us; 6950us; 6958us; 6963us; 6973us; 6976us; 6979us; 6982us; 7258us; 7533us; 7536us; 7541us; 7690us; 7702us; 7708us; 7723us; 7734us; 7742us; 7748us; 7792us; 7819us; 7821us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 50us; 19us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 1us; 29us; 2us; 30us; 31us; 1us; 30us; 1us; 31us; 1us; 31us; 3us; 32us; 47us; 50us; 1us; 32us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 3us; 33us; 949us; 950us; 1us; 34us; 1us; 34us; 3us; 34us; 949us; 950us; 2us; 35us; 36us; 1us; 36us; 2us; 37us; 38us; 1us; 37us; 1us; 39us; 1us; 39us; 1us; 39us; 6us; 40us; 54us; 55us; 56us; 57us; 59us; 6us; 40us; 54us; 55us; 56us; 57us; 59us; 3us; 40us; 54us; 55us; 1us; 40us; 1us; 41us; 1us; 42us; 3us; 43us; 44us; 45us; 2us; 43us; 44us; 1us; 43us; 1us; 43us; 1us; 44us; 3us; 45us; 47us; 50us; 1us; 45us; 1us; 46us; 2us; 47us; 50us; 2us; 49us; 51us; 2us; 49us; 51us; 1us; 49us; 1us; 50us; 1us; 50us; 1us; 50us; 1us; 52us; 1us; 53us; 5us; 54us; 55us; 56us; 57us; 59us; 5us; 54us; 55us; 56us; 57us; 59us; 2us; 54us; 55us; 2us; 54us; 55us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 56us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 1us; 59us; 2us; 61us; 62us; 50us; 61us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 62us; 50us; 62us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 62us; 1us; 62us; 3us; 63us; 64us; 146us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 1us; 65us; 1us; 66us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 269us; 270us; 271us; 272us; 273us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 269us; 270us; 271us; 272us; 273us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 873us; 874us; 875us; 1us; 91us; 4us; 91us; 873us; 874us; 875us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 176us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 52us; 124us; 125us; 126us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 152us; 2us; 133us; 157us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 528us; 529us; 1us; 137us; 5us; 137us; 530us; 531us; 532us; 533us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 159us; 1us; 142us; 1us; 143us; 2us; 144us; 145us; 3us; 144us; 949us; 950us; 1us; 145us; 4us; 145us; 873us; 874us; 875us; 3us; 146us; 949us; 950us; 1us; 146us; 3us; 147us; 949us; 950us; 5us; 148us; 149us; 150us; 151us; 152us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 2us; 150us; 151us; 1us; 150us; 1us; 151us; 1us; 152us; 1us; 153us; 3us; 154us; 949us; 950us; 3us; 155us; 156us; 157us; 2us; 155us; 156us; 1us; 155us; 1us; 156us; 1us; 157us; 1us; 158us; 1us; 158us; 1us; 158us; 1us; 159us; 2us; 161us; 162us; 1us; 162us; 4us; 163us; 164us; 165us; 166us; 3us; 163us; 165us; 168us; 2us; 163us; 165us; 1us; 163us; 1us; 163us; 2us; 164us; 523us; 1us; 164us; 1us; 164us; 1us; 165us; 1us; 166us; 1us; 167us; 2us; 168us; 1020us; 1us; 168us; 3us; 169us; 949us; 950us; 1us; 169us; 1us; 169us; 2us; 170us; 171us; 3us; 170us; 949us; 950us; 1us; 170us; 1us; 170us; 1us; 171us; 3us; 171us; 949us; 950us; 1us; 171us; 1us; 171us; 1us; 171us; 1us; 172us; 1us; 172us; 1us; 173us; 1us; 173us; 2us; 174us; 948us; 1us; 174us; 1us; 175us; 1us; 175us; 4us; 176us; 217us; 223us; 226us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 179us; 1us; 180us; 1us; 180us; 1us; 180us; 1us; 181us; 1us; 181us; 1us; 181us; 4us; 183us; 184us; 185us; 186us; 1us; 184us; 1us; 184us; 1us; 185us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 1us; 186us; 4us; 187us; 188us; 197us; 198us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 2us; 187us; 188us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 189us; 1us; 190us; 1us; 191us; 1us; 192us; 1us; 192us; 1us; 192us; 1us; 193us; 3us; 194us; 195us; 196us; 2us; 194us; 195us; 1us; 194us; 1us; 195us; 2us; 196us; 203us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 2us; 199us; 200us; 2us; 199us; 200us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 202us; 1us; 203us; 1us; 203us; 1us; 205us; 1us; 205us; 1us; 205us; 1us; 206us; 1us; 206us; 2us; 207us; 208us; 2us; 207us; 208us; 1us; 207us; 1us; 208us; 2us; 209us; 210us; 1us; 210us; 1us; 210us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 1us; 211us; 2us; 212us; 213us; 2us; 212us; 213us; 2us; 212us; 213us; 1us; 212us; 1us; 212us; 1us; 213us; 2us; 214us; 215us; 1us; 215us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 269us; 270us; 271us; 272us; 273us; 11us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 16us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 269us; 270us; 271us; 272us; 273us; 1us; 216us; 1us; 217us; 2us; 218us; 224us; 1us; 218us; 1us; 218us; 1us; 219us; 4us; 219us; 873us; 874us; 875us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 227us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 228us; 1us; 230us; 1us; 230us; 2us; 231us; 472us; 1us; 231us; 1us; 231us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 2us; 234us; 235us; 1us; 234us; 1us; 234us; 1us; 234us; 1us; 235us; 1us; 237us; 1us; 238us; 1us; 239us; 1us; 240us; 1us; 241us; 2us; 243us; 244us; 1us; 243us; 1us; 243us; 1us; 246us; 1us; 246us; 1us; 246us; 3us; 248us; 249us; 250us; 2us; 248us; 249us; 1us; 248us; 1us; 249us; 1us; 249us; 1us; 249us; 1us; 250us; 1us; 251us; 1us; 253us; 1us; 253us; 1us; 254us; 2us; 256us; 257us; 1us; 256us; 1us; 257us; 2us; 258us; 259us; 2us; 258us; 259us; 1us; 258us; 1us; 259us; 1us; 260us; 2us; 261us; 262us; 2us; 261us; 262us; 1us; 261us; 4us; 263us; 264us; 265us; 266us; 5us; 263us; 264us; 265us; 266us; 383us; 3us; 263us; 264us; 265us; 1us; 263us; 1us; 263us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 266us; 1us; 266us; 1us; 267us; 1us; 268us; 5us; 269us; 270us; 271us; 272us; 273us; 5us; 269us; 270us; 271us; 272us; 273us; 4us; 269us; 869us; 949us; 950us; 1us; 269us; 1us; 269us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 272us; 5us; 273us; 876us; 897us; 898us; 909us; 2us; 273us; 894us; 2us; 273us; 414us; 1us; 273us; 1us; 273us; 3us; 274us; 275us; 276us; 2us; 274us; 275us; 1us; 274us; 1us; 275us; 1us; 276us; 1us; 276us; 6us; 277us; 899us; 900us; 901us; 902us; 903us; 1us; 277us; 1us; 278us; 3us; 279us; 280us; 281us; 2us; 279us; 280us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 286us; 3us; 287us; 288us; 289us; 4us; 287us; 289us; 949us; 950us; 1us; 288us; 3us; 288us; 949us; 950us; 1us; 289us; 1us; 290us; 1us; 291us; 2us; 291us; 292us; 1us; 291us; 2us; 292us; 295us; 3us; 292us; 296us; 297us; 1us; 292us; 2us; 292us; 296us; 1us; 292us; 1us; 293us; 1us; 294us; 1us; 294us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 295us; 1us; 296us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 300us; 1us; 303us; 2us; 303us; 304us; 2us; 304us; 842us; 2us; 304us; 844us; 1us; 304us; 1us; 304us; 1us; 305us; 1us; 306us; 1us; 306us; 1us; 306us; 1us; 306us; 8us; 307us; 308us; 309us; 310us; 311us; 313us; 314us; 315us; 1us; 307us; 1us; 307us; 7us; 308us; 309us; 310us; 311us; 313us; 314us; 315us; 1us; 308us; 3us; 309us; 314us; 315us; 1us; 309us; 1us; 310us; 1us; 311us; 1us; 311us; 1us; 311us; 1us; 312us; 2us; 312us; 316us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 313us; 1us; 313us; 1us; 314us; 1us; 316us; 4us; 316us; 873us; 874us; 875us; 4us; 317us; 873us; 874us; 875us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 2us; 320us; 334us; 1us; 321us; 2us; 322us; 323us; 1us; 322us; 1us; 322us; 5us; 324us; 325us; 326us; 327us; 328us; 5us; 324us; 325us; 326us; 327us; 328us; 5us; 324us; 325us; 326us; 327us; 328us; 2us; 325us; 326us; 1us; 325us; 1us; 326us; 1us; 327us; 1us; 327us; 1us; 328us; 1us; 328us; 1us; 329us; 6us; 330us; 331us; 951us; 952us; 954us; 955us; 1us; 330us; 1us; 330us; 1us; 331us; 1us; 331us; 1us; 331us; 5us; 332us; 333us; 335us; 336us; 948us; 1us; 332us; 2us; 333us; 336us; 2us; 333us; 336us; 2us; 333us; 336us; 1us; 334us; 1us; 335us; 1us; 335us; 2us; 337us; 338us; 1us; 337us; 1us; 337us; 2us; 339us; 948us; 1us; 339us; 4us; 339us; 873us; 874us; 875us; 4us; 340us; 873us; 874us; 875us; 1us; 341us; 1us; 342us; 2us; 343us; 344us; 2us; 343us; 1020us; 1us; 343us; 1us; 344us; 1us; 345us; 1us; 345us; 1us; 346us; 1us; 346us; 1us; 346us; 1us; 346us; 1us; 346us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 3us; 349us; 350us; 351us; 2us; 350us; 351us; 1us; 350us; 1us; 351us; 1us; 353us; 3us; 353us; 949us; 950us; 1us; 354us; 1us; 354us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 356us; 1us; 357us; 1us; 357us; 1us; 357us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 359us; 1us; 360us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 2us; 366us; 369us; 2us; 367us; 370us; 1us; 369us; 1us; 369us; 1us; 370us; 1us; 370us; 2us; 371us; 372us; 5us; 371us; 372us; 374us; 375us; 376us; 1us; 372us; 3us; 373us; 949us; 950us; 4us; 374us; 375us; 376us; 378us; 1us; 374us; 1us; 374us; 1us; 374us; 1us; 375us; 1us; 376us; 1us; 377us; 2us; 377us; 379us; 1us; 377us; 2us; 378us; 379us; 1us; 380us; 1us; 380us; 1us; 381us; 1us; 381us; 1us; 381us; 1us; 383us; 1us; 383us; 1us; 384us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 2us; 385us; 386us; 1us; 385us; 1us; 386us; 1us; 387us; 2us; 388us; 389us; 2us; 388us; 389us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 2us; 391us; 392us; 1us; 392us; 1us; 394us; 2us; 394us; 395us; 1us; 394us; 1us; 394us; 1us; 395us; 1us; 395us; 1us; 396us; 2us; 397us; 398us; 1us; 397us; 1us; 397us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 1us; 409us; 1us; 410us; 1us; 411us; 2us; 411us; 468us; 1us; 412us; 1us; 413us; 1us; 414us; 1us; 415us; 1us; 416us; 2us; 417us; 419us; 1us; 417us; 1us; 417us; 2us; 418us; 420us; 2us; 418us; 420us; 1us; 418us; 1us; 418us; 1us; 421us; 1us; 422us; 1us; 422us; 1us; 422us; 1us; 423us; 1us; 424us; 1us; 424us; 2us; 425us; 426us; 1us; 426us; 1us; 426us; 6us; 427us; 439us; 440us; 441us; 446us; 448us; 1us; 428us; 1us; 429us; 1us; 429us; 2us; 430us; 431us; 3us; 430us; 432us; 433us; 1us; 430us; 1us; 430us; 1us; 431us; 1us; 433us; 1us; 433us; 5us; 434us; 435us; 436us; 437us; 438us; 2us; 434us; 436us; 1us; 434us; 1us; 435us; 1us; 436us; 2us; 437us; 523us; 1us; 437us; 1us; 438us; 6us; 439us; 440us; 440us; 441us; 446us; 448us; 6us; 439us; 440us; 441us; 441us; 446us; 448us; 6us; 439us; 440us; 441us; 445us; 446us; 448us; 6us; 439us; 440us; 441us; 446us; 446us; 448us; 6us; 439us; 440us; 441us; 446us; 447us; 448us; 6us; 439us; 440us; 441us; 446us; 448us; 448us; 6us; 439us; 440us; 441us; 446us; 448us; 525us; 6us; 439us; 440us; 441us; 446us; 448us; 526us; 6us; 439us; 440us; 441us; 446us; 448us; 577us; 7us; 439us; 440us; 441us; 446us; 448us; 578us; 579us; 1us; 439us; 1us; 439us; 1us; 440us; 1us; 441us; 2us; 442us; 445us; 2us; 443us; 447us; 1us; 444us; 1us; 445us; 1us; 446us; 1us; 447us; 1us; 448us; 2us; 449us; 450us; 1us; 449us; 2us; 450us; 1020us; 1us; 450us; 1us; 451us; 4us; 451us; 987us; 989us; 990us; 1us; 451us; 7us; 451us; 489us; 490us; 493us; 495us; 498us; 500us; 8us; 452us; 453us; 454us; 455us; 456us; 457us; 458us; 474us; 4us; 452us; 453us; 454us; 455us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 455us; 1us; 455us; 1us; 456us; 1us; 457us; 1us; 457us; 1us; 458us; 1us; 458us; 1us; 459us; 1us; 459us; 1us; 460us; 9us; 461us; 479us; 480us; 481us; 482us; 951us; 952us; 954us; 955us; 1us; 461us; 1us; 461us; 1us; 462us; 4us; 463us; 464us; 465us; 466us; 1us; 463us; 1us; 464us; 1us; 464us; 1us; 465us; 1us; 465us; 1us; 467us; 1us; 468us; 1us; 468us; 1us; 469us; 1us; 469us; 1us; 469us; 1us; 470us; 1us; 470us; 1us; 470us; 1us; 471us; 1us; 471us; 1us; 471us; 1us; 473us; 2us; 473us; 972us; 1us; 473us; 1us; 474us; 1us; 475us; 1us; 476us; 1us; 477us; 1us; 478us; 8us; 479us; 480us; 481us; 482us; 951us; 952us; 954us; 955us; 2us; 479us; 480us; 1us; 479us; 1us; 480us; 3us; 481us; 523us; 952us; 2us; 481us; 952us; 1us; 482us; 4us; 483us; 484us; 485us; 486us; 4us; 483us; 484us; 485us; 486us; 4us; 483us; 484us; 491us; 497us; 1us; 483us; 1us; 484us; 2us; 485us; 523us; 1us; 485us; 1us; 486us; 7us; 487us; 489us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 494us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 497us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 499us; 500us; 6us; 489us; 490us; 493us; 495us; 498us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 500us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 503us; 8us; 489us; 490us; 493us; 495us; 498us; 500us; 505us; 506us; 12us; 489us; 490us; 493us; 495us; 498us; 500us; 571us; 572us; 768us; 769us; 770us; 771us; 7us; 489us; 490us; 493us; 495us; 498us; 500us; 647us; 1us; 489us; 1us; 489us; 1us; 490us; 2us; 491us; 497us; 2us; 492us; 499us; 1us; 493us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 496us; 1us; 497us; 1us; 498us; 1us; 499us; 1us; 500us; 2us; 501us; 502us; 1us; 501us; 2us; 502us; 1020us; 1us; 502us; 3us; 503us; 949us; 950us; 1us; 503us; 1us; 505us; 2us; 506us; 1020us; 1us; 506us; 2us; 507us; 508us; 2us; 507us; 508us; 1us; 507us; 1us; 508us; 1us; 509us; 1us; 510us; 1us; 510us; 1us; 510us; 50us; 511us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 2us; 512us; 513us; 1us; 512us; 2us; 514us; 515us; 1us; 514us; 1us; 514us; 1us; 516us; 1us; 516us; 54us; 517us; 518us; 519us; 520us; 521us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 2us; 517us; 518us; 1us; 517us; 1us; 520us; 1us; 520us; 1us; 521us; 1us; 521us; 1us; 521us; 1us; 521us; 5us; 522us; 530us; 531us; 532us; 533us; 1us; 523us; 2us; 523us; 558us; 2us; 523us; 561us; 2us; 523us; 566us; 2us; 523us; 569us; 2us; 523us; 571us; 2us; 523us; 700us; 2us; 523us; 713us; 2us; 523us; 732us; 2us; 523us; 736us; 2us; 523us; 741us; 3us; 523us; 741us; 952us; 2us; 523us; 756us; 2us; 523us; 828us; 1us; 524us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 525us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 1us; 526us; 2us; 528us; 529us; 2us; 528us; 529us; 1us; 528us; 1us; 529us; 4us; 530us; 531us; 532us; 533us; 1us; 530us; 1us; 531us; 2us; 532us; 533us; 1us; 532us; 1us; 533us; 1us; 534us; 1us; 535us; 1us; 536us; 2us; 537us; 538us; 2us; 537us; 538us; 1us; 537us; 1us; 538us; 2us; 539us; 540us; 2us; 539us; 540us; 1us; 539us; 1us; 540us; 3us; 541us; 542us; 543us; 3us; 541us; 542us; 543us; 1us; 541us; 1us; 542us; 1us; 543us; 1us; 543us; 3us; 544us; 545us; 546us; 51us; 544us; 545us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 544us; 1us; 545us; 1us; 546us; 1us; 547us; 50us; 547us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 2us; 548us; 549us; 50us; 548us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 550us; 1us; 550us; 2us; 551us; 552us; 1us; 551us; 6us; 553us; 554us; 555us; 556us; 557us; 558us; 53us; 553us; 554us; 555us; 556us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 3us; 553us; 554us; 555us; 2us; 553us; 554us; 1us; 553us; 1us; 554us; 1us; 555us; 1us; 555us; 1us; 556us; 1us; 557us; 1us; 558us; 15us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 569us; 570us; 571us; 572us; 582us; 6us; 559us; 560us; 561us; 562us; 563us; 582us; 4us; 559us; 560us; 561us; 562us; 2us; 559us; 560us; 1us; 559us; 1us; 560us; 1us; 561us; 1us; 562us; 1us; 563us; 5us; 564us; 565us; 566us; 567us; 568us; 4us; 564us; 565us; 566us; 567us; 2us; 564us; 565us; 1us; 564us; 1us; 565us; 1us; 566us; 1us; 567us; 1us; 568us; 1us; 569us; 1us; 569us; 1us; 569us; 1us; 570us; 1us; 571us; 2us; 572us; 1081us; 2us; 573us; 575us; 50us; 573us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 2us; 574us; 576us; 50us; 574us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 575us; 1us; 576us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 577us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 2us; 578us; 579us; 1us; 578us; 1us; 578us; 1us; 579us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 580us; 1us; 581us; 1us; 581us; 1us; 581us; 1us; 582us; 1us; 582us; 1us; 583us; 50us; 583us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1us; 584us; 1us; 584us; 50us; 585us; 586us; 587us; 588us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 634us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 636us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 654us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 658us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 662us; 669us; 670us; 51us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 665us; 666us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 667us; 669us; 670us; 49us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 670us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 768us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 771us; 50us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 771us; 51us; 585us; 586us; 587us; 588us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 628us; 629us; 630us; 631us; 632us; 633us; 669us; 670us; 1042us; 1043us; 1us; 585us; 1us; 585us; 1us; 586us; 1us; 586us; 1us; 587us; 1us; 587us; 1us; 588us; 2us; 589us; 637us; 1us; 589us; 1us; 589us; 3us; 590us; 667us; 668us; 5us; 590us; 667us; 668us; 702us; 703us; 2us; 591us; 612us; 2us; 592us; 613us; 2us; 593us; 614us; 2us; 594us; 615us; 2us; 595us; 616us; 2us; 596us; 617us; 2us; 597us; 618us; 2us; 598us; 619us; 2us; 599us; 620us; 2us; 600us; 621us; 3us; 601us; 602us; 622us; 1us; 602us; 2us; 603us; 623us; 2us; 604us; 624us; 2us; 605us; 625us; 2us; 606us; 626us; 2us; 607us; 627us; 2us; 608us; 628us; 2us; 609us; 629us; 2us; 610us; 630us; 2us; 611us; 631us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 1us; 620us; 1us; 621us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 627us; 1us; 628us; 1us; 629us; 1us; 630us; 1us; 631us; 2us; 632us; 633us; 1us; 634us; 3us; 634us; 979us; 980us; 2us; 634us; 980us; 1us; 635us; 2us; 635us; 967us; 1us; 636us; 2us; 636us; 945us; 3us; 636us; 945us; 959us; 2us; 636us; 959us; 1us; 638us; 1us; 639us; 1us; 639us; 1us; 639us; 1us; 640us; 1us; 640us; 2us; 641us; 642us; 2us; 641us; 642us; 1us; 641us; 1us; 642us; 1us; 643us; 2us; 644us; 645us; 1us; 644us; 1us; 645us; 1us; 646us; 1us; 647us; 6us; 648us; 649us; 650us; 651us; 652us; 653us; 4us; 648us; 649us; 651us; 652us; 2us; 649us; 651us; 1us; 649us; 2us; 650us; 653us; 1us; 650us; 1us; 650us; 1us; 651us; 1us; 652us; 1us; 654us; 1us; 656us; 1us; 656us; 1us; 657us; 1us; 657us; 1us; 658us; 2us; 659us; 660us; 2us; 659us; 660us; 2us; 659us; 660us; 1us; 659us; 1us; 660us; 1us; 662us; 2us; 663us; 664us; 2us; 663us; 664us; 2us; 663us; 664us; 1us; 663us; 1us; 664us; 2us; 665us; 666us; 1us; 665us; 1us; 666us; 2us; 667us; 668us; 1us; 668us; 2us; 669us; 670us; 1us; 669us; 1us; 671us; 2us; 671us; 966us; 1us; 671us; 1us; 672us; 2us; 672us; 962us; 1us; 672us; 1us; 673us; 2us; 673us; 965us; 1us; 673us; 1us; 674us; 2us; 674us; 978us; 1us; 674us; 1us; 675us; 2us; 675us; 973us; 1us; 675us; 1us; 676us; 2us; 676us; 974us; 1us; 676us; 4us; 677us; 678us; 679us; 680us; 8us; 677us; 678us; 679us; 680us; 810us; 811us; 812us; 813us; 3us; 677us; 678us; 679us; 7us; 677us; 678us; 679us; 810us; 811us; 812us; 813us; 3us; 677us; 678us; 679us; 5us; 677us; 678us; 679us; 811us; 812us; 2us; 677us; 678us; 4us; 677us; 678us; 811us; 812us; 1us; 677us; 1us; 677us; 1us; 679us; 1us; 680us; 1us; 681us; 1us; 681us; 1us; 682us; 1us; 682us; 2us; 683us; 684us; 6us; 683us; 684us; 786us; 790us; 791us; 792us; 5us; 684us; 786us; 790us; 791us; 792us; 1us; 684us; 6us; 685us; 688us; 689us; 690us; 692us; 695us; 1us; 686us; 6us; 686us; 688us; 689us; 690us; 692us; 695us; 6us; 687us; 688us; 689us; 690us; 692us; 695us; 6us; 688us; 688us; 689us; 690us; 692us; 695us; 6us; 688us; 689us; 689us; 690us; 692us; 695us; 6us; 688us; 689us; 690us; 691us; 692us; 695us; 6us; 688us; 689us; 690us; 692us; 695us; 906us; 1us; 688us; 1us; 689us; 1us; 690us; 1us; 690us; 1us; 691us; 2us; 691us; 956us; 1us; 692us; 1us; 692us; 1us; 693us; 1us; 693us; 1us; 693us; 1us; 694us; 2us; 694us; 972us; 1us; 694us; 1us; 695us; 1us; 695us; 1us; 696us; 1us; 697us; 4us; 698us; 699us; 700us; 701us; 2us; 698us; 699us; 1us; 698us; 1us; 699us; 1us; 700us; 1us; 701us; 3us; 702us; 703us; 824us; 2us; 702us; 703us; 1us; 702us; 1us; 703us; 1us; 704us; 1us; 705us; 1us; 706us; 1us; 708us; 6us; 709us; 710us; 951us; 952us; 954us; 955us; 1us; 709us; 1us; 709us; 1us; 709us; 1us; 709us; 1us; 710us; 1us; 710us; 4us; 711us; 712us; 713us; 714us; 2us; 711us; 712us; 1us; 711us; 1us; 712us; 1us; 713us; 1us; 714us; 1us; 715us; 1us; 716us; 1us; 717us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 1us; 724us; 1us; 725us; 4us; 726us; 727us; 728us; 729us; 2us; 726us; 727us; 1us; 726us; 1us; 727us; 1us; 728us; 1us; 728us; 1us; 729us; 4us; 730us; 731us; 732us; 733us; 5us; 730us; 731us; 732us; 733us; 981us; 2us; 730us; 731us; 1us; 730us; 1us; 731us; 1us; 732us; 1us; 733us; 4us; 734us; 735us; 736us; 737us; 2us; 734us; 735us; 1us; 734us; 1us; 735us; 1us; 736us; 1us; 737us; 9us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 14us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 751us; 951us; 952us; 954us; 955us; 13us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 745us; 746us; 951us; 952us; 954us; 955us; 1us; 738us; 2us; 739us; 740us; 1us; 739us; 1us; 740us; 1us; 741us; 2us; 741us; 952us; 1us; 742us; 1us; 743us; 1us; 744us; 1us; 745us; 1us; 746us; 1us; 747us; 1us; 747us; 1us; 747us; 1us; 747us; 1us; 747us; 1us; 747us; 1us; 748us; 1us; 749us; 1us; 750us; 2us; 750us; 753us; 2us; 751us; 752us; 1us; 751us; 1us; 752us; 1us; 752us; 5us; 754us; 755us; 756us; 757us; 758us; 2us; 754us; 755us; 1us; 754us; 1us; 755us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 761us; 1us; 762us; 1us; 764us; 1us; 766us; 1us; 767us; 1us; 767us; 2us; 768us; 769us; 1us; 769us; 1us; 770us; 1us; 771us; 1us; 771us; 1us; 772us; 1us; 773us; 1us; 774us; 1us; 774us; 1us; 774us; 2us; 774us; 775us; 1us; 774us; 1us; 774us; 1us; 775us; 1us; 778us; 1us; 780us; 1us; 780us; 1us; 780us; 1us; 780us; 2us; 782us; 783us; 1us; 782us; 5us; 783us; 876us; 897us; 898us; 909us; 1us; 783us; 1us; 784us; 1us; 784us; 1us; 784us; 1us; 784us; 2us; 784us; 801us; 1us; 784us; 1us; 785us; 1us; 786us; 1us; 786us; 2us; 786us; 801us; 1us; 786us; 3us; 787us; 788us; 789us; 2us; 788us; 789us; 1us; 789us; 2us; 789us; 801us; 1us; 789us; 1us; 790us; 1us; 790us; 2us; 790us; 801us; 1us; 790us; 2us; 791us; 792us; 1us; 791us; 1us; 791us; 1us; 792us; 2us; 792us; 801us; 1us; 792us; 1us; 792us; 1us; 793us; 2us; 793us; 801us; 2us; 795us; 798us; 2us; 796us; 797us; 1us; 797us; 1us; 798us; 3us; 799us; 949us; 950us; 1us; 800us; 1us; 801us; 5us; 803us; 804us; 805us; 806us; 807us; 3us; 803us; 804us; 805us; 1us; 803us; 1us; 805us; 1us; 807us; 2us; 808us; 809us; 1us; 808us; 1us; 808us; 1us; 808us; 1us; 809us; 1us; 809us; 1us; 811us; 1us; 814us; 2us; 816us; 818us; 1us; 816us; 1us; 817us; 1us; 817us; 1us; 817us; 1us; 818us; 1us; 818us; 1us; 819us; 1us; 819us; 1us; 821us; 1us; 821us; 1us; 822us; 1us; 822us; 1us; 823us; 4us; 823us; 873us; 874us; 875us; 1us; 823us; 1us; 823us; 1us; 823us; 1us; 824us; 1us; 824us; 1us; 825us; 5us; 826us; 827us; 828us; 829us; 830us; 2us; 826us; 827us; 1us; 826us; 1us; 827us; 1us; 828us; 1us; 829us; 1us; 830us; 2us; 831us; 832us; 2us; 831us; 832us; 2us; 831us; 832us; 1us; 831us; 1us; 832us; 6us; 833us; 834us; 835us; 836us; 837us; 838us; 5us; 833us; 834us; 835us; 836us; 837us; 4us; 833us; 834us; 835us; 836us; 2us; 833us; 834us; 1us; 833us; 1us; 834us; 1us; 835us; 1us; 835us; 1us; 836us; 1us; 837us; 1us; 837us; 1us; 838us; 1us; 838us; 1us; 839us; 1us; 839us; 1us; 840us; 1us; 840us; 1us; 840us; 2us; 841us; 842us; 1us; 842us; 2us; 843us; 844us; 1us; 844us; 1us; 846us; 1us; 846us; 2us; 847us; 848us; 1us; 847us; 1us; 847us; 2us; 849us; 850us; 1us; 849us; 1us; 849us; 2us; 851us; 852us; 1us; 851us; 1us; 851us; 3us; 853us; 854us; 855us; 5us; 853us; 855us; 873us; 874us; 875us; 1us; 853us; 4us; 853us; 873us; 874us; 875us; 1us; 854us; 1us; 854us; 1us; 854us; 4us; 854us; 873us; 874us; 875us; 5us; 856us; 858us; 873us; 874us; 875us; 1us; 856us; 4us; 856us; 873us; 874us; 875us; 1us; 857us; 1us; 857us; 1us; 857us; 4us; 857us; 873us; 874us; 875us; 2us; 859us; 860us; 1us; 859us; 1us; 859us; 1us; 861us; 1us; 861us; 6us; 862us; 864us; 865us; 873us; 874us; 875us; 1us; 862us; 1us; 862us; 1us; 863us; 1us; 863us; 1us; 864us; 1us; 864us; 6us; 866us; 867us; 868us; 873us; 874us; 875us; 1us; 866us; 1us; 866us; 1us; 867us; 1us; 867us; 3us; 869us; 949us; 950us; 1us; 870us; 2us; 870us; 878us; 2us; 871us; 872us; 4us; 871us; 872us; 910us; 913us; 1us; 871us; 1us; 871us; 7us; 873us; 874us; 875us; 899us; 900us; 901us; 902us; 1us; 873us; 1us; 874us; 1us; 874us; 1us; 875us; 4us; 876us; 897us; 898us; 909us; 1us; 876us; 1us; 876us; 1us; 876us; 1us; 877us; 1us; 878us; 1us; 878us; 2us; 879us; 896us; 1us; 879us; 1us; 879us; 4us; 880us; 881us; 882us; 883us; 1us; 880us; 3us; 881us; 882us; 883us; 1us; 881us; 2us; 882us; 883us; 1us; 882us; 1us; 883us; 1us; 883us; 1us; 884us; 1us; 884us; 1us; 884us; 3us; 884us; 885us; 886us; 4us; 885us; 886us; 916us; 917us; 2us; 885us; 886us; 1us; 885us; 1us; 886us; 2us; 888us; 889us; 1us; 889us; 1us; 889us; 4us; 890us; 897us; 898us; 909us; 1us; 890us; 1us; 890us; 1us; 890us; 3us; 891us; 911us; 912us; 3us; 892us; 911us; 912us; 1us; 893us; 1us; 894us; 3us; 894us; 911us; 912us; 1us; 895us; 1us; 896us; 3us; 897us; 898us; 909us; 2us; 897us; 898us; 5us; 897us; 898us; 923us; 924us; 925us; 1us; 897us; 1us; 898us; 5us; 899us; 900us; 901us; 902us; 903us; 5us; 899us; 900us; 901us; 902us; 903us; 3us; 899us; 900us; 901us; 2us; 899us; 900us; 1us; 899us; 1us; 900us; 1us; 901us; 1us; 902us; 1us; 903us; 1us; 904us; 1us; 905us; 1us; 906us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 909us; 1us; 910us; 2us; 911us; 912us; 4us; 911us; 912us; 949us; 950us; 1us; 912us; 1us; 913us; 1us; 913us; 1us; 914us; 1us; 915us; 1us; 915us; 7us; 916us; 917us; 918us; 919us; 920us; 921us; 922us; 3us; 916us; 917us; 918us; 3us; 916us; 917us; 918us; 2us; 916us; 917us; 1us; 916us; 1us; 917us; 1us; 918us; 3us; 919us; 920us; 926us; 1us; 919us; 1us; 920us; 1us; 921us; 1us; 922us; 3us; 923us; 924us; 925us; 2us; 924us; 925us; 1us; 924us; 1us; 926us; 1us; 927us; 2us; 929us; 930us; 3us; 929us; 940us; 941us; 1us; 929us; 1us; 930us; 1us; 930us; 3us; 931us; 949us; 950us; 1us; 932us; 1us; 933us; 3us; 933us; 940us; 941us; 1us; 933us; 2us; 934us; 935us; 1us; 935us; 1us; 935us; 1us; 936us; 2us; 937us; 938us; 1us; 938us; 1us; 939us; 3us; 940us; 940us; 941us; 3us; 940us; 941us; 941us; 3us; 940us; 941us; 942us; 1us; 940us; 1us; 941us; 1us; 942us; 1us; 943us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 945us; 2us; 945us; 992us; 1us; 946us; 1us; 947us; 1us; 948us; 2us; 949us; 950us; 1us; 949us; 1us; 950us; 4us; 951us; 952us; 954us; 955us; 1us; 951us; 1us; 951us; 1us; 952us; 1us; 952us; 1us; 953us; 3us; 954us; 955us; 984us; 3us; 954us; 955us; 984us; 1us; 954us; 1us; 955us; 1us; 955us; 1us; 955us; 1us; 956us; 1us; 957us; 1us; 958us; 1us; 959us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 971us; 1us; 972us; 1us; 973us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 2us; 979us; 980us; 1us; 980us; 1us; 981us; 1us; 981us; 1us; 982us; 1us; 983us; 1us; 983us; 1us; 984us; 1us; 985us; 1us; 986us; 3us; 987us; 989us; 990us; 1us; 988us; 2us; 989us; 990us; 1us; 989us; 1us; 990us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 994us; 1us; 995us; 1us; 996us; 2us; 997us; 998us; 1us; 998us; 1us; 999us; 1us; 999us; 2us; 1001us; 1003us; 2us; 1002us; 1004us; 1us; 1003us; 1us; 1004us; 1us; 1005us; 1us; 1006us; 1us; 1007us; 1us; 1008us; 1us; 1009us; 1us; 1010us; 1us; 1012us; 1us; 1014us; 1us; 1016us; 1us; 1018us; 1us; 1020us; 1us; 1022us; 1us; 1026us; 1us; 1028us; 1us; 1030us; 1us; 1031us; 1us; 1032us; 1us; 1033us; 1us; 1034us; 1us; 1035us; 1us; 1036us; 1us; 1037us; 1us; 1038us; 1us; 1039us; 1us; 1040us; 1us; 1041us; 1us; 1043us; 1us; 1043us; 1us; 1044us; 2us; 1045us; 1046us; 1us; 1045us; 1us; 1045us; 1us; 1046us; 2us; 1047us; 1049us; 1us; 1047us; 1us; 1047us; 1us; 1048us; 1us; 1049us; 1us; 1050us; 1us; 1051us; 1us; 1053us; 1us; 1055us; 2us; 1055us; 1076us; 1us; 1055us; 1us; 1056us; 1us; 1057us; 1us; 1058us; 2us; 1058us; 1077us; 1us; 1058us; 1us; 1059us; 1us; 1060us; 1us; 1061us; 1us; 1061us; 1us; 1062us; 1us; 1063us; 1us; 1064us; 1us; 1065us; 1us; 1065us; 1us; 1066us; 1us; 1067us; 1us; 1068us; 1us; 1068us; 1us; 1069us; 1us; 1070us; 1us; 1071us; 1us; 1072us; 1us; 1073us; 1us; 1074us; 1us; 1075us; 1us; 1076us; 1us; 1077us; 1us; 1078us; 1us; 1079us; 1us; 1080us; 1us; 1081us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 131us; 133us; 136us; 138us; 140us; 142us; 144us; 146us; 149us; 151us; 153us; 155us; 158us; 160us; 162us; 164us; 168us; 170us; 172us; 174us; 176us; 178us; 182us; 184us; 186us; 190us; 193us; 195us; 198us; 200us; 202us; 204us; 206us; 213us; 220us; 224us; 226us; 228us; 230us; 234us; 237us; 239us; 241us; 243us; 247us; 249us; 251us; 254us; 257us; 260us; 262us; 264us; 266us; 268us; 270us; 272us; 278us; 284us; 287us; 290us; 292us; 294us; 296us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 320us; 322us; 324us; 327us; 378us; 380us; 431us; 433us; 435us; 439us; 441us; 443us; 445us; 447us; 449us; 451us; 453us; 455us; 457us; 459us; 461us; 463us; 466us; 468us; 470us; 472us; 476us; 478us; 480us; 482us; 484us; 486us; 488us; 490us; 492us; 494us; 496us; 498us; 500us; 502us; 504us; 508us; 511us; 513us; 515us; 517us; 519us; 522us; 525us; 527us; 529us; 532us; 535us; 537us; 539us; 542us; 545us; 547us; 549us; 551us; 553us; 555us; 557us; 559us; 567us; 580us; 588us; 601us; 603us; 605us; 607us; 609us; 611us; 613us; 615us; 617us; 619us; 621us; 626us; 628us; 633us; 635us; 637us; 641us; 643us; 645us; 647us; 649us; 651us; 653us; 655us; 657us; 659us; 662us; 665us; 667us; 669us; 672us; 674us; 676us; 678us; 681us; 683us; 685us; 687us; 689us; 691us; 693us; 696us; 698us; 700us; 702us; 705us; 707us; 710us; 712us; 715us; 717us; 719us; 721us; 723us; 735us; 746us; 749us; 751us; 753us; 757us; 760us; 762us; 764us; 766us; 769us; 771us; 773us; 775us; 786us; 796us; 849us; 852us; 854us; 856us; 858us; 863us; 865us; 868us; 870us; 872us; 875us; 878us; 880us; 882us; 884us; 886us; 893us; 900us; 902us; 906us; 908us; 914us; 916us; 918us; 920us; 922us; 924us; 926us; 928us; 930us; 933us; 935us; 937us; 940us; 944us; 946us; 951us; 955us; 957us; 961us; 967us; 970us; 972us; 974us; 977us; 979us; 981us; 983us; 985us; 989us; 993us; 996us; 998us; 1000us; 1002us; 1004us; 1006us; 1008us; 1010us; 1013us; 1015us; 1020us; 1024us; 1027us; 1029us; 1031us; 1034us; 1036us; 1038us; 1040us; 1042us; 1044us; 1047us; 1049us; 1053us; 1055us; 1057us; 1060us; 1064us; 1066us; 1068us; 1070us; 1074us; 1076us; 1078us; 1080us; 1082us; 1084us; 1086us; 1088us; 1091us; 1093us; 1095us; 1097us; 1102us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1127us; 1129us; 1131us; 1133us; 1135us; 1137us; 1139us; 1141us; 1143us; 1145us; 1147us; 1152us; 1155us; 1158us; 1161us; 1164us; 1166us; 1168us; 1170us; 1172us; 1174us; 1176us; 1178us; 1180us; 1182us; 1184us; 1186us; 1190us; 1193us; 1195us; 1197us; 1200us; 1202us; 1205us; 1208us; 1210us; 1212us; 1215us; 1218us; 1220us; 1222us; 1224us; 1226us; 1228us; 1230us; 1232us; 1234us; 1236us; 1238us; 1240us; 1243us; 1246us; 1248us; 1250us; 1253us; 1255us; 1257us; 1259us; 1261us; 1263us; 1265us; 1267us; 1269us; 1272us; 1275us; 1278us; 1280us; 1282us; 1284us; 1287us; 1289us; 1301us; 1318us; 1330us; 1347us; 1349us; 1351us; 1354us; 1356us; 1358us; 1360us; 1365us; 1367us; 1369us; 1371us; 1373us; 1375us; 1377us; 1379us; 1381us; 1383us; 1385us; 1387us; 1389us; 1391us; 1393us; 1395us; 1397us; 1399us; 1401us; 1403us; 1405us; 1407us; 1409us; 1411us; 1413us; 1415us; 1417us; 1419us; 1421us; 1423us; 1425us; 1427us; 1429us; 1431us; 1433us; 1435us; 1437us; 1439us; 1441us; 1443us; 1445us; 1448us; 1450us; 1452us; 1454us; 1456us; 1458us; 1460us; 1463us; 1465us; 1467us; 1469us; 1471us; 1473us; 1475us; 1477us; 1479us; 1481us; 1484us; 1486us; 1488us; 1490us; 1492us; 1494us; 1498us; 1501us; 1503us; 1505us; 1507us; 1509us; 1511us; 1513us; 1515us; 1517us; 1519us; 1522us; 1524us; 1526us; 1529us; 1532us; 1534us; 1536us; 1538us; 1541us; 1544us; 1546us; 1551us; 1557us; 1561us; 1563us; 1565us; 1567us; 1569us; 1571us; 1573us; 1575us; 1577us; 1579us; 1581us; 1587us; 1593us; 1598us; 1600us; 1602us; 1604us; 1606us; 1608us; 1610us; 1616us; 1619us; 1622us; 1624us; 1626us; 1630us; 1633us; 1635us; 1637us; 1639us; 1641us; 1648us; 1650us; 1652us; 1656us; 1659us; 1661us; 1663us; 1665us; 1667us; 1669us; 1671us; 1673us; 1675us; 1677us; 1681us; 1686us; 1688us; 1692us; 1694us; 1696us; 1698us; 1701us; 1703us; 1706us; 1710us; 1712us; 1715us; 1717us; 1719us; 1721us; 1723us; 1725us; 1727us; 1729us; 1731us; 1733us; 1735us; 1737us; 1739us; 1741us; 1743us; 1745us; 1747us; 1750us; 1753us; 1756us; 1758us; 1760us; 1762us; 1764us; 1766us; 1768us; 1770us; 1779us; 1781us; 1783us; 1791us; 1793us; 1797us; 1799us; 1801us; 1803us; 1805us; 1807us; 1809us; 1812us; 1814us; 1816us; 1818us; 1820us; 1822us; 1824us; 1826us; 1828us; 1830us; 1835us; 1840us; 1842us; 1844us; 1846us; 1848us; 1850us; 1853us; 1855us; 1858us; 1860us; 1862us; 1868us; 1874us; 1880us; 1883us; 1885us; 1887us; 1889us; 1891us; 1893us; 1895us; 1897us; 1904us; 1906us; 1908us; 1910us; 1912us; 1914us; 1920us; 1922us; 1925us; 1928us; 1931us; 1933us; 1935us; 1937us; 1940us; 1942us; 1944us; 1947us; 1949us; 1954us; 1959us; 1961us; 1963us; 1966us; 1969us; 1971us; 1973us; 1975us; 1977us; 1979us; 1981us; 1983us; 1985us; 1987us; 1989us; 1991us; 1993us; 1995us; 1997us; 1999us; 2001us; 2005us; 2008us; 2010us; 2012us; 2014us; 2018us; 2020us; 2022us; 2024us; 2026us; 2028us; 2030us; 2032us; 2034us; 2036us; 2038us; 2040us; 2042us; 2044us; 2046us; 2048us; 2050us; 2052us; 2054us; 2056us; 2058us; 2060us; 2062us; 2064us; 2066us; 2068us; 2070us; 2072us; 2075us; 2078us; 2080us; 2082us; 2084us; 2086us; 2089us; 2095us; 2097us; 2101us; 2106us; 2108us; 2110us; 2112us; 2114us; 2116us; 2118us; 2121us; 2123us; 2126us; 2128us; 2130us; 2132us; 2134us; 2136us; 2138us; 2140us; 2142us; 2146us; 2150us; 2154us; 2158us; 2161us; 2163us; 2165us; 2167us; 2170us; 2173us; 2175us; 2177us; 2179us; 2181us; 2184us; 2186us; 2188us; 2191us; 2193us; 2195us; 2197us; 2199us; 2201us; 2204us; 2206us; 2208us; 2210us; 2212us; 2214us; 2216us; 2218us; 2220us; 2222us; 2224us; 2226us; 2228us; 2230us; 2232us; 2234us; 2236us; 2239us; 2241us; 2243us; 2245us; 2247us; 2249us; 2252us; 2254us; 2256us; 2259us; 2262us; 2264us; 2266us; 2268us; 2270us; 2272us; 2274us; 2276us; 2278us; 2280us; 2283us; 2285us; 2287us; 2294us; 2296us; 2298us; 2300us; 2303us; 2307us; 2309us; 2311us; 2313us; 2315us; 2317us; 2323us; 2326us; 2328us; 2330us; 2332us; 2335us; 2337us; 2339us; 2346us; 2353us; 2360us; 2367us; 2374us; 2381us; 2388us; 2395us; 2402us; 2410us; 2412us; 2414us; 2416us; 2418us; 2421us; 2424us; 2426us; 2428us; 2430us; 2432us; 2434us; 2437us; 2439us; 2442us; 2444us; 2446us; 2451us; 2453us; 2461us; 2470us; 2475us; 2477us; 2479us; 2481us; 2483us; 2485us; 2487us; 2489us; 2491us; 2493us; 2495us; 2497us; 2499us; 2501us; 2511us; 2513us; 2515us; 2517us; 2522us; 2524us; 2526us; 2528us; 2530us; 2532us; 2534us; 2536us; 2538us; 2540us; 2542us; 2544us; 2546us; 2548us; 2550us; 2552us; 2554us; 2556us; 2558us; 2561us; 2563us; 2565us; 2567us; 2569us; 2571us; 2573us; 2582us; 2585us; 2587us; 2589us; 2593us; 2596us; 2598us; 2603us; 2608us; 2613us; 2615us; 2617us; 2620us; 2622us; 2624us; 2632us; 2640us; 2648us; 2656us; 2664us; 2672us; 2680us; 2687us; 2695us; 2703us; 2712us; 2725us; 2733us; 2735us; 2737us; 2739us; 2742us; 2745us; 2747us; 2749us; 2751us; 2753us; 2755us; 2757us; 2759us; 2761us; 2763us; 2766us; 2768us; 2771us; 2773us; 2777us; 2779us; 2781us; 2784us; 2786us; 2789us; 2792us; 2794us; 2796us; 2798us; 2800us; 2802us; 2804us; 2855us; 2858us; 2860us; 2863us; 2865us; 2867us; 2869us; 2871us; 2926us; 2929us; 2931us; 2933us; 2935us; 2937us; 2939us; 2941us; 2943us; 2949us; 2951us; 2954us; 2957us; 2960us; 2963us; 2966us; 2969us; 2972us; 2975us; 2978us; 2981us; 2985us; 2988us; 2991us; 2993us; 2995us; 2997us; 2999us; 3001us; 3003us; 3005us; 3007us; 3009us; 3011us; 3013us; 3015us; 3018us; 3021us; 3023us; 3025us; 3030us; 3032us; 3034us; 3037us; 3039us; 3041us; 3043us; 3045us; 3047us; 3050us; 3053us; 3055us; 3057us; 3060us; 3063us; 3065us; 3067us; 3071us; 3075us; 3077us; 3079us; 3081us; 3083us; 3087us; 3139us; 3141us; 3143us; 3145us; 3147us; 3198us; 3201us; 3252us; 3254us; 3256us; 3259us; 3261us; 3268us; 3322us; 3326us; 3329us; 3331us; 3333us; 3335us; 3337us; 3339us; 3341us; 3343us; 3359us; 3366us; 3371us; 3374us; 3376us; 3378us; 3380us; 3382us; 3384us; 3390us; 3395us; 3398us; 3400us; 3402us; 3404us; 3406us; 3408us; 3410us; 3412us; 3414us; 3416us; 3418us; 3421us; 3424us; 3475us; 3478us; 3529us; 3531us; 3533us; 3535us; 3537us; 3539us; 3541us; 3543us; 3545us; 3547us; 3550us; 3553us; 3556us; 3559us; 3562us; 3564us; 3566us; 3568us; 3570us; 3572us; 3574us; 3576us; 3578us; 3580us; 3582us; 3584us; 3586us; 3588us; 3590us; 3641us; 3643us; 3645us; 3696us; 3747us; 3798us; 3849us; 3900us; 3951us; 4002us; 4053us; 4104us; 4155us; 4206us; 4257us; 4308us; 4359us; 4410us; 4461us; 4512us; 4563us; 4614us; 4665us; 4716us; 4767us; 4818us; 4869us; 4920us; 4971us; 5022us; 5074us; 5125us; 5175us; 5226us; 5277us; 5328us; 5379us; 5431us; 5433us; 5435us; 5437us; 5439us; 5441us; 5443us; 5445us; 5448us; 5450us; 5452us; 5456us; 5462us; 5465us; 5468us; 5471us; 5474us; 5477us; 5480us; 5483us; 5486us; 5489us; 5492us; 5496us; 5498us; 5501us; 5504us; 5507us; 5510us; 5513us; 5516us; 5519us; 5522us; 5525us; 5527us; 5529us; 5531us; 5533us; 5535us; 5537us; 5539us; 5541us; 5543us; 5545us; 5547us; 5549us; 5551us; 5553us; 5555us; 5557us; 5559us; 5561us; 5563us; 5565us; 5568us; 5570us; 5574us; 5577us; 5579us; 5582us; 5584us; 5587us; 5591us; 5594us; 5596us; 5598us; 5600us; 5602us; 5604us; 5606us; 5609us; 5612us; 5614us; 5616us; 5618us; 5621us; 5623us; 5625us; 5627us; 5629us; 5636us; 5641us; 5644us; 5646us; 5649us; 5651us; 5653us; 5655us; 5657us; 5659us; 5661us; 5663us; 5665us; 5667us; 5669us; 5672us; 5675us; 5678us; 5680us; 5682us; 5684us; 5687us; 5690us; 5693us; 5695us; 5697us; 5700us; 5702us; 5704us; 5707us; 5709us; 5712us; 5714us; 5716us; 5719us; 5721us; 5723us; 5726us; 5728us; 5730us; 5733us; 5735us; 5737us; 5740us; 5742us; 5744us; 5747us; 5749us; 5751us; 5754us; 5756us; 5761us; 5770us; 5774us; 5782us; 5786us; 5792us; 5795us; 5800us; 5802us; 5804us; 5806us; 5808us; 5810us; 5812us; 5814us; 5816us; 5819us; 5826us; 5832us; 5834us; 5841us; 5843us; 5850us; 5857us; 5864us; 5871us; 5878us; 5885us; 5887us; 5889us; 5891us; 5893us; 5895us; 5898us; 5900us; 5902us; 5904us; 5906us; 5908us; 5910us; 5913us; 5915us; 5917us; 5919us; 5921us; 5923us; 5928us; 5931us; 5933us; 5935us; 5937us; 5939us; 5943us; 5946us; 5948us; 5950us; 5952us; 5954us; 5956us; 5958us; 5965us; 5967us; 5969us; 5971us; 5973us; 5975us; 5977us; 5982us; 5985us; 5987us; 5989us; 5991us; 5993us; 5995us; 5997us; 5999us; 6001us; 6003us; 6005us; 6007us; 6009us; 6011us; 6013us; 6015us; 6020us; 6023us; 6025us; 6027us; 6029us; 6031us; 6033us; 6038us; 6044us; 6047us; 6049us; 6051us; 6053us; 6055us; 6060us; 6063us; 6065us; 6067us; 6069us; 6071us; 6081us; 6096us; 6110us; 6112us; 6115us; 6117us; 6119us; 6121us; 6124us; 6126us; 6128us; 6130us; 6132us; 6134us; 6136us; 6138us; 6140us; 6142us; 6144us; 6146us; 6148us; 6150us; 6152us; 6155us; 6158us; 6160us; 6162us; 6164us; 6170us; 6173us; 6175us; 6177us; 6179us; 6181us; 6183us; 6185us; 6187us; 6189us; 6191us; 6193us; 6195us; 6197us; 6199us; 6202us; 6204us; 6206us; 6208us; 6210us; 6212us; 6214us; 6216us; 6218us; 6220us; 6223us; 6225us; 6227us; 6229us; 6231us; 6233us; 6235us; 6237us; 6239us; 6242us; 6244us; 6250us; 6252us; 6254us; 6256us; 6258us; 6260us; 6263us; 6265us; 6267us; 6269us; 6271us; 6274us; 6276us; 6280us; 6283us; 6285us; 6288us; 6290us; 6292us; 6294us; 6297us; 6299us; 6302us; 6304us; 6306us; 6308us; 6311us; 6313us; 6315us; 6317us; 6320us; 6323us; 6326us; 6328us; 6330us; 6334us; 6336us; 6338us; 6344us; 6348us; 6350us; 6352us; 6354us; 6357us; 6359us; 6361us; 6363us; 6365us; 6367us; 6369us; 6371us; 6374us; 6376us; 6378us; 6380us; 6382us; 6384us; 6386us; 6388us; 6390us; 6392us; 6394us; 6396us; 6398us; 6400us; 6405us; 6407us; 6409us; 6411us; 6413us; 6415us; 6417us; 6423us; 6426us; 6428us; 6430us; 6432us; 6434us; 6436us; 6439us; 6442us; 6445us; 6447us; 6449us; 6456us; 6462us; 6467us; 6470us; 6472us; 6474us; 6476us; 6478us; 6480us; 6482us; 6484us; 6486us; 6488us; 6490us; 6492us; 6494us; 6496us; 6498us; 6501us; 6503us; 6506us; 6508us; 6510us; 6512us; 6515us; 6517us; 6519us; 6522us; 6524us; 6526us; 6529us; 6531us; 6533us; 6537us; 6543us; 6545us; 6550us; 6552us; 6554us; 6556us; 6561us; 6567us; 6569us; 6574us; 6576us; 6578us; 6580us; 6585us; 6588us; 6590us; 6592us; 6594us; 6596us; 6603us; 6605us; 6607us; 6609us; 6611us; 6613us; 6615us; 6622us; 6624us; 6626us; 6628us; 6630us; 6634us; 6636us; 6639us; 6642us; 6647us; 6649us; 6651us; 6659us; 6661us; 6663us; 6665us; 6667us; 6672us; 6674us; 6676us; 6678us; 6680us; 6682us; 6684us; 6687us; 6689us; 6691us; 6696us; 6698us; 6702us; 6704us; 6707us; 6709us; 6711us; 6713us; 6715us; 6717us; 6719us; 6723us; 6728us; 6731us; 6733us; 6735us; 6738us; 6740us; 6742us; 6747us; 6749us; 6751us; 6753us; 6757us; 6761us; 6763us; 6765us; 6769us; 6771us; 6773us; 6777us; 6780us; 6786us; 6788us; 6790us; 6796us; 6802us; 6806us; 6809us; 6811us; 6813us; 6815us; 6817us; 6819us; 6821us; 6823us; 6825us; 6827us; 6829us; 6831us; 6833us; 6835us; 6838us; 6843us; 6845us; 6847us; 6849us; 6851us; 6853us; 6855us; 6863us; 6867us; 6871us; 6874us; 6876us; 6878us; 6880us; 6884us; 6886us; 6888us; 6890us; 6892us; 6896us; 6899us; 6901us; 6903us; 6905us; 6908us; 6912us; 6914us; 6916us; 6918us; 6922us; 6924us; 6926us; 6930us; 6932us; 6935us; 6937us; 6939us; 6941us; 6944us; 6946us; 6948us; 6952us; 6956us; 6960us; 6962us; 6964us; 6966us; 6968us; 6970us; 6972us; 6974us; 6976us; 6979us; 6981us; 6983us; 6985us; 6988us; 6990us; 6992us; 6997us; 6999us; 7001us; 7003us; 7005us; 7007us; 7011us; 7015us; 7017us; 7019us; 7021us; 7023us; 7025us; 7027us; 7029us; 7031us; 7033us; 7035us; 7037us; 7039us; 7041us; 7043us; 7045us; 7047us; 7049us; 7051us; 7053us; 7055us; 7057us; 7059us; 7061us; 7063us; 7065us; 7067us; 7069us; 7072us; 7074us; 7076us; 7078us; 7080us; 7082us; 7084us; 7086us; 7088us; 7090us; 7094us; 7096us; 7099us; 7101us; 7103us; 7105us; 7107us; 7109us; 7111us; 7113us; 7115us; 7118us; 7120us; 7122us; 7124us; 7127us; 7130us; 7132us; 7134us; 7136us; 7138us; 7140us; 7142us; 7144us; 7146us; 7148us; 7150us; 7152us; 7154us; 7156us; 7158us; 7160us; 7162us; 7164us; 7166us; 7168us; 7170us; 7172us; 7174us; 7176us; 7178us; 7180us; 7182us; 7184us; 7186us; 7188us; 7190us; 7192us; 7195us; 7197us; 7199us; 7201us; 7204us; 7206us; 7208us; 7210us; 7212us; 7214us; 7216us; 7218us; 7220us; 7223us; 7225us; 7227us; 7229us; 7231us; 7234us; 7236us; 7238us; 7240us; 7242us; 7244us; 7246us; 7248us; 7250us; 7252us; 7254us; 7256us; 7258us; 7260us; 7262us; 7264us; 7266us; 7268us; 7270us; 7272us; 7274us; 7276us; 7278us; 7280us; 7282us; 7284us; 7286us; |]
let _fsyacc_action_rows = 1871
let _fsyacc_actionTableElements = [|16us; 16432us; 22us; 71us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 48us; 0us; 49152us; 91us; 16507us; 13us; 16544us; 22us; 232us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 218us; 0us; 49152us; 7us; 16544us; 10us; 14us; 21us; 12us; 67us; 13us; 73us; 304us; 83us; 11us; 87us; 38us; 100us; 276us; 0us; 49152us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 49152us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 21us; 37us; 67us; 13us; 83us; 36us; 0us; 16397us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 304us; 87us; 38us; 100us; 276us; 0us; 16398us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 304us; 87us; 38us; 100us; 276us; 0us; 16399us; 5us; 16544us; 10us; 14us; 67us; 13us; 73us; 304us; 87us; 38us; 100us; 276us; 0us; 16400us; 16us; 16401us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 100us; 276us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 0us; 16402us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 83us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 107us; 1841us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 120us; 682us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 136us; 697us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 149us; 1846us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 26us; 16403us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 0us; 16404us; 2us; 16405us; 21us; 37us; 83us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 192us; 39us; 0us; 16410us; 2us; 16409us; 193us; 1821us; 200us; 1820us; 0us; 16411us; 0us; 16412us; 0us; 16413us; 2us; 32768us; 10us; 45us; 202us; 46us; 0us; 16414us; 1us; 32768us; 10us; 47us; 0us; 16415us; 4us; 16431us; 10us; 49us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 16416us; 1us; 16544us; 73us; 304us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 17407us; 102us; 1807us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 1us; 16417us; 76us; 1729us; 1us; 17407us; 102us; 1807us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 1us; 16418us; 76us; 1729us; 1us; 16419us; 150us; 55us; 0us; 16420us; 1us; 16422us; 150us; 55us; 0us; 16421us; 1us; 17399us; 69us; 1803us; 16us; 16432us; 22us; 71us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 79us; 0us; 16423us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 8us; 32768us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 107us; 1841us; 108us; 99us; 120us; 682us; 149us; 1846us; 18us; 16432us; 22us; 71us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 69us; 1819us; 73us; 304us; 77us; 1818us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 79us; 0us; 16424us; 0us; 16425us; 0us; 16426us; 15us; 16432us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 76us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 1us; 17403us; 21us; 1805us; 0us; 16427us; 0us; 16428us; 6us; 16431us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 16429us; 0us; 16430us; 3us; 16431us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 3us; 17384us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 15us; 16435us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 83us; 0us; 16433us; 3us; 32768us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 4us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 202us; 83us; 0us; 16434us; 0us; 16436us; 0us; 16437us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 8us; 32768us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 107us; 1841us; 108us; 99us; 120us; 682us; 149us; 1846us; 2us; 32768us; 69us; 1819us; 77us; 1818us; 5us; 32768us; 22us; 115us; 46us; 1727us; 57us; 1816us; 135us; 1817us; 192us; 1726us; 0us; 16438us; 0us; 16439us; 1us; 16544us; 73us; 304us; 1us; 16451us; 130us; 125us; 0us; 16440us; 0us; 16441us; 0us; 16442us; 1us; 16544us; 73us; 304us; 1us; 17411us; 109us; 1808us; 1us; 17413us; 117us; 1809us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 2us; 16685us; 34us; 1836us; 159us; 17438us; 1us; 32768us; 77us; 106us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 1us; 16444us; 69us; 109us; 0us; 16443us; 76us; 32768us; 13us; 1112us; 22us; 111us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 26us; 16445us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 29us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 1us; 17397us; 19us; 1802us; 0us; 16446us; 8us; 16544us; 46us; 1727us; 57us; 1816us; 73us; 304us; 87us; 38us; 100us; 276us; 135us; 1817us; 192us; 1726us; 202us; 83us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 0us; 16447us; 15us; 16432us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 79us; 1us; 32768us; 141us; 120us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 0us; 16448us; 15us; 16432us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 107us; 16544us; 108us; 16544us; 120us; 16544us; 149us; 16544us; 202us; 79us; 1us; 32768us; 141us; 124us; 0us; 16449us; 1us; 16544us; 73us; 304us; 1us; 16451us; 130us; 125us; 0us; 16450us; 2us; 16491us; 69us; 129us; 86us; 211us; 7us; 16544us; 22us; 132us; 49us; 557us; 56us; 559us; 73us; 304us; 110us; 558us; 135us; 157us; 151us; 143us; 0us; 16452us; 0us; 16453us; 52us; 16471us; 14us; 16544us; 22us; 153us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 47us; 16544us; 48us; 16544us; 49us; 557us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 56us; 559us; 58us; 16544us; 66us; 16544us; 72us; 16544us; 73us; 304us; 87us; 16544us; 90us; 16544us; 91us; 16544us; 105us; 16544us; 108us; 16544us; 110us; 558us; 112us; 16544us; 118us; 16544us; 121us; 16544us; 135us; 157us; 147us; 16544us; 151us; 143us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 185us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 200us; 16544us; 201us; 16544us; 1us; 17403us; 21us; 1805us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 1us; 16491us; 86us; 211us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 1us; 16491us; 86us; 211us; 0us; 16454us; 1us; 16491us; 86us; 211us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 119us; 144us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 14us; 16544us; 22us; 161us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 202us; 151us; 3us; 32768us; 10us; 995us; 141us; 149us; 202us; 981us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 141us; 152us; 0us; 16462us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 14us; 16544us; 22us; 161us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 10us; 995us; 141us; 159us; 202us; 981us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 14us; 16471us; 14us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 0us; 16472us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 10us; 32768us; 14us; 561us; 47us; 189us; 48us; 339us; 50us; 207us; 51us; 340us; 52us; 341us; 54us; 185us; 108us; 187us; 110us; 560us; 118us; 194us; 44us; 32768us; 14us; 561us; 46us; 1727us; 47us; 189us; 48us; 339us; 50us; 207us; 51us; 340us; 52us; 341us; 54us; 185us; 56us; 548us; 58us; 631us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 537us; 105us; 1668us; 108us; 187us; 110us; 560us; 112us; 1666us; 118us; 194us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 1us; 17411us; 109us; 1808us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 2us; 16685us; 34us; 1836us; 159us; 17438us; 1us; 32768us; 77us; 179us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 2us; 16480us; 26us; 199us; 86us; 197us; 1us; 16444us; 69us; 109us; 0us; 16473us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 16474us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 16475us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 1us; 17413us; 117us; 1809us; 0us; 16476us; 5us; 32768us; 37us; 1837us; 38us; 1840us; 48us; 338us; 107us; 1841us; 108us; 190us; 1us; 17413us; 117us; 1809us; 0us; 16477us; 1us; 16544us; 73us; 304us; 0us; 16478us; 1us; 32768us; 77us; 195us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16479us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 16481us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 2us; 32768us; 20us; 201us; 202us; 202us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 96us; 204us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 48us; 208us; 0us; 16488us; 1us; 16491us; 86us; 211us; 0us; 16489us; 15us; 16471us; 14us; 16544us; 22us; 161us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 47us; 16544us; 48us; 16544us; 50us; 16544us; 51us; 16544us; 52us; 16544us; 54us; 16544us; 73us; 304us; 108us; 16544us; 110us; 16544us; 118us; 16544us; 3us; 32768us; 19us; 1796us; 20us; 1797us; 141us; 1798us; 0us; 16490us; 2us; 32768us; 10us; 215us; 202us; 216us; 0us; 16492us; 1us; 32768us; 10us; 217us; 0us; 16493us; 4us; 32768us; 10us; 219us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 16494us; 1us; 16495us; 150us; 55us; 0us; 16496us; 1us; 16498us; 150us; 55us; 0us; 16497us; 1us; 17399us; 69us; 1803us; 91us; 16507us; 13us; 16544us; 22us; 232us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 252us; 0us; 16499us; 4us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 202us; 247us; 83us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 107us; 1841us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 120us; 682us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 136us; 697us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 149us; 1846us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 92us; 16507us; 13us; 16544us; 22us; 232us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 69us; 271us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 252us; 0us; 16500us; 0us; 16501us; 90us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 237us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 1us; 17403us; 21us; 1805us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 202us; 247us; 83us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 107us; 1841us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 120us; 682us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 136us; 697us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 149us; 1846us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 29us; 16510us; 21us; 1787us; 62us; 1180us; 63us; 1172us; 67us; 1786us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1785us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 90us; 16509us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 252us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 21us; 1787us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 67us; 1786us; 73us; 304us; 83us; 1785us; 87us; 38us; 100us; 276us; 107us; 16544us; 120us; 16544us; 136us; 16544us; 149us; 16544us; 161us; 16544us; 202us; 252us; 0us; 16513us; 90us; 16516us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 252us; 0us; 16514us; 3us; 32768us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 6us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 4us; 32768us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 141us; 297us; 4us; 16544us; 73us; 304us; 87us; 38us; 100us; 276us; 202us; 252us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 11us; 32768us; 33us; 699us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 41us; 712us; 107us; 1841us; 120us; 682us; 136us; 697us; 149us; 1846us; 161us; 693us; 0us; 16520us; 1us; 16520us; 126us; 1008us; 0us; 16521us; 76us; 16521us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1013us; 0us; 16522us; 1us; 16544us; 73us; 304us; 1us; 16566us; 130us; 345us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 69us; 271us; 5us; 32768us; 22us; 283us; 46us; 1727us; 56us; 1814us; 135us; 1815us; 192us; 1726us; 0us; 16525us; 2us; 16543us; 10us; 995us; 202us; 981us; 0us; 16526us; 0us; 16527us; 5us; 32768us; 37us; 1837us; 38us; 1840us; 46us; 1727us; 107us; 1841us; 192us; 1726us; 1us; 16528us; 76us; 1729us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 16529us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 4us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 76us; 1729us; 0us; 16530us; 1us; 16531us; 76us; 1729us; 6us; 16544us; 56us; 1814us; 73us; 304us; 87us; 38us; 100us; 276us; 135us; 1815us; 202us; 253us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16532us; 0us; 16533us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16534us; 0us; 16535us; 0us; 16536us; 0us; 16537us; 1us; 16538us; 76us; 1729us; 90us; 16507us; 13us; 16544us; 24us; 16544us; 25us; 16544us; 29us; 16544us; 30us; 16544us; 32us; 16544us; 33us; 16544us; 37us; 16544us; 38us; 16544us; 39us; 16544us; 40us; 16544us; 41us; 16544us; 43us; 16544us; 44us; 16544us; 45us; 16544us; 46us; 16544us; 56us; 16544us; 62us; 16544us; 70us; 16544us; 71us; 16544us; 72us; 16544us; 73us; 304us; 74us; 16544us; 85us; 16544us; 87us; 38us; 88us; 16544us; 89us; 16544us; 91us; 16544us; 95us; 16544us; 97us; 16544us; 99us; 16544us; 100us; 276us; 105us; 16544us; 106us; 16544us; 107us; 16544us; 113us; 16544us; 114us; 16544us; 115us; 16544us; 116us; 16544us; 118us; 16544us; 120us; 16544us; 121us; 16544us; 122us; 16544us; 123us; 16544us; 124us; 16544us; 125us; 16544us; 129us; 16544us; 132us; 16544us; 133us; 16544us; 135us; 16544us; 136us; 16544us; 142us; 16544us; 145us; 16544us; 146us; 16544us; 147us; 16544us; 149us; 16544us; 153us; 16544us; 154us; 16544us; 157us; 16544us; 158us; 16544us; 161us; 16544us; 162us; 16544us; 163us; 16544us; 165us; 16544us; 166us; 16544us; 167us; 16544us; 168us; 16544us; 169us; 16544us; 170us; 16544us; 171us; 16544us; 172us; 16544us; 173us; 16544us; 174us; 16544us; 175us; 16544us; 176us; 16544us; 177us; 16544us; 179us; 16544us; 180us; 16544us; 182us; 16544us; 183us; 16544us; 186us; 16544us; 188us; 16544us; 192us; 16544us; 193us; 16544us; 194us; 16544us; 198us; 16544us; 199us; 16544us; 200us; 16544us; 201us; 16544us; 202us; 254us; 3us; 32768us; 10us; 995us; 141us; 295us; 202us; 981us; 0us; 16539us; 0us; 16540us; 0us; 16541us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 385us; 73us; 304us; 141us; 16588us; 202us; 391us; 3us; 32768us; 19us; 1796us; 20us; 1797us; 141us; 1798us; 0us; 16542us; 0us; 16543us; 1us; 16545us; 73us; 304us; 0us; 16546us; 14us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1838us; 38us; 1840us; 39us; 1843us; 40us; 1845us; 46us; 1727us; 60us; 1867us; 93us; 1868us; 107us; 1841us; 149us; 1846us; 162us; 335us; 192us; 1726us; 202us; 309us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 8us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 55us; 307us; 60us; 1867us; 93us; 1868us; 202us; 981us; 1us; 17403us; 21us; 1805us; 0us; 16547us; 1us; 16907us; 55us; 310us; 1us; 17403us; 21us; 1805us; 0us; 16548us; 0us; 16549us; 0us; 16550us; 0us; 16551us; 9us; 17404us; 37us; 1837us; 38us; 1840us; 39us; 1842us; 40us; 1845us; 46us; 1727us; 107us; 1841us; 149us; 1846us; 162us; 335us; 192us; 1726us; 0us; 16552us; 3us; 17436us; 35us; 1835us; 36us; 1834us; 76us; 1729us; 30us; 17161us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16553us; 3us; 32768us; 22us; 324us; 46us; 1727us; 192us; 1726us; 3us; 17436us; 35us; 1835us; 36us; 1834us; 76us; 1729us; 30us; 17161us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16554us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 4us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 76us; 1729us; 2us; 17436us; 35us; 1835us; 36us; 1834us; 30us; 17161us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16555us; 1us; 32768us; 77us; 330us; 0us; 16556us; 1us; 32768us; 77us; 332us; 0us; 16557us; 1us; 17332us; 77us; 334us; 0us; 16558us; 1us; 32768us; 77us; 336us; 0us; 16559us; 10us; 32768us; 30us; 703us; 33us; 699us; 37us; 1837us; 38us; 1840us; 41us; 712us; 48us; 338us; 107us; 1841us; 108us; 454us; 136us; 697us; 161us; 693us; 0us; 16560us; 0us; 16561us; 0us; 16562us; 0us; 16563us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 16686us; 84us; 590us; 0us; 16564us; 1us; 16544us; 73us; 304us; 1us; 16566us; 130us; 345us; 0us; 16565us; 75us; 16544us; 10us; 16567us; 14us; 16567us; 15us; 16567us; 16us; 16567us; 17us; 16567us; 19us; 16567us; 20us; 16567us; 21us; 16567us; 22us; 17401us; 30us; 16567us; 33us; 16567us; 37us; 16567us; 38us; 16567us; 39us; 16567us; 40us; 16567us; 41us; 16567us; 46us; 17401us; 47us; 16567us; 48us; 16567us; 49us; 17401us; 50us; 16567us; 51us; 16567us; 52us; 16567us; 54us; 16567us; 56us; 17401us; 58us; 17401us; 66us; 17401us; 67us; 16567us; 69us; 1804us; 72us; 17401us; 73us; 304us; 83us; 16567us; 86us; 298us; 87us; 16567us; 90us; 17401us; 100us; 16567us; 105us; 17401us; 107us; 16567us; 108us; 16567us; 110us; 16567us; 112us; 17401us; 118us; 16567us; 120us; 16567us; 121us; 17401us; 130us; 16567us; 136us; 16567us; 141us; 16567us; 147us; 17401us; 149us; 16567us; 150us; 16567us; 151us; 17401us; 161us; 16567us; 165us; 17401us; 166us; 17401us; 167us; 17401us; 168us; 17401us; 169us; 17401us; 170us; 17401us; 171us; 17401us; 172us; 17401us; 173us; 17401us; 174us; 17401us; 175us; 17401us; 176us; 17401us; 177us; 17401us; 179us; 17401us; 180us; 17401us; 185us; 17401us; 188us; 17401us; 192us; 17401us; 193us; 17401us; 194us; 17401us; 200us; 17401us; 201us; 17401us; 202us; 16567us; 6us; 16544us; 22us; 359us; 49us; 557us; 56us; 559us; 73us; 304us; 110us; 558us; 151us; 371us; 0us; 16568us; 0us; 16569us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 2us; 17436us; 35us; 1835us; 36us; 1834us; 1us; 32768us; 91us; 822us; 1us; 16636us; 131us; 501us; 1us; 32768us; 69us; 357us; 6us; 16544us; 22us; 359us; 49us; 557us; 56us; 559us; 73us; 304us; 110us; 558us; 151us; 371us; 0us; 16570us; 11us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 22us; 381us; 49us; 557us; 56us; 559us; 73us; 304us; 110us; 558us; 151us; 371us; 202us; 391us; 1us; 17403us; 21us; 1805us; 7us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 304us; 86us; 16588us; 202us; 391us; 1us; 16631us; 86us; 490us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 1us; 16631us; 86us; 490us; 0us; 16571us; 0us; 16572us; 1us; 16631us; 86us; 490us; 0us; 16573us; 0us; 16574us; 0us; 16575us; 1us; 32768us; 119us; 372us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16576us; 0us; 16577us; 5us; 16544us; 10us; 16588us; 22us; 385us; 73us; 304us; 141us; 16588us; 202us; 379us; 3us; 32768us; 10us; 995us; 141us; 377us; 202us; 981us; 0us; 16578us; 0us; 16579us; 4us; 16544us; 10us; 16588us; 73us; 304us; 141us; 380us; 202us; 391us; 0us; 16580us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 304us; 202us; 391us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16581us; 0us; 16582us; 6us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 73us; 304us; 202us; 391us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16583us; 0us; 16584us; 0us; 16585us; 0us; 16586us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 304us; 86us; 16588us; 141us; 16588us; 202us; 391us; 0us; 16587us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 10us; 16544us; 10us; 16588us; 15us; 16588us; 16us; 16588us; 17us; 16588us; 19us; 16588us; 20us; 16588us; 73us; 304us; 86us; 16588us; 141us; 16588us; 202us; 391us; 0us; 16589us; 1us; 17411us; 109us; 1808us; 0us; 16590us; 1us; 17411us; 109us; 1808us; 2us; 32768us; 20us; 400us; 202us; 401us; 0us; 16591us; 0us; 16592us; 1us; 16593us; 130us; 403us; 1us; 17411us; 109us; 1808us; 0us; 16594us; 1us; 16544us; 73us; 304us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 17229us; 77us; 1555us; 1us; 32768us; 69us; 409us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16595us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 17229us; 77us; 1555us; 3us; 32768us; 26us; 398us; 69us; 414us; 86us; 396us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16596us; 0us; 16597us; 1us; 16598us; 48us; 418us; 0us; 16599us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 15us; 32768us; 14us; 561us; 30us; 703us; 33us; 699us; 41us; 712us; 47us; 337us; 48us; 339us; 50us; 417us; 51us; 340us; 52us; 341us; 54us; 493us; 108us; 454us; 110us; 560us; 118us; 446us; 136us; 697us; 161us; 693us; 49us; 32768us; 14us; 561us; 30us; 703us; 33us; 699us; 41us; 712us; 46us; 1727us; 47us; 337us; 48us; 339us; 50us; 417us; 51us; 340us; 52us; 341us; 54us; 493us; 56us; 548us; 58us; 631us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 537us; 105us; 1668us; 108us; 454us; 110us; 560us; 112us; 1666us; 118us; 446us; 121us; 1667us; 136us; 697us; 147us; 1665us; 161us; 693us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 0us; 16600us; 0us; 16601us; 2us; 17411us; 108us; 460us; 109us; 1808us; 1us; 17397us; 19us; 1802us; 0us; 16602us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 7us; 16629us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 86us; 487us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 0us; 16603us; 1us; 17411us; 109us; 1808us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 2us; 16685us; 34us; 1836us; 159us; 17438us; 1us; 32768us; 77us; 435us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 2us; 16480us; 26us; 199us; 86us; 197us; 1us; 17397us; 19us; 1802us; 0us; 16604us; 0us; 16605us; 1us; 17397us; 19us; 1802us; 0us; 16606us; 1us; 17397us; 19us; 1802us; 0us; 16607us; 1us; 17397us; 19us; 1802us; 0us; 16608us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 16636us; 131us; 501us; 1us; 32768us; 69us; 449us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 17397us; 19us; 1802us; 0us; 16609us; 1us; 16544us; 73us; 304us; 0us; 16610us; 1us; 17413us; 117us; 1809us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 32768us; 192us; 1726us; 1us; 32768us; 77us; 458us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16611us; 1us; 17413us; 117us; 1809us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 32768us; 192us; 1726us; 1us; 16613us; 77us; 468us; 1us; 32768us; 69us; 465us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 2us; 16480us; 26us; 199us; 86us; 197us; 0us; 16612us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16614us; 1us; 16856us; 76us; 471us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 16615us; 1us; 32768us; 76us; 474us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 16616us; 0us; 16617us; 4us; 32768us; 66us; 478us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 1us; 32768us; 76us; 479us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 16618us; 0us; 16619us; 0us; 16621us; 0us; 16622us; 0us; 16623us; 0us; 16624us; 0us; 16625us; 28us; 16544us; 10us; 16628us; 14us; 16628us; 15us; 16628us; 16us; 16628us; 17us; 16628us; 19us; 16628us; 20us; 16628us; 21us; 16628us; 22us; 507us; 30us; 16628us; 33us; 16628us; 41us; 16628us; 43us; 16628us; 44us; 16628us; 45us; 16628us; 47us; 16628us; 50us; 16628us; 52us; 16628us; 54us; 16628us; 73us; 304us; 83us; 16628us; 86us; 16628us; 108us; 16628us; 110us; 16628us; 118us; 16628us; 136us; 16628us; 141us; 16628us; 161us; 16628us; 3us; 32768us; 19us; 1796us; 20us; 1797us; 141us; 1798us; 0us; 16627us; 6us; 16544us; 19us; 16588us; 20us; 16588us; 22us; 385us; 73us; 304us; 141us; 16588us; 202us; 391us; 3us; 32768us; 19us; 1796us; 20us; 1797us; 141us; 1798us; 0us; 16630us; 37us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 46us; 1727us; 56us; 1655us; 60us; 1867us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1639us; 93us; 1868us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 981us; 33us; 16639us; 35us; 1835us; 36us; 1834us; 56us; 17436us; 71us; 17436us; 72us; 17436us; 91us; 17436us; 105us; 17436us; 121us; 17436us; 131us; 504us; 135us; 17436us; 147us; 17436us; 154us; 17436us; 165us; 17436us; 166us; 17436us; 167us; 17436us; 168us; 17436us; 169us; 17436us; 170us; 17436us; 171us; 17436us; 172us; 17436us; 173us; 17436us; 174us; 17436us; 175us; 17436us; 176us; 17436us; 177us; 17436us; 179us; 17436us; 180us; 17436us; 193us; 17436us; 194us; 17436us; 198us; 17436us; 199us; 17436us; 200us; 17436us; 201us; 17436us; 0us; 16632us; 30us; 32768us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 16639us; 131us; 504us; 0us; 16633us; 0us; 16634us; 0us; 16635us; 1us; 32768us; 192us; 1726us; 0us; 16637us; 0us; 16638us; 2us; 32768us; 153us; 506us; 192us; 1726us; 0us; 16640us; 0us; 16641us; 1us; 16544us; 73us; 304us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16642us; 0us; 16643us; 0us; 16644us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 14us; 16544us; 10us; 16646us; 14us; 16646us; 15us; 16646us; 16us; 16646us; 17us; 16646us; 19us; 16646us; 20us; 16646us; 21us; 16646us; 60us; 16646us; 61us; 16646us; 73us; 304us; 110us; 16646us; 141us; 16646us; 195us; 16646us; 0us; 16645us; 3us; 32768us; 48us; 526us; 51us; 527us; 202us; 523us; 4us; 17411us; 48us; 526us; 51us; 527us; 109us; 1808us; 202us; 523us; 3us; 17411us; 108us; 460us; 109us; 1808us; 202us; 522us; 1us; 17397us; 19us; 1802us; 0us; 16647us; 1us; 17397us; 19us; 1802us; 0us; 16648us; 0us; 16649us; 1us; 17411us; 109us; 1808us; 1us; 17397us; 19us; 1802us; 0us; 16650us; 0us; 16651us; 0us; 16652us; 3us; 16626us; 43us; 484us; 44us; 483us; 45us; 485us; 34us; 32768us; 46us; 1727us; 56us; 548us; 58us; 631us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 537us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 2us; 17253us; 76us; 1729us; 154us; 531us; 1us; 32768us; 200us; 532us; 2us; 32768us; 10us; 995us; 202us; 981us; 0us; 16653us; 0us; 16654us; 0us; 16655us; 0us; 16656us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 538us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1669us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1650us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 1us; 16798us; 87us; 540us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16657us; 2us; 16544us; 73us; 304us; 202us; 546us; 5us; 32768us; 10us; 995us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 202us; 981us; 0us; 16658us; 0us; 16659us; 3us; 32768us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 0us; 16660us; 2us; 32768us; 72us; 551us; 91us; 1656us; 0us; 16661us; 0us; 16662us; 2us; 16544us; 73us; 304us; 202us; 555us; 3us; 32768us; 10us; 995us; 65us; 1851us; 202us; 981us; 0us; 16663us; 0us; 16664us; 1us; 32768us; 65us; 1851us; 0us; 16665us; 0us; 16666us; 0us; 16667us; 0us; 16668us; 0us; 16669us; 0us; 16670us; 5us; 32768us; 46us; 1727us; 90us; 1720us; 91us; 568us; 188us; 1723us; 192us; 1726us; 3us; 16671us; 34us; 1836us; 76us; 1729us; 159us; 17438us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 1us; 16672us; 76us; 1729us; 0us; 16673us; 0us; 16674us; 1us; 16544us; 73us; 304us; 4us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 96us; 573us; 0us; 16675us; 2us; 16686us; 84us; 590us; 96us; 573us; 1us; 16681us; 96us; 574us; 1us; 16544us; 73us; 304us; 2us; 16544us; 73us; 304us; 142us; 583us; 0us; 16676us; 0us; 16677us; 2us; 32768us; 90us; 1720us; 188us; 1723us; 0us; 16678us; 1us; 32768us; 159us; 580us; 1us; 16544us; 73us; 304us; 1us; 32768us; 160us; 582us; 0us; 16679us; 0us; 16680us; 1us; 32768us; 159us; 585us; 3us; 16544us; 73us; 304us; 84us; 16682us; 160us; 16682us; 1us; 16686us; 84us; 590us; 1us; 32768us; 160us; 588us; 0us; 16683us; 0us; 16684us; 4us; 32768us; 52us; 597us; 90us; 1720us; 91us; 612us; 188us; 1723us; 1us; 16687us; 130us; 594us; 1us; 17226us; 130us; 594us; 1us; 17228us; 130us; 594us; 4us; 32768us; 52us; 597us; 90us; 1720us; 91us; 612us; 188us; 1723us; 0us; 16688us; 0us; 16689us; 2us; 32768us; 90us; 1720us; 188us; 1723us; 1us; 32768us; 77us; 599us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16690us; 2us; 32768us; 77us; 604us; 79us; 602us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16691us; 5us; 32768us; 56us; 605us; 91us; 609us; 147us; 608us; 151us; 619us; 192us; 606us; 0us; 16692us; 3us; 16699us; 34us; 1678us; 56us; 607us; 159us; 1680us; 0us; 16693us; 0us; 16694us; 1us; 16544us; 73us; 304us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16695us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 4us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 101us; 622us; 1us; 32768us; 77us; 615us; 1us; 32768us; 91us; 616us; 1us; 16544us; 73us; 304us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16696us; 2us; 32768us; 34us; 1678us; 159us; 1680us; 0us; 16697us; 0us; 16698us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 16700us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 6us; 16701us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 1us; 16544us; 73us; 304us; 0us; 16702us; 1us; 32768us; 58us; 631us; 1us; 16544us; 73us; 304us; 0us; 16703us; 2us; 16704us; 21us; 1805us; 58us; 17403us; 0us; 16705us; 1us; 16707us; 58us; 631us; 1us; 16544us; 73us; 304us; 0us; 16706us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 3us; 32768us; 91us; 646us; 99us; 1737us; 192us; 1726us; 3us; 16708us; 69us; 643us; 77us; 641us; 119us; 638us; 34us; 32768us; 10us; 995us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 16709us; 0us; 16710us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16711us; 18us; 32768us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16712us; 0us; 16713us; 29us; 32768us; 58us; 1772us; 62us; 1754us; 63us; 1752us; 69us; 1756us; 70us; 649us; 74us; 1760us; 78us; 647us; 82us; 1764us; 88us; 1761us; 89us; 1762us; 95us; 1755us; 101us; 1757us; 142us; 1767us; 144us; 1763us; 154us; 1769us; 157us; 1766us; 159us; 1758us; 160us; 1759us; 181us; 1765us; 182us; 1753us; 183us; 1750us; 184us; 1749us; 185us; 1751us; 186us; 1744us; 187us; 1748us; 188us; 1747us; 189us; 1746us; 190us; 1745us; 202us; 1735us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16714us; 1us; 32768us; 59us; 650us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16715us; 4us; 17332us; 21us; 1805us; 58us; 17403us; 69us; 654us; 119us; 658us; 0us; 16716us; 18us; 32768us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 200us; 1820us; 201us; 793us; 1us; 17403us; 21us; 1805us; 45us; 16717us; 10us; 16720us; 14us; 16720us; 15us; 16720us; 16us; 16720us; 17us; 16720us; 19us; 16720us; 20us; 16720us; 21us; 16720us; 30us; 16720us; 33us; 16720us; 37us; 16720us; 38us; 16720us; 39us; 16720us; 40us; 16720us; 41us; 16720us; 43us; 16720us; 44us; 16720us; 45us; 16720us; 47us; 16720us; 48us; 16720us; 50us; 16720us; 51us; 16720us; 52us; 16720us; 54us; 16720us; 67us; 16720us; 73us; 16720us; 83us; 16720us; 86us; 16720us; 87us; 16720us; 92us; 16720us; 93us; 16720us; 94us; 16720us; 100us; 16720us; 107us; 16720us; 108us; 16720us; 110us; 16720us; 118us; 16720us; 120us; 16720us; 130us; 16720us; 136us; 16720us; 141us; 16720us; 149us; 16720us; 150us; 16720us; 161us; 16720us; 202us; 16720us; 0us; 16718us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 0us; 16719us; 1us; 16722us; 95us; 661us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16721us; 1us; 17332us; 77us; 664us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 16723us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 6us; 16724us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 0us; 16725us; 0us; 16726us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 7us; 16544us; 10us; 17404us; 60us; 17404us; 61us; 17404us; 65us; 17404us; 73us; 304us; 195us; 17404us; 202us; 17404us; 0us; 16727us; 0us; 16728us; 1us; 17413us; 117us; 1809us; 0us; 16729us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 32768us; 192us; 1726us; 1us; 32768us; 77us; 678us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16730us; 1us; 16631us; 86us; 490us; 0us; 16731us; 1us; 16544us; 73us; 304us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 32768us; 192us; 1726us; 1us; 16736us; 69us; 691us; 0us; 16732us; 1us; 16733us; 119us; 688us; 34us; 32768us; 10us; 995us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 194us; 542us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 16734us; 0us; 16735us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 1us; 16737us; 76us; 1729us; 1us; 17407us; 102us; 1807us; 2us; 16544us; 73us; 304us; 202us; 747us; 0us; 16738us; 0us; 16739us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16740us; 1us; 17407us; 102us; 1807us; 2us; 16544us; 73us; 304us; 202us; 747us; 3us; 32768us; 10us; 995us; 19us; 710us; 202us; 981us; 0us; 16741us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 10us; 995us; 19us; 710us; 202us; 981us; 0us; 16742us; 0us; 16743us; 0us; 16744us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 1us; 16544us; 73us; 304us; 3us; 16620us; 43us; 484us; 44us; 483us; 45us; 485us; 1us; 32768us; 192us; 1726us; 2us; 17436us; 35us; 1835us; 36us; 1834us; 1us; 32768us; 91us; 717us; 4us; 16544us; 73us; 304us; 92us; 16752us; 93us; 16752us; 94us; 16752us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16749us; 1us; 16750us; 96us; 722us; 1us; 16751us; 96us; 724us; 1us; 16544us; 73us; 304us; 0us; 16753us; 1us; 16544us; 73us; 304us; 0us; 16754us; 3us; 32768us; 42us; 736us; 46us; 1727us; 192us; 1726us; 6us; 16755us; 35us; 1835us; 36us; 1834us; 70us; 17436us; 88us; 735us; 95us; 734us; 192us; 1726us; 0us; 16756us; 1us; 16757us; 76us; 1729us; 5us; 16762us; 35us; 1835us; 36us; 1834us; 70us; 17436us; 88us; 735us; 95us; 734us; 1us; 32768us; 70us; 732us; 1us; 32768us; 59us; 733us; 0us; 16758us; 0us; 16759us; 0us; 16760us; 1us; 32768us; 95us; 738us; 1us; 16763us; 95us; 738us; 0us; 16761us; 3us; 32768us; 42us; 737us; 46us; 1727us; 192us; 1726us; 1us; 16766us; 130us; 742us; 0us; 16764us; 2us; 16544us; 73us; 304us; 202us; 747us; 1us; 16766us; 130us; 742us; 0us; 16765us; 1us; 17411us; 109us; 1808us; 0us; 16767us; 0us; 16768us; 1us; 17413us; 117us; 1809us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 17229us; 77us; 1555us; 3us; 32768us; 10us; 995us; 69us; 752us; 202us; 981us; 77us; 32768us; 13us; 1112us; 22us; 756us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 754us; 0us; 16769us; 0us; 16770us; 0us; 16771us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16777us; 1us; 16775us; 84us; 764us; 0us; 16776us; 2us; 32768us; 90us; 1720us; 188us; 1723us; 2us; 32768us; 69us; 766us; 130us; 768us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16778us; 2us; 32768us; 90us; 1720us; 188us; 1723us; 0us; 16779us; 0us; 16780us; 2us; 32768us; 56us; 774us; 77us; 772us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16781us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 0us; 16793us; 0us; 16794us; 0us; 16795us; 1us; 16795us; 142us; 885us; 0us; 16796us; 0us; 16797us; 0us; 16798us; 0us; 16799us; 0us; 16800us; 1us; 16803us; 185us; 795us; 1us; 32768us; 177us; 796us; 0us; 16801us; 1us; 32768us; 177us; 798us; 1us; 16804us; 185us; 799us; 1us; 32768us; 177us; 800us; 0us; 16802us; 0us; 16805us; 2us; 32768us; 62us; 797us; 177us; 794us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16806us; 0us; 16807us; 2us; 32768us; 91us; 802us; 177us; 801us; 0us; 16808us; 1us; 16809us; 34us; 809us; 1us; 32768us; 159us; 1697us; 0us; 16810us; 5us; 16811us; 58us; 842us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 0us; 16812us; 1us; 32768us; 192us; 1726us; 0us; 16813us; 1us; 16815us; 77us; 817us; 2us; 16816us; 77us; 817us; 96us; 820us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16814us; 3us; 32768us; 73us; 304us; 74us; 813us; 192us; 1726us; 3us; 32768us; 73us; 304us; 74us; 813us; 192us; 1726us; 0us; 16817us; 8us; 32768us; 10us; 995us; 73us; 304us; 74us; 813us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 192us; 1726us; 202us; 827us; 5us; 32768us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 0us; 16818us; 0us; 16819us; 0us; 16820us; 3us; 16907us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16821us; 0us; 16822us; 3us; 16824us; 78us; 843us; 88us; 850us; 96us; 848us; 1us; 16825us; 78us; 843us; 2us; 16829us; 78us; 843us; 88us; 850us; 2us; 16830us; 78us; 843us; 88us; 850us; 1us; 16831us; 78us; 843us; 1us; 16832us; 78us; 843us; 6us; 32768us; 58us; 842us; 69us; 997us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 1002us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 1088us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 6us; 32768us; 58us; 842us; 69us; 1095us; 78us; 843us; 88us; 850us; 96us; 848us; 131us; 840us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16823us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 16826us; 96us; 847us; 0us; 16827us; 0us; 16828us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 0us; 16833us; 1us; 17404us; 192us; 1726us; 0us; 16834us; 1us; 32768us; 69us; 857us; 2us; 17371us; 69us; 857us; 76us; 1779us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 6us; 16835us; 58us; 934us; 77us; 937us; 78us; 940us; 88us; 945us; 96us; 943us; 131us; 932us; 39us; 16858us; 34us; 1836us; 35us; 867us; 36us; 869us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 159us; 17438us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 37us; 16836us; 35us; 862us; 36us; 864us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16837us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16838us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16839us; 0us; 16840us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16841us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 874us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16842us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1649us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1650us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16843us; 0us; 16844us; 63us; 16872us; 10us; 995us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1772us; 62us; 1754us; 63us; 1752us; 66us; 470us; 69us; 1756us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 897us; 81us; 871us; 82us; 1764us; 88us; 1761us; 89us; 1762us; 91us; 904us; 95us; 1755us; 99us; 1737us; 101us; 1757us; 105us; 902us; 121us; 901us; 142us; 1767us; 144us; 1763us; 147us; 903us; 154us; 1373us; 157us; 1766us; 159us; 1758us; 160us; 1759us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1765us; 182us; 1753us; 183us; 1750us; 184us; 1749us; 185us; 1751us; 186us; 1744us; 187us; 1748us; 188us; 1747us; 189us; 1746us; 190us; 1745us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 908us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16845us; 0us; 16846us; 37us; 16850us; 35us; 882us; 36us; 880us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16847us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16848us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16849us; 0us; 16851us; 1us; 32768us; 167us; 886us; 0us; 16852us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 3us; 32768us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 0us; 16853us; 37us; 16888us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 32768us; 59us; 892us; 0us; 16854us; 37us; 16888us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 32768us; 64us; 895us; 0us; 16855us; 1us; 32768us; 192us; 1726us; 1us; 17356us; 192us; 1726us; 0us; 16857us; 0us; 16858us; 0us; 16859us; 0us; 16860us; 0us; 16861us; 0us; 16862us; 63us; 16872us; 10us; 995us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1772us; 62us; 1754us; 63us; 1752us; 66us; 470us; 69us; 1756us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 897us; 81us; 871us; 82us; 1764us; 88us; 1761us; 89us; 1762us; 91us; 904us; 95us; 1755us; 99us; 1737us; 101us; 1757us; 105us; 902us; 121us; 901us; 142us; 1767us; 144us; 1763us; 147us; 903us; 154us; 1373us; 157us; 1766us; 159us; 1758us; 160us; 1759us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1765us; 182us; 1753us; 183us; 1750us; 184us; 1749us; 185us; 1751us; 186us; 1744us; 187us; 1748us; 188us; 1747us; 189us; 1746us; 190us; 1745us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 908us; 5us; 32768us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 0us; 16863us; 0us; 16864us; 3us; 16907us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 2us; 16865us; 34us; 17336us; 159us; 17336us; 0us; 16866us; 1us; 32768us; 91us; 912us; 39us; 32768us; 10us; 995us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 916us; 6us; 16875us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 96us; 942us; 202us; 981us; 0us; 16867us; 0us; 16868us; 3us; 16907us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 16869us; 0us; 16870us; 6us; 16871us; 58us; 934us; 77us; 937us; 78us; 940us; 88us; 945us; 96us; 943us; 131us; 932us; 4us; 16874us; 77us; 937us; 78us; 940us; 88us; 945us; 96us; 943us; 3us; 16878us; 77us; 937us; 78us; 940us; 88us; 945us; 2us; 16879us; 77us; 937us; 78us; 940us; 3us; 16881us; 77us; 937us; 78us; 940us; 88us; 945us; 3us; 16882us; 77us; 937us; 78us; 940us; 88us; 945us; 2us; 16883us; 77us; 937us; 78us; 940us; 6us; 32768us; 58us; 934us; 77us; 937us; 78us; 940us; 88us; 945us; 96us; 943us; 131us; 932us; 2us; 16884us; 77us; 937us; 78us; 940us; 6us; 16887us; 58us; 934us; 77us; 937us; 78us; 940us; 88us; 945us; 96us; 943us; 131us; 932us; 8us; 17405us; 21us; 1792us; 58us; 934us; 77us; 937us; 78us; 940us; 83us; 1793us; 88us; 945us; 96us; 943us; 131us; 932us; 15us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 58us; 934us; 60us; 1867us; 69us; 1431us; 77us; 937us; 78us; 940us; 88us; 945us; 93us; 1868us; 96us; 943us; 126us; 1428us; 131us; 932us; 202us; 986us; 7us; 17039us; 58us; 934us; 77us; 937us; 78us; 940us; 84us; 1239us; 88us; 945us; 96us; 943us; 131us; 932us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16873us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 16875us; 96us; 942us; 1us; 16876us; 88us; 944us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16877us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16880us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 2us; 17405us; 21us; 1792us; 83us; 1793us; 0us; 16885us; 2us; 17404us; 46us; 1727us; 192us; 1726us; 0us; 16886us; 2us; 32768us; 69us; 951us; 76us; 1729us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16889us; 37us; 16888us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 16890us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 16891us; 0us; 16892us; 0us; 16893us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 0us; 16894us; 26us; 16895us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 1us; 16897us; 18us; 965us; 0us; 16896us; 1us; 16899us; 77us; 967us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16898us; 1us; 32768us; 10us; 970us; 0us; 16900us; 30us; 16903us; 21us; 1792us; 28us; 976us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 83us; 1793us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 103us; 974us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 75us; 16902us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16901us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16904us; 1us; 32768us; 22us; 977us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 0us; 16905us; 78us; 16906us; 13us; 1112us; 21us; 1014us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1013us; 0us; 16907us; 2us; 16907us; 19us; 1813us; 137us; 1812us; 2us; 16907us; 19us; 1813us; 137us; 1812us; 2us; 16907us; 19us; 1813us; 137us; 1812us; 2us; 16907us; 30us; 1811us; 136us; 1810us; 2us; 16907us; 19us; 1813us; 137us; 1812us; 1us; 16907us; 59us; 1331us; 1us; 16907us; 59us; 1352us; 1us; 16907us; 155us; 1377us; 1us; 16907us; 64us; 1383us; 3us; 16907us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 3us; 16907us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 3us; 16907us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 1us; 16907us; 65us; 1851us; 0us; 16908us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 126us; 999us; 2us; 16911us; 31us; 1001us; 164us; 996us; 0us; 16909us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 10us; 995us; 19us; 710us; 202us; 981us; 1us; 17403us; 21us; 1805us; 2us; 16911us; 31us; 1001us; 164us; 996us; 0us; 16910us; 1us; 32768us; 126us; 1008us; 76us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1010us; 0us; 16912us; 0us; 16913us; 78us; 32768us; 13us; 1112us; 21us; 1014us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1013us; 0us; 16914us; 0us; 16915us; 77us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1016us; 0us; 16916us; 0us; 16917us; 0us; 16918us; 0us; 16919us; 0us; 16920us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 4us; 32768us; 10us; 995us; 26us; 1220us; 86us; 1218us; 202us; 981us; 0us; 16921us; 0us; 16922us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 4us; 32768us; 10us; 995us; 26us; 1220us; 86us; 1218us; 202us; 981us; 0us; 16923us; 0us; 16924us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 32768us; 10us; 995us; 26us; 1220us; 86us; 1218us; 128us; 1032us; 202us; 981us; 0us; 16925us; 0us; 16926us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16927us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 30us; 32768us; 10us; 995us; 28us; 1245us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 103us; 1244us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 202us; 981us; 0us; 16928us; 0us; 16929us; 0us; 16930us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16931us; 64us; 16933us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 158us; 1087us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16932us; 76us; 32768us; 13us; 1112us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16934us; 65us; 16936us; 13us; 1112us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 158us; 1087us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16935us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 982us; 30us; 32768us; 10us; 995us; 30us; 1811us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 136us; 1810us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 202us; 981us; 77us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1053us; 4us; 32768us; 10us; 995us; 19us; 1813us; 137us; 1812us; 202us; 981us; 0us; 16937us; 0us; 16938us; 2us; 32768us; 19us; 1813us; 137us; 1812us; 0us; 16939us; 0us; 16940us; 0us; 16941us; 0us; 16942us; 44us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 60us; 1867us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 93us; 1868us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 985us; 10us; 17403us; 10us; 995us; 16us; 1869us; 21us; 1805us; 30us; 1811us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 93us; 1868us; 136us; 1810us; 202us; 981us; 83us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1869us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1865us; 39us; 1866us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1867us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 93us; 1868us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 983us; 9us; 32768us; 10us; 995us; 16us; 1869us; 19us; 1813us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 93us; 1868us; 137us; 1812us; 202us; 981us; 0us; 16943us; 0us; 16944us; 0us; 16945us; 0us; 16946us; 0us; 16947us; 4us; 32768us; 10us; 995us; 30us; 1811us; 136us; 1810us; 202us; 981us; 78us; 32768us; 10us; 995us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 984us; 4us; 32768us; 10us; 995us; 19us; 1813us; 137us; 1812us; 202us; 981us; 0us; 16948us; 0us; 16949us; 0us; 16950us; 0us; 16951us; 0us; 16952us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 2us; 32768us; 19us; 1813us; 137us; 1812us; 0us; 16953us; 0us; 16954us; 0us; 16955us; 0us; 16956us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 26us; 16957us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 26us; 16958us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 0us; 16959us; 0us; 16960us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 126us; 1090us; 1us; 17403us; 21us; 1805us; 2us; 16911us; 31us; 1001us; 164us; 996us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16961us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 10us; 995us; 19us; 710us; 202us; 981us; 1us; 17403us; 21us; 1805us; 3us; 16911us; 31us; 1001us; 164us; 996us; 202us; 1101us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16962us; 0us; 16963us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 126us; 1104us; 1us; 17403us; 21us; 1805us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16964us; 76us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 10us; 995us; 19us; 710us; 202us; 981us; 0us; 16965us; 1us; 32768us; 97us; 1426us; 0us; 16966us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 26us; 16967us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16968us; 26us; 16972us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 20us; 16975us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 20us; 16976us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 9us; 16977us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 20us; 16978us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 18us; 16979us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 18us; 16980us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 9us; 16981us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16982us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16983us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16984us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16985us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16987us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 9us; 16988us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 1us; 16989us; 190us; 1183us; 8us; 16990us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 190us; 1183us; 4us; 16991us; 95us; 1181us; 157us; 1177us; 185us; 1182us; 190us; 1183us; 4us; 16992us; 95us; 1181us; 157us; 1177us; 185us; 1182us; 190us; 1183us; 1us; 16993us; 190us; 1183us; 1us; 16994us; 190us; 1183us; 1us; 16995us; 190us; 1183us; 23us; 17016us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 24us; 17018us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 9us; 17020us; 62us; 1180us; 78us; 1178us; 81us; 1151us; 95us; 1181us; 157us; 1177us; 183us; 1179us; 185us; 1182us; 188us; 1176us; 190us; 1183us; 26us; 17038us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17042us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17046us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 30us; 32768us; 10us; 995us; 28us; 1245us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 103us; 1244us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 202us; 981us; 24us; 17051us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 32768us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 24us; 17054us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17152us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 28us; 32768us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 104us; 1433us; 127us; 1163us; 138us; 1434us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 26us; 17155us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 27us; 17426us; 62us; 1180us; 63us; 1172us; 69us; 1170us; 77us; 1822us; 78us; 1178us; 79us; 1153us; 80us; 1155us; 81us; 1151us; 82us; 1157us; 88us; 1167us; 89us; 1168us; 95us; 1181us; 96us; 1261us; 101us; 1166us; 127us; 1163us; 142us; 1204us; 144us; 1164us; 157us; 1177us; 159us; 1173us; 160us; 1175us; 183us; 1179us; 184us; 1169us; 185us; 1182us; 187us; 1165us; 188us; 1176us; 189us; 1171us; 190us; 1183us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16969us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16970us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 16971us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 17021us; 68us; 1159us; 76us; 32768us; 13us; 1112us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16973us; 1us; 16974us; 96us; 1259us; 6us; 16974us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 96us; 1259us; 202us; 981us; 76us; 32768us; 13us; 1112us; 16us; 1184us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1185us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1186us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1187us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1188us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1189us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1190us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1191us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1192us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1193us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 78us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1194us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 16986us; 76us; 32768us; 13us; 1112us; 16us; 1195us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1196us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1197us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1198us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1199us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1200us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1201us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1202us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 76us; 32768us; 13us; 1112us; 16us; 1203us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 0us; 17004us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 0us; 17010us; 0us; 17011us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 0us; 17015us; 72us; 17017us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 17363us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1207us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 17364us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17019us; 0us; 17019us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 17343us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 17343us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17022us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17023us; 39us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1225us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1228us; 0us; 17024us; 39us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1225us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1228us; 3us; 32768us; 10us; 995us; 20us; 1222us; 202us; 981us; 0us; 17025us; 0us; 17026us; 0us; 17027us; 38us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1227us; 0us; 17028us; 0us; 17029us; 0us; 17030us; 0us; 17031us; 2us; 32768us; 97us; 1240us; 202us; 1234us; 2us; 17032us; 58us; 1232us; 202us; 1238us; 38us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1237us; 0us; 17033us; 1us; 17037us; 58us; 1235us; 37us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 0us; 17034us; 0us; 17035us; 0us; 17036us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17040us; 3us; 17045us; 27us; 1251us; 139us; 1250us; 140us; 1256us; 0us; 17041us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 22us; 1246us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 17043us; 0us; 17044us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 22us; 1252us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 32768us; 10us; 995us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 202us; 981us; 0us; 17047us; 0us; 17048us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17049us; 0us; 17050us; 82us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1869us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1865us; 39us; 1866us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1867us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 93us; 1868us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 17052us; 82us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1869us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1865us; 39us; 1866us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1867us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 93us; 1868us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 17053us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17350us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17055us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17346us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17056us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17349us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17057us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17362us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17058us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17357us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17059us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 46us; 17358us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17060us; 31us; 32768us; 46us; 1727us; 56us; 1655us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1639us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1292us; 31us; 32768us; 46us; 1727us; 56us; 1655us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1639us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1292us; 2us; 17436us; 35us; 1835us; 36us; 1834us; 37us; 17194us; 14us; 17197us; 21us; 17197us; 26us; 17197us; 35us; 1835us; 36us; 1834us; 56us; 17436us; 71us; 17436us; 72us; 17436us; 86us; 17197us; 91us; 17436us; 105us; 17436us; 110us; 17197us; 121us; 17436us; 135us; 17436us; 147us; 17436us; 154us; 17436us; 165us; 17436us; 166us; 17436us; 167us; 17436us; 168us; 17436us; 169us; 17436us; 170us; 17436us; 171us; 17436us; 172us; 17436us; 173us; 17436us; 174us; 17436us; 175us; 17436us; 176us; 17436us; 177us; 17436us; 179us; 17436us; 180us; 17436us; 193us; 17436us; 194us; 17436us; 198us; 17436us; 199us; 17436us; 200us; 17436us; 201us; 17436us; 31us; 32768us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1291us; 31us; 32768us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1291us; 1us; 17062us; 76us; 1289us; 6us; 17062us; 14us; 17196us; 26us; 17196us; 76us; 1289us; 86us; 17196us; 110us; 17196us; 131us; 504us; 7us; 17091us; 10us; 995us; 46us; 1339us; 70us; 1348us; 91us; 1341us; 99us; 1737us; 192us; 1726us; 202us; 981us; 0us; 17061us; 0us; 17063us; 0us; 17064us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17065us; 46us; 32768us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 118us; 1281us; 121us; 1360us; 135us; 1365us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17066us; 38us; 17067us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1302us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 41us; 17067us; 26us; 1471us; 46us; 1325us; 56us; 1333us; 69us; 1458us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 86us; 1467us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1302us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 41us; 32768us; 26us; 1471us; 46us; 1325us; 56us; 1333us; 69us; 1458us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 86us; 1467us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1302us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17068us; 5us; 17069us; 34us; 1311us; 35us; 1310us; 36us; 1309us; 74us; 1323us; 76us; 1315us; 37us; 32768us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 5us; 17070us; 34us; 1311us; 35us; 1310us; 36us; 1309us; 74us; 1323us; 76us; 1315us; 5us; 17071us; 34us; 1311us; 35us; 1310us; 36us; 1309us; 74us; 1323us; 76us; 1315us; 2us; 17072us; 34us; 1311us; 35us; 1310us; 1us; 17073us; 34us; 1311us; 5us; 17075us; 34us; 1311us; 35us; 1310us; 36us; 1309us; 74us; 1323us; 76us; 1315us; 5us; 17290us; 34us; 1311us; 35us; 1310us; 36us; 1309us; 74us; 1323us; 76us; 1315us; 37us; 32768us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 37us; 32768us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 159us; 1680us; 0us; 17074us; 37us; 32768us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 37us; 17340us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 7us; 17091us; 10us; 995us; 46us; 1339us; 70us; 1348us; 91us; 1341us; 99us; 1737us; 192us; 1726us; 202us; 981us; 0us; 17076us; 1us; 32768us; 76us; 1318us; 7us; 17091us; 10us; 995us; 46us; 1339us; 70us; 1348us; 91us; 1341us; 99us; 1737us; 192us; 1726us; 202us; 981us; 0us; 17077us; 3us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 3us; 17356us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 0us; 17078us; 2us; 32768us; 91us; 1215us; 192us; 1214us; 0us; 17079us; 0us; 17080us; 0us; 17081us; 77us; 17147us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 987us; 3us; 32768us; 10us; 995us; 59us; 1329us; 202us; 981us; 0us; 17082us; 0us; 17083us; 0us; 17084us; 0us; 17085us; 2us; 32768us; 72us; 1521us; 91us; 1334us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17086us; 0us; 17087us; 0us; 17088us; 0us; 17089us; 0us; 17090us; 0us; 17092us; 91us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 58us; 1772us; 62us; 1264us; 63us; 1752us; 69us; 1756us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1321us; 78us; 1342us; 82us; 1764us; 85us; 1047us; 88us; 1276us; 89us; 1279us; 91us; 1387us; 95us; 1209us; 97us; 1114us; 99us; 1737us; 101us; 1757us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1206us; 144us; 1763us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1373us; 157us; 1273us; 158us; 1087us; 159us; 1758us; 160us; 1759us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1765us; 182us; 1270us; 183us; 1267us; 184us; 1749us; 185us; 1751us; 186us; 1314us; 187us; 1748us; 188us; 1213us; 189us; 1746us; 190us; 1745us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1735us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 1us; 32768us; 76us; 1344us; 1us; 32768us; 177us; 1345us; 0us; 17093us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17094us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 988us; 3us; 32768us; 10us; 995us; 59us; 1350us; 202us; 981us; 0us; 17095us; 0us; 17096us; 0us; 17097us; 0us; 17098us; 0us; 17099us; 0us; 17100us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17108us; 0us; 17109us; 77us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 141us; 1371us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1369us; 3us; 32768us; 10us; 995us; 141us; 1367us; 202us; 981us; 0us; 17110us; 0us; 17111us; 1us; 32768us; 141us; 1370us; 0us; 17112us; 0us; 17113us; 77us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 989us; 78us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 155us; 1770us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 989us; 3us; 32768us; 10us; 995us; 155us; 1375us; 202us; 981us; 0us; 17114us; 0us; 17115us; 0us; 17116us; 0us; 17117us; 77us; 17149us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 990us; 3us; 32768us; 10us; 995us; 64us; 1381us; 202us; 981us; 0us; 17118us; 0us; 17119us; 0us; 17120us; 0us; 17121us; 85us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1397us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1394us; 39us; 1395us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1396us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 87us; 1435us; 88us; 1275us; 89us; 1278us; 91us; 1386us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1211us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 991us; 99us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1397us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1394us; 39us; 1395us; 41us; 712us; 46us; 1325us; 56us; 1333us; 58us; 1772us; 60us; 1396us; 62us; 1264us; 63us; 1752us; 69us; 1756us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1321us; 82us; 1764us; 85us; 1047us; 87us; 1435us; 88us; 1276us; 89us; 1279us; 91us; 1386us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 95us; 1209us; 97us; 1114us; 99us; 1737us; 101us; 1757us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1206us; 144us; 1763us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1373us; 157us; 1273us; 158us; 1087us; 159us; 1758us; 160us; 1759us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1765us; 182us; 1270us; 183us; 1267us; 184us; 1749us; 185us; 1751us; 186us; 1314us; 187us; 1748us; 188us; 1212us; 189us; 1746us; 190us; 1745us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 992us; 99us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1397us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1394us; 39us; 1395us; 41us; 712us; 46us; 1325us; 56us; 1333us; 58us; 1772us; 60us; 1396us; 62us; 1264us; 63us; 1752us; 69us; 1756us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1321us; 82us; 1764us; 85us; 1047us; 87us; 1435us; 88us; 1276us; 89us; 1279us; 91us; 1386us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 95us; 1209us; 97us; 1114us; 99us; 1737us; 101us; 1757us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1206us; 144us; 1763us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1373us; 157us; 1273us; 158us; 1087us; 159us; 1758us; 160us; 1759us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 181us; 1765us; 182us; 1270us; 183us; 1267us; 184us; 1749us; 185us; 1751us; 186us; 1314us; 187us; 1748us; 188us; 1212us; 189us; 1746us; 190us; 1745us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 992us; 0us; 17122us; 9us; 32768us; 10us; 995us; 16us; 1863us; 37us; 1860us; 39us; 1861us; 60us; 1862us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 0us; 17123us; 0us; 17124us; 0us; 17125us; 0us; 17125us; 0us; 17126us; 0us; 17127us; 0us; 17128us; 0us; 17129us; 0us; 17130us; 1us; 32768us; 77us; 1400us; 1us; 32768us; 91us; 1401us; 1us; 16544us; 73us; 304us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17131us; 0us; 17132us; 0us; 17133us; 0us; 17134us; 4us; 17134us; 92us; 17137us; 93us; 17137us; 94us; 17137us; 101us; 17137us; 4us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 101us; 1411us; 0us; 17135us; 1us; 32768us; 188us; 1723us; 0us; 17136us; 82us; 32768us; 10us; 995us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 54us; 1451us; 56us; 1333us; 60us; 1847us; 61us; 1849us; 62us; 1263us; 66us; 1462us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1282us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 195us; 1850us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 993us; 5us; 32768us; 10us; 995us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 202us; 981us; 0us; 17138us; 0us; 17139us; 0us; 17140us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17145us; 0us; 17146us; 0us; 17148us; 0us; 17150us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17151us; 82us; 32768us; 10us; 995us; 13us; 1112us; 16us; 1869us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1865us; 39us; 1866us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1867us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 93us; 1868us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 17153us; 0us; 17154us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 75us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17156us; 0us; 17157us; 1us; 32768us; 200us; 1820us; 3us; 17163us; 37us; 1837us; 38us; 1840us; 107us; 1841us; 0us; 17160us; 39us; 17165us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 77us; 1447us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1302us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 1us; 32768us; 87us; 1440us; 0us; 17158us; 0us; 17159us; 0us; 17162us; 1us; 32768us; 91us; 1444us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17164us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1449us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17166us; 36us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1669us; 0us; 17167us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1639us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 2us; 17436us; 35us; 1835us; 36us; 1834us; 30us; 17161us; 56us; 1518us; 71us; 1379us; 72us; 1521us; 91us; 1385us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17186us; 2us; 17178us; 21us; 1480us; 83us; 1481us; 0us; 17168us; 0us; 17169us; 76us; 32768us; 13us; 1112us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17186us; 2us; 17178us; 21us; 1480us; 83us; 1481us; 0us; 17170us; 1us; 17171us; 69us; 1463us; 76us; 17172us; 13us; 1112us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17186us; 2us; 17178us; 21us; 1480us; 83us; 1481us; 0us; 17173us; 3us; 32768us; 46us; 1727us; 66us; 1485us; 192us; 1726us; 0us; 17186us; 2us; 17178us; 21us; 1480us; 83us; 1481us; 0us; 17174us; 5us; 17178us; 21us; 1480us; 46us; 1727us; 66us; 1485us; 83us; 1481us; 192us; 1726us; 1us; 32768us; 20us; 1473us; 0us; 17175us; 0us; 17186us; 2us; 17178us; 21us; 1480us; 83us; 1481us; 1us; 32768us; 20us; 1477us; 0us; 17176us; 0us; 17177us; 3us; 17177us; 46us; 1727us; 66us; 1485us; 192us; 1726us; 1us; 17179us; 83us; 1483us; 1us; 17180us; 21us; 1482us; 0us; 17181us; 0us; 17182us; 1us; 17183us; 76us; 1729us; 0us; 17184us; 0us; 17185us; 8us; 17190us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 69us; 1488us; 93us; 1868us; 202us; 981us; 83us; 17188us; 10us; 995us; 13us; 1112us; 16us; 1869us; 22us; 960us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 37us; 1865us; 39us; 1866us; 41us; 712us; 46us; 1325us; 56us; 1333us; 60us; 1867us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 93us; 1868us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 17187us; 0us; 17189us; 0us; 17191us; 3us; 17403us; 21us; 1805us; 26us; 1502us; 86us; 1500us; 1us; 17403us; 21us; 1805us; 3us; 17204us; 14us; 561us; 110us; 560us; 202us; 1511us; 0us; 17192us; 2us; 32768us; 14us; 561us; 110us; 560us; 0us; 17193us; 0us; 17195us; 0us; 17198us; 3us; 16544us; 22us; 507us; 73us; 304us; 202us; 747us; 0us; 17200us; 2us; 16544us; 73us; 304us; 202us; 747us; 1us; 32768us; 20us; 1504us; 0us; 17201us; 3us; 17395us; 19us; 1799us; 20us; 1800us; 141us; 1801us; 0us; 17202us; 3us; 17204us; 14us; 561us; 110us; 560us; 202us; 1511us; 0us; 17203us; 3us; 17204us; 14us; 561us; 110us; 560us; 202us; 1511us; 0us; 17205us; 3us; 17204us; 14us; 561us; 110us; 560us; 202us; 1511us; 0us; 17206us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 8us; 17199us; 26us; 1502us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 86us; 1500us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 3us; 17395us; 19us; 1799us; 20us; 1800us; 141us; 1801us; 1us; 17403us; 21us; 1805us; 0us; 17207us; 1us; 32768us; 72us; 1521us; 0us; 17208us; 0us; 17209us; 41us; 32768us; 10us; 995us; 46us; 1325us; 56us; 1333us; 65us; 1851us; 66us; 1462us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 994us; 3us; 32768us; 10us; 995us; 65us; 1851us; 202us; 981us; 0us; 17210us; 0us; 17211us; 0us; 17212us; 0us; 17213us; 0us; 17214us; 35us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 1us; 32768us; 97us; 1530us; 77us; 32768us; 13us; 1112us; 22us; 955us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 1532us; 0us; 17215us; 0us; 17216us; 36us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 66us; 470us; 70us; 890us; 71us; 893us; 74us; 896us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1544us; 2us; 32768us; 97us; 1535us; 202us; 1542us; 78us; 32768us; 10us; 995us; 13us; 1112us; 18us; 1539us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 202us; 981us; 3us; 32768us; 10us; 995us; 20us; 1537us; 202us; 981us; 0us; 17217us; 0us; 17218us; 1us; 32768us; 20us; 1540us; 0us; 17219us; 0us; 17220us; 1us; 32768us; 20us; 1543us; 0us; 17221us; 1us; 32768us; 20us; 1545us; 0us; 17222us; 39us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1225us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1228us; 0us; 17223us; 39us; 32768us; 43us; 484us; 44us; 483us; 45us; 485us; 46us; 473us; 56us; 911us; 58us; 1225us; 66us; 470us; 70us; 890us; 71us; 893us; 73us; 304us; 74us; 896us; 81us; 871us; 91us; 904us; 99us; 1737us; 105us; 902us; 121us; 901us; 147us; 903us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 788us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 192us; 1726us; 193us; 1821us; 194us; 887us; 200us; 1820us; 201us; 793us; 202us; 1228us; 1us; 32768us; 20us; 1550us; 0us; 17224us; 1us; 17225us; 84us; 1552us; 4us; 32768us; 52us; 597us; 90us; 1720us; 91us; 612us; 188us; 1723us; 1us; 17227us; 84us; 1554us; 4us; 32768us; 52us; 597us; 90us; 1720us; 91us; 612us; 188us; 1723us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17230us; 1us; 17232us; 97us; 1558us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17231us; 1us; 17234us; 95us; 1561us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17233us; 1us; 17236us; 95us; 1564us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 73us; 304us; 74us; 1577us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17235us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 74us; 1570us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 7us; 17239us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 77us; 1568us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 17237us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 1us; 32768us; 192us; 1726us; 1us; 32768us; 77us; 1572us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 17238us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 7us; 17242us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 77us; 1575us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 17240us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 1us; 32768us; 192us; 1726us; 1us; 32768us; 77us; 1579us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 6us; 17241us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 1us; 17244us; 97us; 1582us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17243us; 1us; 32768us; 10us; 1585us; 0us; 17245us; 8us; 17249us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 95us; 1587us; 185us; 1591us; 188us; 1723us; 192us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17246us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17247us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17248us; 8us; 17252us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 95us; 1594us; 185us; 1596us; 188us; 1723us; 192us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17250us; 31us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17251us; 1us; 17253us; 76us; 1729us; 0us; 17254us; 1us; 17254us; 79us; 1615us; 1us; 17256us; 188us; 1603us; 4us; 17256us; 34us; 1678us; 76us; 1675us; 159us; 1680us; 188us; 1603us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17255us; 9us; 32768us; 10us; 995us; 36us; 1607us; 46us; 1727us; 70us; 1620us; 90us; 1720us; 95us; 1657us; 188us; 1723us; 192us; 1726us; 202us; 981us; 0us; 17257us; 1us; 32768us; 70us; 1620us; 0us; 17258us; 0us; 17259us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1669us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 4us; 32768us; 46us; 1727us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 0us; 17260us; 0us; 17261us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17262us; 1us; 17280us; 79us; 1618us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17263us; 2us; 32768us; 59us; 1621us; 96us; 1622us; 0us; 17264us; 2us; 32768us; 59us; 1623us; 96us; 1624us; 0us; 17265us; 2us; 32768us; 59us; 1625us; 96us; 1626us; 0us; 17266us; 1us; 32768us; 59us; 1627us; 0us; 17267us; 1us; 32768us; 96us; 1629us; 32us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17271us; 1us; 17268us; 96us; 1633us; 4us; 32768us; 10us; 995us; 96us; 1633us; 160us; 1684us; 202us; 981us; 32us; 17312us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17269us; 0us; 17270us; 1us; 17272us; 188us; 1637us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17273us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1669us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 4us; 32768us; 46us; 1727us; 90us; 1720us; 188us; 1723us; 192us; 1726us; 0us; 17274us; 1us; 17275us; 76us; 1672us; 1us; 17276us; 76us; 1672us; 0us; 17277us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 66us; 1649us; 87us; 1646us; 90us; 1720us; 91us; 1650us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 1us; 17278us; 76us; 1672us; 0us; 17279us; 0us; 17280us; 33us; 32768us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 1669us; 5us; 32768us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 6us; 17307us; 10us; 995us; 69us; 1693us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 0us; 17281us; 0us; 17282us; 1us; 32768us; 91us; 1656us; 33us; 32768us; 10us; 995us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 981us; 33us; 32768us; 10us; 995us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 981us; 5us; 32768us; 10us; 995us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 202us; 981us; 0us; 17283us; 0us; 17284us; 0us; 17285us; 0us; 17286us; 0us; 17287us; 0us; 17288us; 0us; 17289us; 37us; 32768us; 46us; 1325us; 56us; 1333us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 91us; 1387us; 99us; 1737us; 105us; 1361us; 121us; 1360us; 135us; 1365us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 186us; 1313us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 0us; 17291us; 0us; 17292us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17293us; 0us; 17294us; 2us; 32768us; 46us; 1727us; 192us; 1726us; 3us; 17295us; 34us; 1678us; 76us; 1729us; 159us; 1680us; 0us; 17296us; 7us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 93us; 1868us; 202us; 981us; 0us; 17297us; 0us; 17298us; 1us; 32768us; 159us; 1680us; 0us; 17299us; 35us; 17312us; 10us; 995us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 160us; 1690us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 981us; 1us; 32768us; 96us; 1682us; 39us; 17312us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 46us; 1727us; 56us; 548us; 60us; 1867us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 93us; 1868us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 202us; 981us; 0us; 17271us; 0us; 17300us; 0us; 17301us; 0us; 17302us; 8us; 17310us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 93us; 1868us; 160us; 1688us; 202us; 981us; 0us; 17303us; 0us; 17304us; 0us; 17305us; 0us; 17306us; 1us; 17307us; 69us; 1693us; 32us; 17309us; 46us; 1727us; 56us; 548us; 66us; 1617us; 72us; 551us; 87us; 1646us; 90us; 1720us; 91us; 1610us; 105us; 1668us; 112us; 1666us; 121us; 1667us; 147us; 1665us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 185us; 1589us; 188us; 1723us; 192us; 1726us; 193us; 1821us; 200us; 1820us; 201us; 793us; 0us; 17308us; 0us; 17310us; 0us; 17311us; 8us; 32768us; 46us; 1727us; 66us; 1700us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 185us; 1719us; 188us; 1723us; 192us; 1726us; 3us; 32768us; 95us; 1717us; 160us; 1699us; 185us; 1718us; 0us; 17313us; 1us; 32768us; 160us; 1701us; 0us; 17314us; 1us; 17315us; 76us; 1729us; 0us; 17316us; 7us; 32768us; 46us; 1727us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 185us; 1719us; 188us; 1723us; 192us; 1726us; 5us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 95us; 1717us; 185us; 1718us; 0us; 17317us; 1us; 17318us; 188us; 1708us; 3us; 32768us; 62us; 806us; 91us; 802us; 177us; 801us; 0us; 17319us; 0us; 17320us; 6us; 17321us; 46us; 1727us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 188us; 1723us; 192us; 1726us; 0us; 17322us; 0us; 17323us; 0us; 17324us; 0us; 17325us; 0us; 17326us; 7us; 32768us; 46us; 1727us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 185us; 1719us; 188us; 1723us; 192us; 1726us; 7us; 32768us; 46us; 1727us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 185us; 1719us; 188us; 1723us; 192us; 1726us; 7us; 32768us; 46us; 1727us; 90us; 1720us; 91us; 1704us; 177us; 1710us; 185us; 1719us; 188us; 1723us; 192us; 1726us; 1us; 32768us; 192us; 1726us; 0us; 17327us; 0us; 17328us; 1us; 32768us; 192us; 1726us; 0us; 17329us; 78us; 17329us; 10us; 17376us; 16us; 17376us; 21us; 17376us; 28us; 17376us; 34us; 17376us; 35us; 17376us; 36us; 17376us; 37us; 17376us; 39us; 17376us; 46us; 17376us; 56us; 17376us; 60us; 17376us; 62us; 17376us; 63us; 17376us; 68us; 17376us; 69us; 17376us; 70us; 17376us; 71us; 17376us; 72us; 17376us; 74us; 17376us; 76us; 17376us; 78us; 17376us; 79us; 17376us; 80us; 17376us; 81us; 17376us; 82us; 17376us; 83us; 17376us; 88us; 17376us; 89us; 17376us; 91us; 17376us; 95us; 17376us; 96us; 17376us; 99us; 17376us; 103us; 17376us; 105us; 17376us; 121us; 17376us; 127us; 17376us; 135us; 17376us; 142us; 17376us; 144us; 17376us; 147us; 17376us; 153us; 17376us; 154us; 17376us; 157us; 17376us; 159us; 17376us; 160us; 17376us; 165us; 17376us; 166us; 17376us; 167us; 17376us; 168us; 17376us; 169us; 17376us; 170us; 17376us; 171us; 17376us; 172us; 17376us; 173us; 17376us; 174us; 17376us; 175us; 17376us; 176us; 17376us; 177us; 17376us; 179us; 17376us; 180us; 17376us; 182us; 17376us; 183us; 17376us; 184us; 17376us; 185us; 17376us; 186us; 17376us; 187us; 17376us; 188us; 17376us; 189us; 17376us; 190us; 17376us; 192us; 17376us; 193us; 17376us; 194us; 17376us; 198us; 17376us; 199us; 17376us; 200us; 17376us; 201us; 17376us; 202us; 17376us; 0us; 17330us; 0us; 17331us; 0us; 17332us; 8us; 32768us; 10us; 995us; 16us; 1869us; 37us; 1865us; 39us; 1866us; 60us; 1867us; 93us; 1868us; 192us; 1726us; 202us; 981us; 0us; 17333us; 0us; 17334us; 27us; 32768us; 58us; 1772us; 62us; 1754us; 63us; 1752us; 69us; 1756us; 74us; 1760us; 82us; 1764us; 88us; 1761us; 89us; 1762us; 95us; 1755us; 101us; 1757us; 142us; 1767us; 144us; 1763us; 154us; 1769us; 157us; 1766us; 159us; 1758us; 160us; 1759us; 181us; 1765us; 182us; 1753us; 183us; 1750us; 184us; 1749us; 185us; 1751us; 186us; 1744us; 187us; 1748us; 188us; 1747us; 189us; 1746us; 190us; 1745us; 202us; 1735us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17335us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17336us; 0us; 17337us; 1us; 32768us; 58us; 1739us; 5us; 32768us; 66us; 1741us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 192us; 1771us; 0us; 17338us; 1us; 32768us; 58us; 1742us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17339us; 0us; 17340us; 0us; 17341us; 0us; 17342us; 0us; 17343us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17351us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17355us; 0us; 17356us; 0us; 17357us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 1us; 17363us; 142us; 1768us; 0us; 17364us; 1us; 32768us; 155us; 1770us; 0us; 17365us; 0us; 17366us; 1us; 32768us; 192us; 1771us; 0us; 17367us; 0us; 17368us; 0us; 17369us; 0us; 17370us; 1us; 17371us; 76us; 1779us; 0us; 17372us; 4us; 32768us; 91us; 1732us; 99us; 1737us; 192us; 1726us; 202us; 1781us; 0us; 17373us; 0us; 17374us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17378us; 0us; 17379us; 0us; 17380us; 3us; 17381us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 17382us; 3us; 17384us; 21us; 1787us; 67us; 1786us; 83us; 1785us; 0us; 17383us; 1us; 17385us; 83us; 1794us; 1us; 17386us; 21us; 1795us; 0us; 17387us; 0us; 17388us; 0us; 17389us; 0us; 17390us; 0us; 17391us; 0us; 17392us; 0us; 17393us; 0us; 17394us; 0us; 17396us; 0us; 17398us; 0us; 17400us; 0us; 17402us; 0us; 17404us; 0us; 17406us; 0us; 17410us; 0us; 17412us; 0us; 17414us; 0us; 17415us; 0us; 17416us; 0us; 17417us; 0us; 17418us; 0us; 17419us; 0us; 17420us; 0us; 17421us; 0us; 17422us; 0us; 17423us; 0us; 17424us; 0us; 17425us; 1us; 32768us; 192us; 1726us; 0us; 17427us; 0us; 17428us; 77us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 196us; 1824us; 197us; 1825us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 2us; 32768us; 196us; 1824us; 197us; 1825us; 0us; 17429us; 0us; 17430us; 77us; 32768us; 13us; 1112us; 24us; 1533us; 25us; 1548us; 29us; 1107us; 30us; 703us; 32us; 1094us; 33us; 699us; 41us; 712us; 46us; 1325us; 56us; 1333us; 62us; 1263us; 70us; 1327us; 71us; 1379us; 72us; 1521us; 74us; 1320us; 85us; 1047us; 88us; 1275us; 89us; 1278us; 91us; 1387us; 95us; 1208us; 97us; 1114us; 99us; 1737us; 105us; 1361us; 106us; 1028us; 113us; 1039us; 114us; 1043us; 115us; 1020us; 116us; 1024us; 118us; 1281us; 121us; 1360us; 122us; 1058us; 123us; 1528us; 124us; 1546us; 125us; 1034us; 129us; 1102us; 132us; 1041us; 133us; 1045us; 135us; 1365us; 142us; 1205us; 145us; 1293us; 146us; 1295us; 147us; 1359us; 153us; 1317us; 154us; 1372us; 157us; 1272us; 158us; 1087us; 161us; 693us; 162us; 1081us; 163us; 1083us; 165us; 790us; 166us; 789us; 167us; 787us; 168us; 786us; 169us; 785us; 170us; 784us; 171us; 782us; 172us; 780us; 173us; 778us; 174us; 776us; 175us; 783us; 176us; 781us; 177us; 779us; 179us; 777us; 180us; 775us; 182us; 1269us; 183us; 1266us; 186us; 1313us; 188us; 1210us; 192us; 1726us; 193us; 1821us; 194us; 1413us; 196us; 1824us; 197us; 1825us; 198us; 1829us; 199us; 1832us; 200us; 1820us; 201us; 793us; 2us; 32768us; 196us; 1824us; 197us; 1825us; 0us; 17431us; 0us; 17432us; 0us; 17433us; 0us; 17434us; 0us; 17435us; 0us; 17437us; 3us; 32768us; 37us; 1837us; 38us; 1840us; 107us; 1841us; 3us; 17460us; 37us; 1837us; 38us; 1840us; 107us; 1841us; 0us; 17439us; 0us; 17440us; 0us; 17441us; 3us; 32768us; 39us; 1842us; 40us; 1845us; 149us; 1846us; 3us; 17461us; 39us; 1842us; 40us; 1845us; 149us; 1846us; 0us; 17442us; 0us; 17443us; 0us; 17444us; 3us; 32768us; 60us; 1847us; 61us; 1849us; 195us; 1850us; 0us; 17445us; 0us; 17446us; 0us; 17447us; 0us; 17448us; 3us; 32768us; 92us; 1855us; 93us; 1852us; 94us; 1854us; 0us; 17449us; 0us; 17450us; 0us; 17451us; 3us; 32768us; 15us; 1859us; 16us; 1856us; 17us; 1858us; 0us; 17452us; 0us; 17453us; 0us; 17454us; 0us; 17455us; 0us; 17456us; 0us; 17457us; 0us; 17458us; 0us; 17459us; 0us; 17460us; 0us; 17461us; 0us; 17462us; 0us; 17463us; 0us; 17464us; 0us; 17465us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 110us; 111us; 119us; 120us; 196us; 197us; 230us; 231us; 232us; 233us; 234us; 235us; 236us; 237us; 242us; 243us; 248us; 249us; 254us; 255us; 261us; 262us; 268us; 269us; 275us; 276us; 293us; 294us; 298us; 382us; 409us; 410us; 413us; 414us; 415us; 416us; 418us; 419us; 422us; 423us; 424us; 425us; 428us; 429us; 431us; 432us; 437us; 438us; 440us; 444us; 446us; 449us; 451us; 453us; 456us; 458us; 460us; 461us; 463us; 464us; 466us; 483us; 484us; 488us; 497us; 516us; 517us; 518us; 519us; 535us; 541us; 543us; 544us; 545us; 552us; 553us; 554us; 558us; 562us; 578us; 579us; 583us; 588us; 589us; 590us; 591us; 595us; 604us; 607us; 613us; 614us; 615us; 617us; 619us; 620us; 621us; 622us; 624us; 626us; 628us; 632us; 636us; 639us; 641us; 675us; 677us; 678us; 755us; 782us; 858us; 888us; 890us; 891us; 900us; 904us; 905us; 921us; 923us; 927us; 928us; 944us; 946us; 947us; 949us; 951us; 952us; 955us; 963us; 964us; 965us; 1018us; 1020us; 1035us; 1037us; 1041us; 1043us; 1044us; 1046us; 1047us; 1048us; 1049us; 1051us; 1085us; 1086us; 1087us; 1104us; 1108us; 1109us; 1110us; 1112us; 1113us; 1128us; 1134us; 1135us; 1136us; 1152us; 1156us; 1157us; 1158us; 1173us; 1179us; 1180us; 1181us; 1182us; 1183us; 1186us; 1201us; 1202us; 1206us; 1210us; 1221us; 1266us; 1268us; 1272us; 1276us; 1279us; 1281us; 1315us; 1318us; 1320us; 1321us; 1353us; 1360us; 1392us; 1399us; 1401us; 1402us; 1408us; 1410us; 1411us; 1413us; 1414us; 1416us; 1450us; 1451us; 1455us; 1456us; 1460us; 1463us; 1464us; 1465us; 1467us; 1471us; 1472us; 1473us; 1475us; 1476us; 1478us; 1479us; 1495us; 1499us; 1500us; 1503us; 1504us; 1506us; 1507us; 1512us; 1513us; 1515us; 1516us; 1518us; 1519us; 1521us; 1613us; 1614us; 1619us; 1703us; 1796us; 1797us; 1798us; 1889us; 1895us; 1897us; 1898us; 1899us; 1906us; 1907us; 1908us; 1909us; 1914us; 1998us; 2028us; 2119us; 2120us; 2121us; 2122us; 2144us; 2145us; 2236us; 2237us; 2241us; 2248us; 2253us; 2258us; 2259us; 2260us; 2261us; 2265us; 2277us; 2278us; 2280us; 2281us; 2358us; 2359us; 2361us; 2363us; 2364us; 2365us; 2367us; 2373us; 2374us; 2377us; 2378us; 2379us; 2385us; 2387us; 2419us; 2426us; 2431us; 2432us; 2434us; 2441us; 2447us; 2448us; 2449us; 2455us; 2456us; 2457us; 2458us; 2459us; 2461us; 2552us; 2556us; 2557us; 2558us; 2559us; 2566us; 2570us; 2571us; 2572us; 2574us; 2575us; 2590us; 2593us; 2602us; 2604us; 2605us; 2607us; 2609us; 2610us; 2611us; 2612us; 2613us; 2623us; 2624us; 2628us; 2659us; 2660us; 2664us; 2668us; 2699us; 2700us; 2703us; 2708us; 2711us; 2742us; 2743us; 2745us; 2746us; 2748us; 2749us; 2751us; 2752us; 2754us; 2755us; 2766us; 2767us; 2768us; 2769us; 2770us; 2774us; 2776us; 2777us; 2779us; 2781us; 2782us; 2858us; 2865us; 2866us; 2867us; 2871us; 2874us; 2876us; 2878us; 2880us; 2887us; 2888us; 2900us; 2902us; 2910us; 2912us; 2918us; 2920us; 2921us; 2922us; 2924us; 2925us; 2926us; 2927us; 2929us; 2963us; 2964us; 2965us; 2971us; 2975us; 2976us; 2977us; 2982us; 2983us; 2990us; 2996us; 2997us; 2998us; 3005us; 3011us; 3012us; 3013us; 3014us; 3015us; 3026us; 3027us; 3030us; 3041us; 3042us; 3044us; 3045us; 3047us; 3050us; 3051us; 3052us; 3054us; 3056us; 3057us; 3059us; 3096us; 3098us; 3100us; 3177us; 3178us; 3215us; 3217us; 3221us; 3298us; 3299us; 3300us; 3302us; 3303us; 3307us; 3311us; 3327us; 3377us; 3378us; 3379us; 3382us; 3384us; 3385us; 3417us; 3425us; 3426us; 3428us; 3432us; 3435us; 3437us; 3471us; 3474us; 3476us; 3477us; 3478us; 3480us; 3481us; 3483us; 3484us; 3486us; 3487us; 3523us; 3525us; 3527us; 3604us; 3606us; 3607us; 3609us; 3610us; 3612us; 3616us; 3618us; 3620us; 3653us; 3654us; 3656us; 3660us; 3662us; 3664us; 3666us; 3743us; 3746us; 3747us; 3780us; 3781us; 3783us; 3787us; 3788us; 3790us; 3794us; 3795us; 3796us; 3801us; 3803us; 3807us; 3808us; 3809us; 3810us; 3811us; 3812us; 3813us; 3814us; 3843us; 3847us; 3848us; 3855us; 3859us; 3860us; 3898us; 3932us; 3933us; 3964us; 3966us; 3967us; 3968us; 3969us; 3971us; 3972us; 3973us; 3976us; 3977us; 3978us; 3980us; 3986us; 3987us; 3988us; 3989us; 3992us; 4007us; 4008us; 4012us; 4017us; 4021us; 4023us; 4024us; 4026us; 4027us; 4028us; 4030us; 4032us; 4033us; 4034us; 4035us; 4039us; 4074us; 4077us; 4079us; 4082us; 4083us; 4084us; 4085us; 4086us; 4120us; 4151us; 4153us; 4157us; 4158us; 4161us; 4167us; 4168us; 4169us; 4173us; 4174us; 4177us; 4178us; 4179us; 4182us; 4186us; 4187us; 4188us; 4190us; 4191us; 4192us; 4193us; 4194us; 4195us; 4196us; 4202us; 4206us; 4209us; 4211us; 4212us; 4213us; 4215us; 4220us; 4221us; 4224us; 4226us; 4228us; 4231us; 4232us; 4233us; 4236us; 4237us; 4239us; 4241us; 4243us; 4244us; 4245us; 4247us; 4251us; 4253us; 4255us; 4256us; 4257us; 4262us; 4264us; 4266us; 4268us; 4273us; 4274us; 4275us; 4278us; 4280us; 4313us; 4314us; 4317us; 4350us; 4351us; 4357us; 4358us; 4362us; 4363us; 4364us; 4366us; 4370us; 4371us; 4403us; 4408us; 4410us; 4412us; 4414us; 4418us; 4419us; 4422us; 4423us; 4424us; 4456us; 4463us; 4470us; 4472us; 4473us; 4475us; 4477us; 4478us; 4481us; 4482us; 4484us; 4486us; 4487us; 4491us; 4495us; 4499us; 4534us; 4535us; 4536us; 4570us; 4571us; 4590us; 4591us; 4592us; 4622us; 4626us; 4627us; 4629us; 4633us; 4634us; 4639us; 4640us; 4659us; 4661us; 4707us; 4708us; 4741us; 4742us; 4744us; 4776us; 4777us; 4779us; 4811us; 4818us; 4825us; 4826us; 4827us; 4830us; 4838us; 4839us; 4840us; 4842us; 4843us; 4847us; 4849us; 4851us; 4884us; 4885us; 4887us; 4888us; 4890us; 4894us; 4896us; 4898us; 4899us; 4901us; 4936us; 4937us; 4938us; 4941us; 4943us; 4945us; 4948us; 4949us; 4950us; 5027us; 5028us; 5030us; 5033us; 5037us; 5038us; 5115us; 5119us; 5120us; 5121us; 5122us; 5123us; 5124us; 5125us; 5126us; 5128us; 5132us; 5134us; 5137us; 5139us; 5144us; 5148us; 5149us; 5151us; 5153us; 5155us; 5156us; 5158us; 5159us; 5163us; 5170us; 5171us; 5173us; 5179us; 5181us; 5183us; 5184us; 5185us; 5186us; 5188us; 5190us; 5191us; 5195us; 5197us; 5198us; 5201us; 5203us; 5204us; 5206us; 5207us; 5208us; 5210us; 5247us; 5249us; 5253us; 5331us; 5332us; 5333us; 5334us; 5410us; 5416us; 5417us; 5418us; 5419us; 5420us; 5422us; 5423us; 5426us; 5429us; 5506us; 5507us; 5510us; 5511us; 5512us; 5515us; 5548us; 5549us; 5550us; 5551us; 5552us; 5553us; 5554us; 5555us; 5556us; 5557us; 5558us; 5559us; 5560us; 5561us; 5562us; 5563us; 5565us; 5566us; 5567us; 5568us; 5569us; 5570us; 5572us; 5574us; 5575us; 5577us; 5579us; 5581us; 5582us; 5583us; 5586us; 5590us; 5591us; 5592us; 5595us; 5596us; 5598us; 5600us; 5601us; 5607us; 5608us; 5610us; 5611us; 5613us; 5616us; 5649us; 5650us; 5654us; 5658us; 5659us; 5668us; 5674us; 5675us; 5676us; 5677us; 5681us; 5682us; 5683us; 5687us; 5689us; 5692us; 5695us; 5697us; 5699us; 5706us; 5713us; 5720us; 5727us; 5764us; 5765us; 5802us; 5839us; 5841us; 5842us; 5843us; 5880us; 5917us; 5954us; 5991us; 5994us; 5995us; 5997us; 5998us; 6000us; 6003us; 6041us; 6048us; 6088us; 6126us; 6127us; 6163us; 6164us; 6200us; 6201us; 6202us; 6238us; 6239us; 6275us; 6276us; 6308us; 6309us; 6310us; 6374us; 6378us; 6379us; 6380us; 6418us; 6419us; 6455us; 6456us; 6492us; 6493us; 6494us; 6496us; 6497us; 6500us; 6504us; 6505us; 6543us; 6545us; 6546us; 6584us; 6586us; 6587us; 6589us; 6591us; 6592us; 6593us; 6594us; 6595us; 6596us; 6597us; 6661us; 6667us; 6668us; 6669us; 6673us; 6676us; 6677us; 6679us; 6719us; 6726us; 6727us; 6728us; 6732us; 6733us; 6734us; 6741us; 6746us; 6750us; 6753us; 6757us; 6761us; 6764us; 6771us; 6774us; 6781us; 6790us; 6806us; 6814us; 6851us; 6852us; 6890us; 6892us; 6894us; 6927us; 6928us; 6966us; 7004us; 7005us; 7043us; 7081us; 7119us; 7157us; 7160us; 7161us; 7164us; 7165us; 7168us; 7206us; 7207us; 7245us; 7246us; 7322us; 7328us; 7329us; 7330us; 7331us; 7407us; 7411us; 7412us; 7439us; 7441us; 7442us; 7444us; 7477us; 7478us; 7480us; 7481us; 7512us; 7588us; 7589us; 7665us; 7666us; 7668us; 7744us; 7748us; 7749us; 7828us; 7829us; 7832us; 7835us; 7838us; 7841us; 7844us; 7846us; 7848us; 7850us; 7852us; 7856us; 7860us; 7864us; 7866us; 7867us; 7904us; 7981us; 7983us; 7986us; 7987us; 8024us; 8101us; 8105us; 8107us; 8110us; 8111us; 8113us; 8190us; 8191us; 8192us; 8271us; 8272us; 8273us; 8351us; 8352us; 8353us; 8354us; 8355us; 8356us; 8432us; 8437us; 8438us; 8439us; 8515us; 8520us; 8521us; 8522us; 8598us; 8604us; 8605us; 8606us; 8683us; 8684us; 8762us; 8793us; 8794us; 8795us; 8796us; 8872us; 8873us; 8938us; 8939us; 9016us; 9017us; 9083us; 9084us; 9162us; 9193us; 9271us; 9276us; 9277us; 9278us; 9281us; 9282us; 9283us; 9284us; 9285us; 9330us; 9341us; 9425us; 9435us; 9436us; 9437us; 9438us; 9439us; 9440us; 9445us; 9524us; 9529us; 9530us; 9531us; 9532us; 9533us; 9534us; 9611us; 9614us; 9615us; 9616us; 9617us; 9618us; 9696us; 9723us; 9801us; 9828us; 9829us; 9830us; 9867us; 9944us; 9946us; 9948us; 9951us; 10028us; 10029us; 10066us; 10143us; 10147us; 10149us; 10153us; 10230us; 10231us; 10232us; 10308us; 10310us; 10312us; 10389us; 10390us; 10467us; 10471us; 10472us; 10474us; 10475us; 10551us; 10578us; 10654us; 10655us; 10682us; 10703us; 10724us; 10734us; 10755us; 10774us; 10793us; 10803us; 10813us; 10823us; 10833us; 10843us; 10853us; 10863us; 10865us; 10874us; 10879us; 10884us; 10886us; 10888us; 10890us; 10914us; 10939us; 10949us; 10976us; 11003us; 11030us; 11061us; 11086us; 11113us; 11138us; 11165us; 11194us; 11221us; 11249us; 11282us; 11283us; 11316us; 11317us; 11350us; 11351us; 11427us; 11429us; 11506us; 11507us; 11509us; 11516us; 11593us; 11670us; 11747us; 11824us; 11901us; 11978us; 12055us; 12132us; 12209us; 12286us; 12365us; 12366us; 12443us; 12520us; 12597us; 12674us; 12751us; 12828us; 12905us; 12982us; 13059us; 13060us; 13061us; 13062us; 13063us; 13064us; 13065us; 13066us; 13067us; 13068us; 13069us; 13070us; 13071us; 13072us; 13073us; 13074us; 13075us; 13076us; 13077us; 13078us; 13079us; 13152us; 13228us; 13304us; 13380us; 13381us; 13382us; 13458us; 13534us; 13610us; 13686us; 13687us; 13763us; 13767us; 13768us; 13808us; 13809us; 13849us; 13853us; 13854us; 13855us; 13856us; 13895us; 13896us; 13897us; 13898us; 13899us; 13902us; 13905us; 13944us; 13945us; 13947us; 13985us; 13986us; 13987us; 13988us; 14064us; 14140us; 14141us; 14145us; 14146us; 14222us; 14224us; 14300us; 14306us; 14307us; 14308us; 14384us; 14386us; 14462us; 14468us; 14469us; 14470us; 14546us; 14547us; 14548us; 14631us; 14632us; 14715us; 14716us; 14763us; 14810us; 14811us; 14858us; 14905us; 14906us; 14953us; 15000us; 15001us; 15048us; 15095us; 15096us; 15143us; 15190us; 15191us; 15238us; 15285us; 15286us; 15318us; 15350us; 15353us; 15391us; 15423us; 15455us; 15457us; 15464us; 15472us; 15473us; 15474us; 15475us; 15522us; 15523us; 15570us; 15571us; 15610us; 15652us; 15694us; 15695us; 15701us; 15739us; 15745us; 15751us; 15754us; 15756us; 15762us; 15768us; 15806us; 15844us; 15846us; 15847us; 15885us; 15923us; 15931us; 15932us; 15934us; 15942us; 15943us; 15947us; 15951us; 15952us; 15955us; 15956us; 15957us; 15958us; 16036us; 16040us; 16041us; 16042us; 16043us; 16044us; 16047us; 16123us; 16124us; 16125us; 16126us; 16127us; 16128us; 16129us; 16221us; 16225us; 16227us; 16229us; 16230us; 16234us; 16235us; 16313us; 16317us; 16318us; 16319us; 16320us; 16321us; 16322us; 16323us; 16324us; 16325us; 16326us; 16327us; 16328us; 16329us; 16330us; 16331us; 16332us; 16410us; 16414us; 16415us; 16416us; 16418us; 16419us; 16420us; 16498us; 16577us; 16581us; 16582us; 16583us; 16584us; 16585us; 16663us; 16667us; 16668us; 16669us; 16670us; 16671us; 16757us; 16857us; 16957us; 16958us; 16968us; 16969us; 16970us; 16971us; 16972us; 16973us; 16974us; 16975us; 16976us; 16977us; 16979us; 16981us; 16983us; 16987us; 17063us; 17064us; 17065us; 17066us; 17067us; 17072us; 17077us; 17078us; 17080us; 17081us; 17164us; 17170us; 17171us; 17172us; 17173us; 17174us; 17175us; 17176us; 17177us; 17178us; 17179us; 17180us; 17181us; 17257us; 17258us; 17341us; 17342us; 17343us; 17419us; 17495us; 17496us; 17497us; 17499us; 17503us; 17504us; 17544us; 17546us; 17547us; 17548us; 17549us; 17551us; 17584us; 17588us; 17589us; 17622us; 17623us; 17660us; 17661us; 17692us; 17695us; 17726us; 17727us; 17730us; 17731us; 17732us; 17809us; 17810us; 17813us; 17814us; 17816us; 17893us; 17894us; 17897us; 17898us; 17902us; 17903us; 17906us; 17907us; 17913us; 17915us; 17916us; 17917us; 17920us; 17922us; 17923us; 17924us; 17928us; 17930us; 17932us; 17933us; 17934us; 17936us; 17937us; 17938us; 17947us; 18031us; 18032us; 18033us; 18034us; 18038us; 18040us; 18044us; 18045us; 18048us; 18049us; 18050us; 18051us; 18055us; 18056us; 18059us; 18061us; 18062us; 18066us; 18067us; 18071us; 18072us; 18076us; 18077us; 18081us; 18082us; 18114us; 18123us; 18127us; 18129us; 18130us; 18132us; 18133us; 18134us; 18176us; 18180us; 18181us; 18182us; 18183us; 18184us; 18185us; 18221us; 18223us; 18301us; 18302us; 18303us; 18340us; 18343us; 18422us; 18426us; 18427us; 18428us; 18430us; 18431us; 18432us; 18434us; 18435us; 18437us; 18438us; 18478us; 18479us; 18519us; 18521us; 18522us; 18524us; 18529us; 18531us; 18536us; 18570us; 18571us; 18573us; 18607us; 18608us; 18610us; 18644us; 18645us; 18647us; 18681us; 18682us; 18715us; 18723us; 18755us; 18762us; 18764us; 18766us; 18798us; 18805us; 18813us; 18845us; 18852us; 18854us; 18856us; 18888us; 18895us; 18897us; 18930us; 18931us; 18933us; 18934us; 18943us; 18975us; 18976us; 19008us; 19009us; 19041us; 19042us; 19051us; 19083us; 19084us; 19116us; 19117us; 19119us; 19120us; 19122us; 19124us; 19129us; 19133us; 19134us; 19144us; 19145us; 19147us; 19148us; 19149us; 19183us; 19187us; 19192us; 19193us; 19194us; 19227us; 19228us; 19230us; 19263us; 19264us; 19267us; 19268us; 19271us; 19272us; 19275us; 19276us; 19278us; 19279us; 19281us; 19314us; 19315us; 19317us; 19322us; 19355us; 19356us; 19357us; 19359us; 19363us; 19364us; 19398us; 19402us; 19407us; 19408us; 19410us; 19412us; 19413us; 19444us; 19446us; 19447us; 19448us; 19482us; 19488us; 19495us; 19496us; 19497us; 19499us; 19533us; 19567us; 19573us; 19574us; 19575us; 19576us; 19577us; 19578us; 19579us; 19580us; 19618us; 19619us; 19620us; 19624us; 19625us; 19626us; 19629us; 19633us; 19634us; 19642us; 19643us; 19644us; 19646us; 19647us; 19683us; 19685us; 19725us; 19726us; 19727us; 19728us; 19729us; 19738us; 19739us; 19740us; 19741us; 19742us; 19744us; 19777us; 19778us; 19779us; 19780us; 19789us; 19793us; 19794us; 19796us; 19797us; 19799us; 19800us; 19808us; 19814us; 19815us; 19817us; 19821us; 19822us; 19823us; 19830us; 19831us; 19832us; 19833us; 19834us; 19835us; 19843us; 19851us; 19859us; 19861us; 19862us; 19863us; 19865us; 19866us; 19945us; 19946us; 19947us; 19948us; 19957us; 19958us; 19959us; 19987us; 19991us; 19992us; 19996us; 19997us; 19998us; 20000us; 20006us; 20007us; 20009us; 20013us; 20014us; 20015us; 20016us; 20017us; 20018us; 20019us; 20020us; 20021us; 20022us; 20023us; 20024us; 20025us; 20026us; 20027us; 20028us; 20029us; 20030us; 20031us; 20032us; 20033us; 20034us; 20035us; 20036us; 20037us; 20039us; 20040us; 20042us; 20043us; 20044us; 20046us; 20047us; 20048us; 20049us; 20050us; 20052us; 20053us; 20058us; 20059us; 20060us; 20061us; 20062us; 20063us; 20064us; 20065us; 20066us; 20070us; 20071us; 20075us; 20076us; 20078us; 20080us; 20081us; 20082us; 20083us; 20084us; 20085us; 20086us; 20087us; 20088us; 20089us; 20090us; 20091us; 20092us; 20093us; 20094us; 20095us; 20096us; 20097us; 20098us; 20099us; 20100us; 20101us; 20102us; 20103us; 20104us; 20105us; 20106us; 20107us; 20108us; 20110us; 20111us; 20112us; 20190us; 20193us; 20194us; 20195us; 20273us; 20276us; 20277us; 20278us; 20279us; 20280us; 20281us; 20282us; 20286us; 20290us; 20291us; 20292us; 20293us; 20297us; 20301us; 20302us; 20303us; 20304us; 20308us; 20309us; 20310us; 20311us; 20312us; 20316us; 20317us; 20318us; 20319us; 20323us; 20324us; 20325us; 20326us; 20327us; 20328us; 20329us; 20330us; 20331us; 20332us; 20333us; 20334us; 20335us; 20336us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 1us; 2us; 3us; 2us; 5us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 5us; 3us; 1us; 12us; 0us; 2us; 5us; 3us; 5us; 3us; 3us; 0us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 3us; 1us; 4us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 1us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 7us; 3us; 3us; 3us; 2us; 1us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 3us; 5us; 5us; 5us; 5us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 5us; 1us; 3us; 3us; 0us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 3us; 3us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 4us; 3us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 6us; 7us; 0us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 2us; 2us; 8us; 8us; 7us; 5us; 3us; 4us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 6us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 1us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 2us; 3us; 3us; 2us; 5us; 1us; 1us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 1us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 2us; 1us; 3us; 3us; 3us; 2us; 2us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 1us; 1us; 1us; 2us; 1us; 1us; 3us; 3us; 6us; 6us; 5us; 4us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 2us; 3us; 1us; 2us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 33us; 34us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 37us; 37us; 38us; 39us; 39us; 39us; 39us; 39us; 39us; 39us; 40us; 40us; 40us; 40us; 41us; 41us; 42us; 42us; 42us; 43us; 44us; 44us; 45us; 45us; 45us; 46us; 46us; 47us; 47us; 48us; 49us; 49us; 50us; 50us; 50us; 50us; 51us; 51us; 52us; 52us; 52us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 55us; 55us; 55us; 55us; 55us; 55us; 55us; 55us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 69us; 69us; 70us; 70us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 75us; 76us; 76us; 76us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 84us; 85us; 86us; 86us; 87us; 87us; 87us; 87us; 87us; 88us; 88us; 89us; 89us; 89us; 90us; 90us; 91us; 91us; 91us; 92us; 92us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 101us; 102us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 106us; 106us; 106us; 107us; 107us; 108us; 108us; 108us; 109us; 109us; 110us; 110us; 111us; 112us; 113us; 113us; 113us; 114us; 115us; 115us; 116us; 116us; 117us; 117us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 119us; 119us; 120us; 120us; 120us; 121us; 122us; 122us; 123us; 123us; 123us; 123us; 123us; 124us; 124us; 124us; 125us; 125us; 125us; 126us; 126us; 127us; 127us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 132us; 133us; 134us; 135us; 135us; 135us; 136us; 136us; 137us; 137us; 138us; 139us; 140us; 141us; 141us; 141us; 141us; 142us; 142us; 143us; 144us; 144us; 144us; 145us; 145us; 146us; 146us; 147us; 147us; 147us; 147us; 147us; 148us; 148us; 149us; 150us; 150us; 151us; 151us; 152us; 152us; 152us; 153us; 153us; 153us; 154us; 155us; 155us; 156us; 157us; 157us; 158us; 158us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 159us; 160us; 160us; 160us; 160us; 161us; 161us; 162us; 162us; 163us; 163us; 164us; 165us; 165us; 165us; 165us; 166us; 166us; 167us; 167us; 167us; 167us; 167us; 168us; 168us; 168us; 168us; 168us; 168us; 169us; 169us; 170us; 170us; 171us; 171us; 172us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 173us; 174us; 174us; 175us; 175us; 175us; 175us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 176us; 177us; 177us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 179us; 179us; 180us; 180us; 181us; 181us; 182us; 183us; 183us; 183us; 184us; 184us; 184us; 185us; 185us; 186us; 186us; 187us; 187us; 188us; 189us; 189us; 189us; 189us; 189us; 189us; 190us; 190us; 191us; 191us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 193us; 194us; 194us; 194us; 195us; 195us; 195us; 195us; 196us; 197us; 197us; 197us; 197us; 197us; 197us; 198us; 198us; 199us; 200us; 201us; 201us; 201us; 202us; 202us; 202us; 202us; 202us; 202us; 203us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 206us; 206us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 207us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 210us; 210us; 210us; 210us; 211us; 211us; 211us; 211us; 212us; 212us; 212us; 212us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 214us; 214us; 214us; 215us; 215us; 216us; 216us; 217us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 219us; 219us; 220us; 220us; 221us; 222us; 223us; 223us; 223us; 224us; 225us; 225us; 226us; 227us; 227us; 228us; 228us; 229us; 229us; 230us; 230us; 230us; 231us; 231us; 232us; 232us; 232us; 232us; 232us; 232us; 232us; 233us; 233us; 234us; 234us; 234us; 234us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 237us; 237us; 238us; 238us; 238us; 239us; 239us; 239us; 240us; 240us; 241us; 241us; 241us; 242us; 243us; 243us; 243us; 244us; 245us; 245us; 246us; 246us; 246us; 246us; 246us; 247us; 247us; 247us; 247us; 247us; 247us; 247us; 247us; 248us; 248us; 249us; 249us; 250us; 250us; 251us; 251us; 252us; 252us; 253us; 253us; 254us; 254us; 255us; 255us; 255us; 255us; 255us; 255us; 256us; 256us; 257us; 258us; 258us; 258us; 258us; 259us; 259us; 259us; 260us; 260us; 261us; 261us; 262us; 262us; 262us; 262us; 262us; 262us; 262us; 263us; 263us; 263us; 263us; 264us; 265us; 265us; 265us; 266us; 266us; 267us; 267us; 268us; 268us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 270us; 270us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 272us; 272us; 272us; 273us; 273us; 274us; 275us; 275us; 276us; 276us; 276us; 277us; 277us; 277us; 278us; 278us; 279us; 279us; 279us; 279us; 280us; 280us; 281us; 282us; 283us; 283us; 283us; 283us; 284us; 284us; 284us; 284us; 284us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 285us; 286us; 287us; 287us; 288us; 288us; 289us; 289us; 289us; 289us; 290us; 291us; 291us; 292us; 292us; 292us; 293us; 293us; 294us; 294us; 295us; 295us; 295us; 295us; 296us; 296us; 296us; 297us; 297us; 297us; 297us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 302us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 313us; 314us; 314us; 315us; 315us; 315us; 316us; 316us; 316us; 317us; 317us; 317us; 318us; 318us; 319us; 319us; 319us; 320us; 320us; 320us; 321us; 321us; 321us; 322us; 323us; 323us; 323us; 324us; 324us; 324us; 325us; 325us; 325us; 325us; 325us; 326us; 326us; 326us; 326us; 326us; 326us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16420us; 65535us; 16421us; 65535us; 65535us; 16423us; 65535us; 65535us; 65535us; 16424us; 16425us; 16426us; 65535us; 65535us; 65535us; 16427us; 16428us; 65535us; 16429us; 16430us; 65535us; 65535us; 65535us; 16433us; 65535us; 65535us; 16434us; 16436us; 16437us; 65535us; 65535us; 65535us; 65535us; 16438us; 16439us; 65535us; 65535us; 16440us; 16441us; 16442us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16443us; 65535us; 65535us; 65535us; 65535us; 65535us; 16446us; 65535us; 65535us; 16447us; 65535us; 65535us; 65535us; 16448us; 65535us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 65535us; 65535us; 65535us; 65535us; 16530us; 65535us; 65535us; 65535us; 16532us; 16533us; 65535us; 16534us; 16535us; 16536us; 16537us; 65535us; 65535us; 65535us; 16539us; 16540us; 16541us; 65535us; 65535us; 16542us; 16543us; 65535us; 16546us; 65535us; 65535us; 65535us; 65535us; 16547us; 65535us; 65535us; 16548us; 16549us; 16550us; 16551us; 65535us; 16552us; 65535us; 65535us; 16553us; 65535us; 65535us; 65535us; 16554us; 65535us; 65535us; 65535us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 65535us; 16559us; 65535us; 16560us; 16561us; 16562us; 16563us; 65535us; 65535us; 16564us; 65535us; 65535us; 16565us; 65535us; 65535us; 16568us; 16569us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16570us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16571us; 16572us; 65535us; 16573us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 65535us; 16578us; 16579us; 65535us; 16580us; 65535us; 65535us; 16581us; 16582us; 65535us; 65535us; 16583us; 16584us; 16585us; 16586us; 65535us; 16587us; 65535us; 65535us; 16589us; 65535us; 16590us; 65535us; 65535us; 16591us; 16592us; 65535us; 65535us; 16594us; 65535us; 65535us; 65535us; 65535us; 65535us; 16595us; 65535us; 65535us; 65535us; 65535us; 16596us; 16597us; 65535us; 16599us; 65535us; 65535us; 65535us; 65535us; 16600us; 16601us; 65535us; 65535us; 16602us; 65535us; 65535us; 16603us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16604us; 16605us; 65535us; 16606us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 16610us; 65535us; 65535us; 65535us; 65535us; 65535us; 16611us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16612us; 65535us; 16614us; 65535us; 65535us; 16615us; 65535us; 65535us; 16616us; 16617us; 65535us; 65535us; 65535us; 16618us; 16619us; 16621us; 16622us; 16623us; 16624us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16630us; 65535us; 65535us; 16632us; 65535us; 65535us; 16633us; 16634us; 16635us; 65535us; 16637us; 16638us; 65535us; 16640us; 16641us; 65535us; 65535us; 16642us; 16643us; 16644us; 65535us; 65535us; 16645us; 65535us; 65535us; 65535us; 65535us; 16647us; 65535us; 16648us; 16649us; 65535us; 65535us; 16650us; 16651us; 16652us; 65535us; 65535us; 65535us; 65535us; 65535us; 16653us; 16654us; 16655us; 16656us; 65535us; 65535us; 65535us; 65535us; 16657us; 65535us; 65535us; 16658us; 16659us; 65535us; 16660us; 65535us; 16661us; 16662us; 65535us; 65535us; 16663us; 16664us; 65535us; 16665us; 16666us; 16667us; 16668us; 16669us; 16670us; 65535us; 65535us; 65535us; 65535us; 16673us; 16674us; 65535us; 65535us; 16675us; 65535us; 65535us; 65535us; 65535us; 16676us; 16677us; 65535us; 16678us; 65535us; 65535us; 65535us; 16679us; 16680us; 65535us; 65535us; 65535us; 65535us; 16683us; 16684us; 65535us; 65535us; 65535us; 65535us; 65535us; 16688us; 16689us; 65535us; 65535us; 65535us; 16690us; 65535us; 65535us; 16691us; 65535us; 16692us; 65535us; 16693us; 16694us; 65535us; 65535us; 16695us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16696us; 65535us; 16697us; 16698us; 65535us; 65535us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 16705us; 65535us; 65535us; 16706us; 65535us; 65535us; 65535us; 65535us; 16709us; 16710us; 65535us; 16711us; 65535us; 16712us; 16713us; 65535us; 65535us; 16714us; 65535us; 65535us; 16715us; 65535us; 16716us; 65535us; 65535us; 65535us; 16718us; 65535us; 16719us; 65535us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 16725us; 16726us; 65535us; 65535us; 16727us; 16728us; 65535us; 16729us; 65535us; 65535us; 65535us; 65535us; 16730us; 65535us; 16731us; 65535us; 65535us; 65535us; 65535us; 16732us; 65535us; 65535us; 16734us; 16735us; 65535us; 65535us; 65535us; 65535us; 16738us; 16739us; 65535us; 16740us; 65535us; 65535us; 65535us; 16741us; 65535us; 65535us; 16742us; 16743us; 16744us; 16745us; 16746us; 16747us; 16748us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16749us; 65535us; 65535us; 65535us; 16753us; 65535us; 16754us; 65535us; 65535us; 16756us; 65535us; 65535us; 65535us; 65535us; 16758us; 16759us; 16760us; 65535us; 65535us; 16761us; 65535us; 65535us; 16764us; 65535us; 65535us; 16765us; 65535us; 16767us; 16768us; 65535us; 65535us; 65535us; 65535us; 65535us; 16769us; 16770us; 16771us; 65535us; 65535us; 16772us; 16773us; 16774us; 65535us; 65535us; 16776us; 65535us; 65535us; 65535us; 16778us; 65535us; 16779us; 16780us; 65535us; 65535us; 16781us; 16782us; 16783us; 16784us; 16785us; 16786us; 16787us; 16788us; 16789us; 16790us; 16791us; 16792us; 16793us; 16794us; 16795us; 65535us; 16796us; 16797us; 16798us; 16799us; 16800us; 65535us; 65535us; 16801us; 65535us; 65535us; 65535us; 16802us; 16805us; 65535us; 65535us; 16806us; 16807us; 65535us; 16808us; 65535us; 65535us; 16810us; 65535us; 16812us; 65535us; 16813us; 65535us; 65535us; 65535us; 16814us; 65535us; 65535us; 16817us; 65535us; 65535us; 16818us; 16819us; 16820us; 65535us; 16821us; 16822us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16823us; 65535us; 65535us; 65535us; 65535us; 16828us; 65535us; 65535us; 65535us; 65535us; 65535us; 16833us; 65535us; 16834us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16837us; 65535us; 16838us; 65535us; 16839us; 16840us; 65535us; 16841us; 65535us; 16842us; 65535us; 16843us; 16844us; 65535us; 65535us; 16845us; 16846us; 65535us; 16847us; 65535us; 16848us; 65535us; 16849us; 16851us; 65535us; 16852us; 65535us; 65535us; 16853us; 65535us; 65535us; 16854us; 65535us; 65535us; 16855us; 65535us; 65535us; 16857us; 16858us; 16859us; 16860us; 16861us; 16862us; 65535us; 65535us; 16863us; 16864us; 65535us; 65535us; 16866us; 65535us; 65535us; 65535us; 16867us; 16868us; 65535us; 16869us; 16870us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16873us; 65535us; 65535us; 65535us; 65535us; 16877us; 65535us; 65535us; 16880us; 65535us; 65535us; 65535us; 65535us; 65535us; 16885us; 65535us; 16886us; 65535us; 65535us; 16889us; 65535us; 16890us; 65535us; 65535us; 16891us; 16892us; 16893us; 65535us; 65535us; 16894us; 65535us; 65535us; 16896us; 65535us; 65535us; 16898us; 65535us; 16900us; 65535us; 65535us; 16901us; 65535us; 16904us; 65535us; 65535us; 65535us; 16905us; 65535us; 16907us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16908us; 65535us; 65535us; 65535us; 65535us; 16909us; 65535us; 65535us; 65535us; 65535us; 65535us; 16910us; 65535us; 65535us; 16912us; 16913us; 65535us; 16914us; 16915us; 65535us; 16916us; 16917us; 16918us; 16919us; 16920us; 65535us; 65535us; 16921us; 16922us; 65535us; 65535us; 16923us; 16924us; 65535us; 65535us; 16925us; 16926us; 65535us; 16927us; 65535us; 65535us; 16928us; 16929us; 16930us; 65535us; 65535us; 65535us; 65535us; 65535us; 16934us; 65535us; 16935us; 65535us; 65535us; 65535us; 65535us; 16937us; 16938us; 65535us; 16939us; 16940us; 16941us; 16942us; 65535us; 65535us; 65535us; 65535us; 16943us; 16944us; 16945us; 16946us; 16947us; 65535us; 65535us; 65535us; 16948us; 16949us; 16950us; 16951us; 16952us; 65535us; 65535us; 16953us; 16954us; 16955us; 65535us; 65535us; 65535us; 65535us; 65535us; 16959us; 16960us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16961us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16962us; 16963us; 65535us; 65535us; 65535us; 65535us; 16964us; 65535us; 65535us; 16965us; 65535us; 16966us; 65535us; 65535us; 65535us; 16968us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16969us; 65535us; 16970us; 65535us; 16971us; 65535us; 65535us; 65535us; 16973us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16986us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16996us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 17003us; 17004us; 17005us; 17006us; 17007us; 17008us; 17009us; 17010us; 17011us; 17012us; 17013us; 17014us; 17015us; 65535us; 65535us; 65535us; 65535us; 17019us; 65535us; 65535us; 65535us; 65535us; 65535us; 17022us; 65535us; 65535us; 17023us; 65535us; 17024us; 65535us; 65535us; 17025us; 17026us; 17027us; 65535us; 17028us; 17029us; 17030us; 17031us; 65535us; 65535us; 65535us; 17033us; 65535us; 65535us; 17034us; 17035us; 17036us; 65535us; 65535us; 17040us; 65535us; 17041us; 65535us; 65535us; 65535us; 65535us; 17043us; 17044us; 65535us; 65535us; 65535us; 65535us; 17047us; 17048us; 65535us; 17049us; 17050us; 65535us; 17052us; 65535us; 17053us; 65535us; 65535us; 17055us; 65535us; 65535us; 17056us; 65535us; 65535us; 17057us; 65535us; 65535us; 17058us; 65535us; 65535us; 17059us; 65535us; 65535us; 17060us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17061us; 17063us; 17064us; 65535us; 17065us; 65535us; 17066us; 65535us; 65535us; 65535us; 17068us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17074us; 65535us; 65535us; 65535us; 17076us; 65535us; 65535us; 17077us; 65535us; 65535us; 17078us; 65535us; 17079us; 17080us; 17081us; 65535us; 65535us; 17082us; 17083us; 17084us; 17085us; 65535us; 65535us; 17086us; 17087us; 17088us; 17089us; 17090us; 17092us; 65535us; 65535us; 65535us; 65535us; 17093us; 65535us; 17094us; 65535us; 65535us; 17095us; 17096us; 17097us; 17098us; 17099us; 17100us; 17101us; 17102us; 17103us; 17104us; 17105us; 17106us; 17107us; 17108us; 17109us; 65535us; 65535us; 17110us; 17111us; 65535us; 17112us; 17113us; 65535us; 65535us; 65535us; 17114us; 17115us; 17116us; 17117us; 65535us; 65535us; 17118us; 17119us; 17120us; 17121us; 65535us; 65535us; 65535us; 17122us; 65535us; 17123us; 17124us; 17125us; 65535us; 17126us; 17127us; 17128us; 17129us; 17130us; 65535us; 65535us; 65535us; 65535us; 65535us; 17131us; 17132us; 17133us; 17134us; 65535us; 65535us; 17135us; 65535us; 17136us; 65535us; 65535us; 17138us; 17139us; 17140us; 17141us; 17142us; 17143us; 17144us; 17145us; 17146us; 17148us; 17150us; 65535us; 17151us; 65535us; 17153us; 17154us; 65535us; 65535us; 17156us; 17157us; 65535us; 65535us; 65535us; 65535us; 65535us; 17158us; 17159us; 17162us; 65535us; 65535us; 65535us; 17164us; 65535us; 17166us; 65535us; 17167us; 65535us; 65535us; 65535us; 65535us; 65535us; 17168us; 17169us; 65535us; 65535us; 65535us; 17170us; 65535us; 65535us; 65535us; 65535us; 17173us; 65535us; 65535us; 65535us; 17174us; 65535us; 65535us; 17175us; 65535us; 65535us; 65535us; 17176us; 17177us; 65535us; 65535us; 65535us; 17181us; 17182us; 65535us; 17184us; 17185us; 65535us; 65535us; 17187us; 17189us; 17191us; 65535us; 65535us; 65535us; 17192us; 65535us; 17193us; 17195us; 17198us; 65535us; 17200us; 65535us; 65535us; 17201us; 65535us; 17202us; 65535us; 17203us; 65535us; 17205us; 65535us; 17206us; 65535us; 65535us; 65535us; 65535us; 17207us; 65535us; 17208us; 17209us; 65535us; 65535us; 17210us; 17211us; 17212us; 17213us; 17214us; 65535us; 65535us; 65535us; 17215us; 17216us; 65535us; 65535us; 65535us; 65535us; 17217us; 17218us; 65535us; 17219us; 17220us; 65535us; 17221us; 65535us; 17222us; 65535us; 17223us; 65535us; 65535us; 17224us; 65535us; 65535us; 65535us; 65535us; 65535us; 17230us; 65535us; 65535us; 17231us; 65535us; 65535us; 17233us; 65535us; 65535us; 17235us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17243us; 65535us; 17245us; 65535us; 65535us; 17246us; 65535us; 17247us; 65535us; 17248us; 65535us; 65535us; 17250us; 65535us; 17251us; 65535us; 17254us; 65535us; 65535us; 65535us; 65535us; 17255us; 65535us; 17257us; 65535us; 17258us; 17259us; 65535us; 65535us; 65535us; 17260us; 17261us; 65535us; 17262us; 65535us; 65535us; 17263us; 65535us; 17264us; 65535us; 17265us; 65535us; 17266us; 65535us; 17267us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17269us; 17270us; 65535us; 65535us; 17273us; 65535us; 65535us; 65535us; 17274us; 65535us; 65535us; 17277us; 65535us; 65535us; 17279us; 17280us; 65535us; 65535us; 65535us; 17281us; 17282us; 65535us; 65535us; 65535us; 65535us; 17283us; 17284us; 17285us; 17286us; 17287us; 17288us; 17289us; 65535us; 17291us; 17292us; 65535us; 17293us; 17294us; 65535us; 65535us; 17296us; 65535us; 17297us; 17298us; 65535us; 17299us; 65535us; 65535us; 65535us; 65535us; 17300us; 17301us; 17302us; 65535us; 17303us; 17304us; 17305us; 17306us; 65535us; 65535us; 17308us; 17310us; 17311us; 65535us; 65535us; 17313us; 65535us; 17314us; 65535us; 17316us; 65535us; 65535us; 17317us; 65535us; 65535us; 17319us; 17320us; 65535us; 17322us; 17323us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17327us; 17328us; 65535us; 17329us; 65535us; 17330us; 17331us; 17332us; 65535us; 17333us; 17334us; 65535us; 65535us; 17335us; 65535us; 17336us; 17337us; 65535us; 65535us; 17338us; 65535us; 65535us; 17339us; 17340us; 17341us; 17342us; 17343us; 17344us; 17345us; 17346us; 17347us; 17348us; 17349us; 17350us; 17351us; 17352us; 17353us; 17354us; 17355us; 17356us; 17357us; 17358us; 17359us; 17360us; 17361us; 17362us; 65535us; 17364us; 65535us; 17365us; 17366us; 65535us; 17367us; 17368us; 17369us; 17370us; 65535us; 17372us; 65535us; 17373us; 17374us; 17375us; 17376us; 17377us; 17378us; 17379us; 17380us; 65535us; 17382us; 65535us; 17383us; 65535us; 65535us; 17387us; 17388us; 17389us; 17390us; 17391us; 17392us; 17393us; 17394us; 17396us; 17398us; 17400us; 17402us; 17404us; 17406us; 17410us; 17412us; 17414us; 17415us; 17416us; 17417us; 17418us; 17419us; 17420us; 17421us; 17422us; 17423us; 17424us; 17425us; 65535us; 17427us; 17428us; 65535us; 65535us; 17429us; 17430us; 65535us; 65535us; 17431us; 17432us; 17433us; 17434us; 17435us; 17437us; 65535us; 65535us; 17439us; 17440us; 17441us; 65535us; 65535us; 17442us; 17443us; 17444us; 65535us; 17445us; 17446us; 17447us; 17448us; 65535us; 17449us; 17450us; 17451us; 65535us; 17452us; 17453us; 17454us; 17455us; 17456us; 17457us; 17458us; 17459us; 17460us; 17461us; 17462us; 17463us; 17464us; 17465us; |]
let _fsyacc_reductions ()  =    [| 
//# 2863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
//# 2872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
//# 2881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParsedScriptInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
//# 2890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSequentialExprEOF));
//# 2899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
//# 2908 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 540 "src/fsharp/pars.fsy"
                            ParsedScriptInteraction.Definitions (_1, lhs parseState) 
                   )
//# 540 "src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 543 "src/fsharp/pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(), rhs parseState 1))
                            ParsedScriptInteraction.Definitions ([], lhs parseState) 
                   )
//# 543 "src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 547 "src/fsharp/pars.fsy"
                            ParsedScriptInteraction.Definitions ([], lhs parseState) 
                   )
//# 547 "src/fsharp/pars.fsy"
                 : ParsedScriptInteraction));
//# 2940 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 551 "src/fsharp/pars.fsy"
                                              
                   )
//# 551 "src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 552 "src/fsharp/pars.fsy"
                                   checkEndOfFileError _1 
                   )
//# 552 "src/fsharp/pars.fsy"
                 : 'interactiveTerminator));
//# 2961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 566 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 566 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 569 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 569 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 572 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 572 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 2996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 575 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 575 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 578 "src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 578 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 581 "src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 581 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 584 "src/fsharp/pars.fsy"
                            _1 @ _3 
                   )
//# 584 "src/fsharp/pars.fsy"
                 : 'interactiveItemsTerminator));
//# 3047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 590 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 590 "src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 593 "src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 593 "src/fsharp/pars.fsy"
                 : 'interactiveDefns));
//# 3070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 599 "src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
//# 599 "src/fsharp/pars.fsy"
                 : 'interactiveExpr));
//# 3087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 609 "src/fsharp/pars.fsy"
                             [SynModuleDecl.HashDirective(_1, rhs parseState 1)] 
                   )
//# 609 "src/fsharp/pars.fsy"
                 : 'interactiveHash));
//# 3098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 614 "src/fsharp/pars.fsy"
                                                
                   )
//# 614 "src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3109 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 616 "src/fsharp/pars.fsy"
                                                                      
                   )
//# 616 "src/fsharp/pars.fsy"
                 : 'interactiveSeparators));
//# 3121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 620 "src/fsharp/pars.fsy"
                                     
                   )
//# 620 "src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 621 "src/fsharp/pars.fsy"
                                     
                   )
//# 621 "src/fsharp/pars.fsy"
                 : 'interactiveSeparator));
//# 3141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 630 "src/fsharp/pars.fsy"
                            let m = match _3 with [] -> rhs2  parseState 1 2 | _ -> rhs2  parseState 1 3
                            ParsedHashDirective (_2, _3, m) 
                   )
//# 630 "src/fsharp/pars.fsy"
                 : 'hashDirective));
//# 3154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 637 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 637 "src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 640 "src/fsharp/pars.fsy"
                            _1 @ [_2] 
                   )
//# 640 "src/fsharp/pars.fsy"
                 : 'hashDirectiveArgs));
//# 3176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 646 "src/fsharp/pars.fsy"
                             let s, kind = _1
                             ParsedHashDirectiveArgument.String (s, kind, lhs parseState) 
                   )
//# 646 "src/fsharp/pars.fsy"
                 : 'hashDirectiveArg));
//# 3188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sourceIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 649 "src/fsharp/pars.fsy"
                             let c,v = _1
                             ParsedHashDirectiveArgument.SourceIdentifier (c, v, lhs parseState) 
                   )
//# 649 "src/fsharp/pars.fsy"
                 : 'hashDirectiveArg));
//# 3200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 659 "src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 659 "src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 662 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 662 "src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 668 "src/fsharp/pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedSigFile ([], [emptySigFileFrag]) 
                   )
//# 668 "src/fsharp/pars.fsy"
                 : ParsedSigFile));
//# 3236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 676 "src/fsharp/pars.fsy"
                             if not (isNil _2) then
                                 parseState.LexBuffer.CheckLanguageFeatureErrorRecover LanguageFeature.AttributesToRightOfModuleKeyword <| rhs parseState 4
                             _4, _5.Lid, _3, _2 
                   )
//# 676 "src/fsharp/pars.fsy"
                 : 'moduleIntro));
//# 3253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 684 "src/fsharp/pars.fsy"
                             _2, _3.Lid, grabXmlDoc(parseState, [], 1)  
                   )
//# 684 "src/fsharp/pars.fsy"
                 : 'namespaceIntro));
//# 3265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 690 "src/fsharp/pars.fsy"
                             ParsedSigFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 690 "src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 693 "src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedSigFile (decls, _2) 
                   )
//# 693 "src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecs));
//# 3301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 711 "src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 711 "src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 714 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 714 "src/fsharp/pars.fsy"
                 : 'fileNamespaceSpecList));
//# 3324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 718 "src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 718 "src/fsharp/pars.fsy"
                 : 'fileNamespaceSpec));
//# 3337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 724 "src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let mDeclsAndAttrs = (List.map (fun (a: SynAttributeList) -> a.Range) _1) @ (List.map (fun (d: SynModuleSigDecl) -> d.Range) _4)
                           let m = (m2, mDeclsAndAttrs) ||> unionRangeWithListBy id
                           let isRec, path2, vis, attribs2 = _3
                           let xmlDoc = grabXmlDoc(parseState, _1, 1)
                           (fun (isRec2, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid, (isRec || isRec2), SynModuleOrNamespaceKind.NamedModule, _4, xmlDoc, _1 @ attribs2, vis, m)))  
                   )
//# 724 "src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 736 "src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ ->
                                 let lastDeclRange = List.tryLast _1 |> Option.map (fun decl -> decl.Range) |> Option.defaultValue (rhs parseState 1)
                                 let m = mkRange lastDeclRange.FileName (lhs parseState).Start lastDeclRange.End
                                 ParsedSigFileFragment.NamespaceFragment(path, isRec, SynModuleOrNamespaceKind.DeclaredNamespace, _1, xml, [], m))  
                   )
//# 736 "src/fsharp/pars.fsy"
                 : 'fileModuleSpec));
//# 3378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 748 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 748 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3389 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 751 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 751 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 754 "src/fsharp/pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                              _2 
                            
                   )
//# 754 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 760 "src/fsharp/pars.fsy"
                              [] 
                   )
//# 760 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
//# 3428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 765 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 765 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 768 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 768 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 771 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 771 "src/fsharp/pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
//# 3459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 776 "src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 776 "src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 779 "src/fsharp/pars.fsy"
                            (* silent recovery *) _3 
                   )
//# 779 "src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 782 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 782 "src/fsharp/pars.fsy"
                 : 'moduleSpfns));
//# 3496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 787 "src/fsharp/pars.fsy"
                             SynModuleSigDecl.HashDirective (_1, rhs2 parseState 1 1)  
                   )
//# 787 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 790 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 790 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 793 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let isRec, path, vis, attribs2 = _3
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                             if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             if not (isNil attribs2) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             match vis with
                             | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                             | _ -> SynModuleSigDecl.ModuleAbbrev(List.head path, _5, rhs2 parseState 1 5) 
                   )
//# 793 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 804 "src/fsharp/pars.fsy"
                             let isRec, path, vis, attribs2 = _3
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName())
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             let info = SynComponentInfo(_1 @ attribs2, None, [], path, xmlDoc, false, vis, rhs parseState 3)
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let m = (rhs2 parseState 1 4, _5) ||> unionRangeWithListBy (fun (d: SynModuleSigDecl) -> d.Range)
                             SynModuleSigDecl.NestedModule(info, isRec, _4, _5, m) 
                   )
//# 804 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3563 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 814 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                             let (SynTypeDefnSig (SynComponentInfo (cas, a, cs, b, _xmlDoc, d, d2, d3), equalsRange, typeRepr, members, range)) = _4
                             _xmlDoc.MarkAsInvalid()
                             let attrs = _1 @ cas
                             let mTc =
                                 let keywordM = rhs parseState 3
                                 (keywordM, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range) |> unionRanges range
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             let tc = (SynTypeDefnSig(SynComponentInfo(attrs, a, cs, b, xmlDoc, d, d2, d3), equalsRange, typeRepr, members, mTc))
                             let m = (mTc, _5) ||> unionRangeWithListBy (fun (a: SynTypeDefnSig) -> a.Range)
                             SynModuleSigDecl.Types (tc :: _5, m) 
                   )
//# 814 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3588 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 827 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionSig(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             let ec = SynExceptionSig(SynExceptionDefnRepr(_1@cas, a, b, xmlDoc, d, d2), e, f)
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
//# 827 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3605 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 834 "src/fsharp/pars.fsy"
                             SynModuleSigDecl.Open(_1, (rhs parseState 1)) 
                   )
//# 834 "src/fsharp/pars.fsy"
                 : 'moduleSpfn));
//# 3616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 838 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attr1, attr2, isInline, isMutable, vis2, id, doc, explicitValTyparDecls, (ty, arity), konst = (_1), (_4), (_5), (_6), (_7), (_8), grabXmlDoc(parseState, _1, 1), (_9), (_11), (_12)
                             if not (isNil attr2) then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(), rhs parseState 4))
                             let m = rhs2 parseState 1 11 
                             let valSpfn = SynValSig((attr1@attr2), id, explicitValTyparDecls, ty, arity, isInline, isMutable, doc, vis2, konst, m) 
                             SynModuleSigDecl.Val(valSpfn, m)
                           
                   )
//# 838 "src/fsharp/pars.fsy"
                 : 'valSpfn));
//# 3642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 849 "src/fsharp/pars.fsy"
                             None 
                   )
//# 849 "src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 852 "src/fsharp/pars.fsy"
                             Some(_2) 
                   )
//# 852 "src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 855 "src/fsharp/pars.fsy"
                             Some(_3) 
                   )
//# 855 "src/fsharp/pars.fsy"
                 : 'optLiteralValueSpfn));
//# 3676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 863 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 863 "src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 867 "src/fsharp/pars.fsy"
                             _3 
                   )
//# 867 "src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 871 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 871 "src/fsharp/pars.fsy"
                 : 'moduleSpecBlock));
//# 3713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 876 "src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc(parseState, [], 1)
                            let tyconSpfn =
                                if xmlDoc.IsEmpty then _2 else
                                let (SynTypeDefnSig(SynComponentInfo (a, typars, c, lid, _xmlDoc, fixity, vis, rangeOfLid), equalsRange, typeRepr, members, range)) = _2
                                _xmlDoc.MarkAsInvalid()
                                SynTypeDefnSig(SynComponentInfo (a, typars, c, lid, xmlDoc, fixity, vis, rangeOfLid), equalsRange, typeRepr, members, range)
                            tyconSpfn :: _3 
                   )
//# 876 "src/fsharp/pars.fsy"
                 : SynTypeDefnSig list));
//# 3731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 885 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 885 "src/fsharp/pars.fsy"
                 : SynTypeDefnSig list));
//# 3741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 891 "src/fsharp/pars.fsy"
                             let lhsm = rhs parseState 1 
                             let mEquals = rhs parseState 2
                             _3 lhsm _1 (Some mEquals) 
                   )
//# 891 "src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 895 "src/fsharp/pars.fsy"
                             SynTypeDefnSig(_1, None, SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState), lhs parseState), _2, lhs parseState) 
                   )
//# 895 "src/fsharp/pars.fsy"
                 : 'tyconSpfn));
//# 3767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 909 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo mEquals -> 
                                _2 lhsm nameInfo mEquals (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 909 "src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 914 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo mEquals -> 
                                _1 lhsm nameInfo mEquals _2) 
                   )
//# 914 "src/fsharp/pars.fsy"
                 : 'tyconSpfnRhsBlock));
//# 3799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 922 "src/fsharp/pars.fsy"
                            (fun lhsm nameInfo mEquals augmentation -> 
                                let declRange = unionRanges lhsm _1.Range
                                let mWhole = (declRange, augmentation) ||> unionRangeWithListBy (fun (mem: SynMemberSig) -> mem.Range)
                                SynTypeDefnSig(nameInfo, mEquals, SynTypeDefnSigRepr.Simple (_1, _1.Range), augmentation, mWhole)) 
                   )
//# 922 "src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 928 "src/fsharp/pars.fsy"
                            let objectModelRange = lhs parseState 
                            let needsCheck, (kind, decls) = _1
                            (fun nameRange nameInfo mEquals augmentation -> 
                                if needsCheck && isNil decls then
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                
                                let declRange = unionRanges nameRange objectModelRange
                                let mWhole = (declRange, augmentation) ||> unionRangeWithListBy (fun (mem: SynMemberSig) -> mem.Range)
                                SynTypeDefnSig(nameInfo, mEquals, SynTypeDefnSigRepr.ObjectModel (kind, decls, objectModelRange), augmentation, mWhole)) 
                   )
//# 928 "src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 939 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            let invoke = SynMemberSig.Member(SynValSig([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m), AbstractMemberFlags SynMemberKind.Member, m) 
                            (fun nameRange nameInfo mEquals augmentation -> 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                let mWhole = unionRanges nameRange m
                                SynTypeDefnSig(nameInfo, mEquals, SynTypeDefnSigRepr.ObjectModel (SynTypeDefnKind.Delegate (ty, arity), [invoke], m), [], mWhole)) 
                   )
//# 939 "src/fsharp/pars.fsy"
                 : 'tyconSpfnRhs));
//# 3849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 951 "src/fsharp/pars.fsy"
                            let needsCheck, decls = _1 
                            needsCheck, (SynTypeDefnKind.Unspecified, decls) 
                   )
//# 951 "src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3861 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 955 "src/fsharp/pars.fsy"
                            false, (_1, _2) 
                   )
//# 955 "src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 958 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            false, (_1, _2) 
                   )
//# 958 "src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 962 "src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []) 
                   )
//# 962 "src/fsharp/pars.fsy"
                 : 'tyconClassSpfn));
//# 3899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 969 "src/fsharp/pars.fsy"
                            true, _2 
                   )
//# 969 "src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 972 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                            false, _2 
                   )
//# 972 "src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 977 "src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 977 "src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 980 "src/fsharp/pars.fsy"
                            false, _2 
                   )
//# 980 "src/fsharp/pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
//# 3947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 986 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 986 "src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 989 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                             _2 
                   )
//# 989 "src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 992 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 992 "src/fsharp/pars.fsy"
                 : 'classSpfnBlock));
//# 3983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 997 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 997 "src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 3994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1000 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1000 "src/fsharp/pars.fsy"
                 : 'classSpfnMembers));
//# 4004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1006 "src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 1006 "src/fsharp/pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
//# 4017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1012 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isInline, doc, vis2, id, explicitValTyparDecls, (ty, arity), optLiteralValue = _4, grabXmlDoc(parseState, _1, 1), _5, _6, _7, _9, _11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), SynMemberKind.Member -> SynMemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                                |> fun m -> (m, _1) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                            let valSpfn = SynValSig(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, vis2, optLiteralValue, wholeRange)
                            let _, flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity), wholeRange) 
                   )
//# 1012 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1027 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Interface (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1027 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1031 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Inherit (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
//# 1031 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1035 "src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 4
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let fld = _4 _1 false wholeRange
                            SynMemberSig.ValField (fld, wholeRange) 
                   )
//# 1035 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1041 "src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 5
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            SynMemberSig.ValField(_5 _1 true wholeRange, wholeRange) 
                   )
//# 1041 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4109 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1046 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.NestedType(_5, rhs2 parseState 1 5) 
                   )
//# 1046 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1050 "src/fsharp/pars.fsy"
                            let vis, doc, (ty, valSynInfo) = _2, grabXmlDoc(parseState, _1, 1), _5
                            let m = unionRanges (rhs parseState 1) ty.Range 
                            let isInline = false 
                            let valSpfn = SynValSig (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags, m) 
                   )
//# 1050 "src/fsharp/pars.fsy"
                 : 'classMemberSpfn));
//# 4141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1060 "src/fsharp/pars.fsy"
                           None, SynMemberKind.Member 
                   )
//# 1060 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1063 "src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1063 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1066 "src/fsharp/pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
//# 1066 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1069 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            Some (rhs2 parseState 1 2), _2 
                   )
//# 1069 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSet));
//# 4185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1076 "src/fsharp/pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then SynMemberKind.PropertyGet 
                            else if id.idText = "set" then SynMemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
//# 1076 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1082 "src/fsharp/pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired())
                           SynMemberKind.PropertyGetSet 
                   )
//# 1082 "src/fsharp/pars.fsy"
                 : 'classMemberSpfnGetSetElements));
//# 4215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1089 "src/fsharp/pars.fsy"
                                       _1 
                   )
//# 1089 "src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1090 "src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1090 "src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1091 "src/fsharp/pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
//# 1091 "src/fsharp/pars.fsy"
                 : 'memberSpecFlags));
//# 4246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1097 "src/fsharp/pars.fsy"
                            SynExceptionSig(_1, _2, lhs parseState) 
                   )
//# 1097 "src/fsharp/pars.fsy"
                 : 'exconSpfn));
//# 4258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1103 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 1103 "src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1106 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1106 "src/fsharp/pars.fsy"
                 : 'opt_classSpfn));
//# 4280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1115 "src/fsharp/pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
//# 1115 "src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1118 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 1118 "src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1124 "src/fsharp/pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedImplFile ([], [emptyImplFileFrag]) 
                   )
//# 1124 "src/fsharp/pars.fsy"
                 : ParsedImplFile));
//# 4316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1131 "src/fsharp/pars.fsy"
                             ParsedImplFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
//# 1131 "src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1134 "src/fsharp/pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedImplFile (decls, _2) 
                   )
//# 1134 "src/fsharp/pars.fsy"
                 : 'fileNamespaceImpls));
//# 4352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1153 "src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 1153 "src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1156 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1156 "src/fsharp/pars.fsy"
                 : 'fileNamespaceImplList));
//# 4375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1162 "src/fsharp/pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
//# 1162 "src/fsharp/pars.fsy"
                 : 'fileNamespaceImpl));
//# 4388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1168 "src/fsharp/pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let mDeclsAndAttrs = (List.map (fun (a: SynAttributeList) -> a.Range) _1) @ (List.map (fun (d: SynModuleDecl) -> d.Range) _4)
                           let m = (m2, mDeclsAndAttrs) ||> unionRangeWithListBy id
                           let isRec2, path2, vis, attribs2 = _3
                           let xmlDoc = grabXmlDoc(parseState, _1, 1)
                           (fun (isRec, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid, (isRec || isRec2), SynModuleOrNamespaceKind.NamedModule, _4, xmlDoc, _1@attribs2, vis, m))) 
                   )
//# 1168 "src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1180 "src/fsharp/pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1, m)  
                             | _ ->
                                 let lastDeclRange = List.tryLast _1 |> Option.map (fun decl -> decl.Range) |> Option.defaultValue (rhs parseState 1)
                                 let m = mkRange lastDeclRange.FileName (lhs parseState).Start lastDeclRange.End
                                 ParsedImplFileFragment.NamespaceFragment(path, isRec, SynModuleOrNamespaceKind.DeclaredNamespace, _1, xml, [], m)) 
                   )
//# 1180 "src/fsharp/pars.fsy"
                 : 'fileModuleImpl));
//# 4429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1193 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 1193 "src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1196 "src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            _2 
                   )
//# 1196 "src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1201 "src/fsharp/pars.fsy"
                            []  
                   )
//# 1201 "src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1204 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 1204 "src/fsharp/pars.fsy"
                 : SynModuleDecl list));
//# 4478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1210 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 1210 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1213 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1213 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
//# 4499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1220 "src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
//# 1220 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1227 "src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1227 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1234 "src/fsharp/pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
//# 1234 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1241 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 1241 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1244 "src/fsharp/pars.fsy"
                            if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
//# 1244 "src/fsharp/pars.fsy"
                 : 'moduleDefnsOrExpr));
//# 4575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1250 "src/fsharp/pars.fsy"
                             _1 @ _2 
                   )
//# 1250 "src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1253 "src/fsharp/pars.fsy"
                             _1 @ _3 
                   )
//# 1253 "src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1256 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 1256 "src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1259 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 1259 "src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1262 "src/fsharp/pars.fsy"
                             _3 
                   )
//# 1262 "src/fsharp/pars.fsy"
                 : 'moduleDefns));
//# 4635 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1268 "src/fsharp/pars.fsy"
                             _1  
                   )
//# 1268 "src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1271 "src/fsharp/pars.fsy"
                             [ SynModuleDecl.HashDirective (_1, rhs2 parseState 1 1) ] 
                   )
//# 1271 "src/fsharp/pars.fsy"
                 : 'moduleDefnOrDirective));
//# 4657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1280 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             let (BindingSetPreAttrs(_, _, _, _, mWhole)) = _3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole)  
                   )
//# 1280 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1287 "src/fsharp/pars.fsy"
                             let hwlb, m = _3
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             mkDefnBindings (m, hwlb, _1, _2, m)  
                   )
//# 1287 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1294 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole) 
                   )
//# 1294 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4704 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1300 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             let (SynTypeDefn(SynComponentInfo(cas, a, cs, b, _xmlDoc, d, d2, d3), mEquals, e, f, g, h)) = _4
                             _xmlDoc.MarkAsInvalid()
                             let attrs = _1@cas
                             let mTc = (h, attrs)  ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                             let tc = (SynTypeDefn(SynComponentInfo(attrs, a, cs, b, xmlDoc, d, d2, d3), mEquals, e, f, g, mTc))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
//# 1300 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1312 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionDefn(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             let ec = (SynExceptionDefn(SynExceptionDefnRepr(_1@cas, a, b, xmlDoc, d, d2), e, f))
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
//# 1312 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1321 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attribs, (isRec, path, vis, attribs2) = _1, _3
                             let xmlDoc = grabXmlDoc(parseState, _1, 1)
                             match _5 with
                             | Choice1Of2 eqn -> 
                                 if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                                 if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 if not (isNil attribs) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 if not (isNil attribs2) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 match vis with
                                 | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                                 | None -> ()
                                 [ SynModuleDecl.ModuleAbbrev(List.head path, eqn, (rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 let info = SynComponentInfo(attribs @ attribs2, None, [], path, xmlDoc, false, vis, rhs parseState 3)
                                 let mEquals = rhs parseState 4
                                 [ SynModuleDecl.NestedModule(info, isRec, Some mEquals, def, false, (rhs2 parseState 1 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
//# 1321 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1343 "src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(), rhs parseState 1))
                             [ SynModuleDecl.Attributes(_1, rhs parseState 1) ] 
                   )
//# 1343 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'openDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1348 "src/fsharp/pars.fsy"
                             [ SynModuleDecl.Open(_1, (rhs parseState 1)) ] 
                   )
//# 1348 "src/fsharp/pars.fsy"
                 : 'moduleDefn));
//# 4801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1353 "src/fsharp/pars.fsy"
                             SynOpenDeclTarget.ModuleOrNamespace(_2.Lid, (rhs parseState 2)) 
                   )
//# 1353 "src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1356 "src/fsharp/pars.fsy"
                             SynOpenDeclTarget.Type(_3, (rhs parseState 3)) 
                   )
//# 1356 "src/fsharp/pars.fsy"
                 : 'openDecl));
//# 4824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1363 "src/fsharp/pars.fsy"
                            _2.Lid 
                   )
//# 1363 "src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1366 "src/fsharp/pars.fsy"
                            _1.Lid  
                   )
//# 1366 "src/fsharp/pars.fsy"
                 : 'namedModuleAbbrevBlock));
//# 4847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1372 "src/fsharp/pars.fsy"
                            Choice2Of2 _2  
                   )
//# 1372 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1375 "src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
//# 1375 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1379 "src/fsharp/pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation, the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_, LongOrSingleIdent(false, LongIdentWithDots(path, _), None, _), _) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
//# 1379 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1405 "src/fsharp/pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            Choice2Of2 _2 
                   )
//# 1405 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1410 "src/fsharp/pars.fsy"
                            Choice2Of2 [] 
                   )
//# 1410 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1413 "src/fsharp/pars.fsy"
                            Choice2Of2 _1 
                   )
//# 1413 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1416 "src/fsharp/pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
//# 1416 "src/fsharp/pars.fsy"
                 : 'namedModuleDefnBlock));
//# 4953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1422 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 1422 "src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1425 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct())  
                            _2 
                   )
//# 1425 "src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1429 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1429 "src/fsharp/pars.fsy"
                 : 'wrappedNamedModuleDefn));
//# 4990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1434 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 1434 "src/fsharp/pars.fsy"
                 : SynMemberDefns));
//# 5002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1440 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 1440 "src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 5013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1443 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 1443 "src/fsharp/pars.fsy"
                 : 'opt_attributes));
//# 5023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1448 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 1448 "src/fsharp/pars.fsy"
                 : 'attributes));
//# 5034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1451 "src/fsharp/pars.fsy"
                            _1 @ _2 
                   )
//# 1451 "src/fsharp/pars.fsy"
                 : 'attributes));
//# 5046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1457 "src/fsharp/pars.fsy"
                             mkAttributeList _2 (rhs2 parseState 1 4) 
                   )
//# 1457 "src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1460 "src/fsharp/pars.fsy"
                             mkAttributeList [] (rhs2 parseState 1 3) 
                   )
//# 1460 "src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1463 "src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList _2 (rhs2 parseState 1 2) 
                   )
//# 1463 "src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1467 "src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList [] (rhs parseState 1) 
                   )
//# 1467 "src/fsharp/pars.fsy"
                 : 'attributeList));
//# 5096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1474 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 1474 "src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1477 "src/fsharp/pars.fsy"
                            _1 @ [_3] 
                   )
//# 1477 "src/fsharp/pars.fsy"
                 : 'attributeListElements));
//# 5120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1484 "src/fsharp/pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
//# 1484 "src/fsharp/pars.fsy"
                 : 'attribute));
//# 5134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1489 "src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
//# 1489 "src/fsharp/pars.fsy"
                 : 'attribute));
//# 5149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1494 "src/fsharp/pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
//# 1494 "src/fsharp/pars.fsy"
                 : 'attribute));
//# 5165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1501 "src/fsharp/pars.fsy"
                             Some(ident("module", (rhs parseState 1))) 
                   )
//# 1501 "src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1504 "src/fsharp/pars.fsy"
                             Some(ident("type", (rhs parseState 1))) 
                   )
//# 1504 "src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1506 "src/fsharp/pars.fsy"
                                       Some(_1) 
                   )
//# 1506 "src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1510 "src/fsharp/pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError())
                             Some(ident("return", (rhs parseState 1))) 
                   )
//# 1510 "src/fsharp/pars.fsy"
                 : 'attributeTarget));
//# 5210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1515 "src/fsharp/pars.fsy"
                                           (true, StaticMemberFlags) 
                   )
//# 1515 "src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1516 "src/fsharp/pars.fsy"
                                           (false, NonVirtualMemberFlags) 
                   )
//# 1516 "src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1517 "src/fsharp/pars.fsy"
                                           (false, OverrideMemberFlags) 
                   )
//# 1517 "src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1518 "src/fsharp/pars.fsy"
                                          (false, OverrideMemberFlags) 
                   )
//# 1518 "src/fsharp/pars.fsy"
                 : 'memberFlags));
//# 5250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1523 "src/fsharp/pars.fsy"
                            let typars, lid, fixity, vis = _2
                            let xmlDoc = grabXmlDoc(parseState, _1, 1)
                            SynComponentInfo (_1, typars, _3, lid, xmlDoc, fixity, vis, rangeOfLid lid) 
                   )
//# 1523 "src/fsharp/pars.fsy"
                 : 'typeNameInfo));
//# 5265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1530 "src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc(parseState, [], 1)
                            let tyconDefn =
                                if xmlDoc.IsEmpty then _2 else
                                let (SynTypeDefn(SynComponentInfo (a, typars, c, lid, _xmlDoc, fixity, vis, rangeOfLid), mEquals, typeRepr, members, implicitConstructor, range)) = _2
                                _xmlDoc.MarkAsInvalid()
                                SynTypeDefn(SynComponentInfo (a, typars, c, lid, xmlDoc, fixity, vis, rangeOfLid), mEquals, typeRepr, members, implicitConstructor, range)
                            tyconDefn :: _3 
                   )
//# 1530 "src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1538 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1538 "src/fsharp/pars.fsy"
                 : 'tyconDefnList));
//# 5293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1543 "src/fsharp/pars.fsy"
                            SynTypeDefn(_1, None, SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range), _1.Range), [], None, _1.Range) 
                   )
//# 1543 "src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1546 "src/fsharp/pars.fsy"
                            match _2 with
                            | Some _ -> ()
                            | None ->
                                 let (SynComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                                 // While the spec doesn't allow long idents here, the parser doesn't enforce this, so take one ident
                                 let typeNameId = List.last lid
                                 raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsEqualsMissingInTypeDefinition(typeNameId.ToString()))
                            
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr), members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            SynTypeDefn(_1, _2, tcDefRepr, members, None, mWhole) 
                   )
//# 1546 "src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1561 "src/fsharp/pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            SynTypeDefn(_1, None, SynTypeDefnRepr.ObjectModel(SynTypeDefnKind.Augmentation, [], m), _2, None, m) 
                   )
//# 1561 "src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5342 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1565 "src/fsharp/pars.fsy"
                            let vis, spats, az = _3, _5, _6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr, members) = _8 nameRange
                            let (SynComponentInfo(_, _, _, lid, _, _, _, _)) = _1
                            let mEquals = rhs parseState 7
                            // Gets the XML doc comments prior to the implicit constructor
                            let xmlDoc = grabXmlDoc(parseState, _2, 2)
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis, _2, spats, az, xmlDoc, rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k, cspec, m) -> SynTypeDefnRepr.ObjectModel (k, memberCtorPattern :: cspec, m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            SynTypeDefn(_1, Some mEquals, tcDefRepr, members, Some memberCtorPattern, mWhole) 
                   )
//# 1565 "src/fsharp/pars.fsy"
                 : 'tyconDefn));
//# 5374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1594 "src/fsharp/pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
//# 1594 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1598 "src/fsharp/pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
//# 1598 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1603 "src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
//# 1603 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhsBlock));
//# 5421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1612 "src/fsharp/pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1, m), augmentation) 
                   )
//# 1612 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1617 "src/fsharp/pars.fsy"
                            let needsCheck, (kind, decls), mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                SynTypeDefnRepr.ObjectModel (kind, decls, m), augmentation) 
                   )
//# 1617 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1628 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = SynValSig([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags SynMemberKind.Member, m) 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                SynTypeDefnRepr.ObjectModel (SynTypeDefnKind.Delegate (ty, arity), [invoke], m), []) 
                   )
//# 1628 "src/fsharp/pars.fsy"
                 : 'tyconDefnRhs));
//# 5468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1640 "src/fsharp/pars.fsy"
                            let needsCheck, decls, mopt = _1 
                            needsCheck, (SynTypeDefnKind.Unspecified, decls), mopt 
                   )
//# 1640 "src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1644 "src/fsharp/pars.fsy"
                            false, (_1, _2), Some (rhs2 parseState 1 3) 
                   )
//# 1644 "src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1647 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false, (_1, _2), Some(m) 
                   )
//# 1647 "src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1652 "src/fsharp/pars.fsy"
                            // silent recovery 
                            false, (_1, []), Some (rhs2 parseState 1 3) 
                   )
//# 1652 "src/fsharp/pars.fsy"
                 : 'tyconClassDefn));
//# 5519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1659 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false, _2, mopt 
                   )
//# 1659 "src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1667 "src/fsharp/pars.fsy"
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
//# 1667 "src/fsharp/pars.fsy"
                 : 'classDefnBlockKindUnspecified));
//# 5552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1677 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                             _2 
                   )
//# 1677 "src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1681 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 1681 "src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5577 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1684 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 1684 "src/fsharp/pars.fsy"
                 : 'classDefnBlock));
//# 5588 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1690 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 1690 "src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1694 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 1694 "src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1697 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 1697 "src/fsharp/pars.fsy"
                 : 'classDefnMembers));
//# 5620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1703 "src/fsharp/pars.fsy"
                            match _1, _3 with
                            | [ SynMemberDefn.Interface (_, Some [], m) ], nextMember :: _ ->
                                warning(IndentationProblem(FSComp.SR.lexfltTokenIsOffsideOfContextStartedEarlier(warningStringOfPos m.Start), nextMember.Range))
                            | _ -> ()
                            _1 @ _3 
                   )
//# 1703 "src/fsharp/pars.fsy"
                 : 'classDefnMembersAtLeastOne));
//# 5637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1713 "src/fsharp/pars.fsy"
                            _2  
                   )
//# 1713 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1716 "src/fsharp/pars.fsy"
                            _2  
                   )
//# 1716 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1719 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            _2  
                   )
//# 1719 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSet));
//# 5671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1725 "src/fsharp/pars.fsy"
                            [_1]  
                   )
//# 1725 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1727 "src/fsharp/pars.fsy"
                            [_1;_3] 
                   )
//# 1727 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElements));
//# 5694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1731 "src/fsharp/pars.fsy"
                            let mEquals = rhs parseState 5
                            let mRhs = (_6 : SynExpr).Range 
                            (_1, _2, _3, _4, Some mEquals, _6, mRhs) 
                   )
//# 1731 "src/fsharp/pars.fsy"
                 : 'classDefnMemberGetSetElement));
//# 5711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1740 "src/fsharp/pars.fsy"
                            let mRhs = _5.Range 
                            let optReturnType = _3
                            let mEquals = rhs parseState 4
                            let bindingBuilder, mBindLhs = _2 
                            (fun vis memFlagsBuilder attrs rangeStart ->
                                 let xmlDoc = grabXmlDocAtRangeStart(parseState, attrs, rangeStart)
                                 let memberFlags = Some (memFlagsBuilder SynMemberKind.Member)
                                 let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 let binding = (bindingBuilder xmlDoc) (vis, _1, false, mWholeBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, Some mEquals, _5, mRhs, [], attrs, memberFlags)
                                 let memberRange = unionRanges rangeStart mRhs
                                 [ SynMemberDefn.Member (binding, memberRange) ]) 
                   )
//# 1740 "src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1754 "src/fsharp/pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_, _, _, _, _, _, m2) -> m2) 
                            let propertyNameBindingBuilder, _ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs rangeStart -> 
                                  let mutable hasGet = false
                                  let mutable hasSet = false
                                  let xmlDoc = grabXmlDocAtRangeStart(parseState, attrs, rangeStart)
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline, optAttrs, (bindingBuilder, mBindLhs), optReturnType, mEquals, expr, exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs =
                                            optAttrs |> List.map (fun attrList ->
                                                { attrList with Attributes = attrList.Attributes |> List.map (fun a -> { a with AppliesToGetterAndSetter = true } ) })
                                        let attrs = attrs @ optAttrs
                                        let binding = (bindingBuilder xmlDoc) (visNoLongerUsed, optInline, isMutable, mBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, None, expr, exprm, [], attrs, Some (memFlagsBuilder SynMemberKind.Member))
                                        let (SynBinding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id], _), _, _, _, _, _) -> id.idText
                                                        | SynPat.Named (nm, _, _, _) | SynPat.As (_, SynPat.Named (nm, _, _, _), _) -> nm.idText
                                                        | SynPat.Typed (p, _, _) -> go p
                                                        | SynPat.Attrib (p, _, _) -> go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then
                                                  if hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet <- true
                                                      Some SynMemberKind.PropertyGet
                                              else if getset = "set" then
                                                  if hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet <- true
                                                      Some SynMemberKind.PropertySet
                                              else
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it,
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(), mBindLhs))
                                        | None -> ()
                                        end
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | SynMemberKind.PropertySet, _ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = (bindingBuilder PreXmlDoc.Empty) (vis, isInline, isMutable, mBindLhs, DebugPointAtBinding.NoneAtInvisible, optReturnType, mEquals, expr, exprm, [], attrs, Some(memFlagsBuilder memberKind))
                                        let (SynBinding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, mEquals, rhsExpr, mBindLhs, spBind)) = binding
                                        let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                     
                                        let (SynValData(_, valSynInfo, _)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags : SynMemberFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = 
                                                match valueArg with
                                                | [_] -> valueArg
                                                | _ -> SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | SynMemberKind.PropertyGet, SynValInfo ([], _ret), false
                                            | SynMemberKind.PropertyGet, SynValInfo ([_], _ret), true  -> 
                                                raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | SynMemberKind.PropertyGet, SynValInfo (thisArg :: indexOrUnitArgs :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([thisArg; indexOrUnitArgs], ret)
                                            | SynMemberKind.PropertyGet, SynValInfo (indexOrUnitArgs :: rest, ret), false ->
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([indexOrUnitArgs], ret)
                                            | SynMemberKind.PropertySet, SynValInfo ([thisArg;valueArg], ret), true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo (thisArg :: indexArgs :: valueArg :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo ([valueArg], ret), false -> 
                                                SynValInfo ([adjustValueArg valueArg], ret)
                                            | SynMemberKind.PropertySet, SynValInfo (indexArgs :: valueArg :: rest, ret), _ -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mWholeBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg], ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidProperty ())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo, None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding,
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = (propertyNameBindingBuilder xmlDoc) (vis, optInline, isMutable, mWholeBindLhs, spBind, optReturnType, mEquals, expr, exprm, [], attrs, Some(memFlagsBuilder SynMemberKind.Member))
                                            let (SynBinding (_, _, _, _, _, doc2, _, bindingPatOuter, _, _, _, _, _)) = bindingOuter 
                                        
                                            let lidOuter, lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid, None, None, SynArgPats.Pats [], lidVisOuter, m) ->  lid, lidVisOuter
                                                | SynPat.Named (id, _, visOuter, m) | SynPat.As(_, SynPat.Named (id, _, visOuter, m), _) -> LongIdentWithDots([id], []), visOuter
                                                | p -> raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner, lidVisOuter with 
                                                | None, None -> None
                                                | Some lidVisInner, None | None, Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(), mWholeBindLhs))
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id], _), _, tyargs, SynArgPats.Pats args, lidVisInner, m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (false, indexPats, _), indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(false, indexPats@[valuePat], unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(false, args, unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText, id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter, Some(id), tyargs, SynArgPats.Pats args, mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Named (nm, _, lidVisInner, m)
                                                | SynPat.As (_, SynPat.Named (nm, _, lidVisInner, m), _) -> SynPat.LongIdent (lidOuter, None, None, SynArgPats.Pats [], mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Typed (p, ty, m) ->  SynPat.Typed(go p, ty, m)
                                                | SynPat.Attrib (p, attribs, m) ->  SynPat.Attrib(go p, attribs, m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mWholeBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv, PreXmlDoc.Merge doc2 doc
                                        let binding = SynBinding (vis, SynBindingKind.Normal, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, mEquals, rhsExpr, mWholeBindLhs, spBind)
                                        let memberRange = unionRanges rangeStart mWhole
                                        Some (SynMemberDefn.Member (binding, memberRange))))
                            
                   )
//# 1754 "src/fsharp/pars.fsy"
                 : 'memberCore));
//# 5906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1942 "src/fsharp/pars.fsy"
                                   
                   )
//# 1942 "src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1943 "src/fsharp/pars.fsy"
                                          
                   )
//# 1943 "src/fsharp/pars.fsy"
                 : 'abstractMemberFlags));
//# 5926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1949 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(false, None, _1, _2, _3)] 
                   )
//# 1949 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5940 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1953 "src/fsharp/pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(true, Some (rhs parseState 3), _1, _2, _4)] 
                   )
//# 1953 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1957 "src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            if Option.isSome _2 then
                                errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let _, flags = _3
                            _4 _2 flags _1 rangeStart 
                   )
//# 1957 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1964 "src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(), rhs parseState 3))
                             let members = Option.map fst _5
                             let mWhole =
                                 match _5 with
                                 | None -> rhs2 parseState 1 4
                                 | Some (_, m) -> unionRanges (rhs2 parseState 1 4) m
                             [ SynMemberDefn.Interface (_4, members, mWhole) ] 
                   )
//# 1964 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 5995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1974 "src/fsharp/pars.fsy"
                            let ty, arity = _8
                            let isInline, doc, id, explicitValTyparDecls = _4, grabXmlDoc(parseState, _1, 1), _5, _6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), SynMemberKind.Member -> SynMemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 1
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(), wholeRange))
                            let valSpfn = SynValSig(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, None, None, wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
//# 1974 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1988 "src/fsharp/pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(), rhs parseState 1))
                             [ _3 ] 
                   )
//# 1988 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1993 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _3 rangeStart _1 false 
                   )
//# 1993 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 1998 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _4 rangeStart _1 true  
                   )
//# 1998 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2003 "src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1 
                            if Option.isSome _2 then
                                errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isStatic, flags = _3
                            _4 _1 isStatic flags rangeStart 
                   )
//# 2003 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2010 "src/fsharp/pars.fsy"
                             let mWholeBindLhs = rhs2 parseState 1 (if Option.isSome _5 then 5 else 4)
                             let m = unionRanges mWholeBindLhs _7.Range 
                             let mEquals = rhs parseState 6
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4], SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"], []), None, Some noInferredTypars, SynArgPats.Pats [_4], vis, rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false)
                             [ SynMemberDefn.Member(SynBinding (None, SynBindingKind.Normal, false, false, _1, grabXmlDoc(parseState, _1, 1), valSynData, declPat, None, Some mEquals, expr, mWholeBindLhs, DebugPointAtBinding.NoneAtInvisible), m) ] 
                   )
//# 2010 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2022 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             [ SynMemberDefn.NestedType(_5, None, rhs2 parseState 1 5) ] 
                   )
//# 2022 "src/fsharp/pars.fsy"
                 : 'classDefnMember));
//# 6131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2029 "src/fsharp/pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let mValDecl = rhs2 parseState 1 6
                             (fun rangeStart attribs isStatic ->
                                 let xmlDoc = grabXmlDocAtRangeStart(parseState, attribs, rangeStart)
                                 let mValDecl = unionRanges rangeStart mValDecl
                                 let fld = SynField(attribs, isStatic, Some _4, _6, _2, xmlDoc, _3, mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
//# 2029 "src/fsharp/pars.fsy"
                 : 'valDefnDecl));
//# 6151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2041 "src/fsharp/pars.fsy"
                            let mGetSetOpt, getSet = _8
                            let mEquals = rhs parseState 6
                            if _2 then
                                errorR (Error (FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet (), rhs parseState 3))
                            (fun attribs isStatic flags rangeStart ->
                                let xmlDoc = grabXmlDocAtRangeStart(parseState, attribs, rangeStart)
                                let memberRange = unionRanges rangeStart _7.Range
                                [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, xmlDoc, _3, mEquals, _7, mGetSetOpt, memberRange) ]) 
                   )
//# 2041 "src/fsharp/pars.fsy"
                 : 'autoPropsDefnDecl));
//# 6174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2053 "src/fsharp/pars.fsy"
                                        None 
                   )
//# 2053 "src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2054 "src/fsharp/pars.fsy"
                                      Some _2 
                   )
//# 2054 "src/fsharp/pars.fsy"
                 : 'opt_typ));
//# 6195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2059 "src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident("_", rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
//# 2059 "src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2065 "src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident(MangledGlobalName, rhs parseState 1) :: lid, rhs parseState 2 :: dotms)) 
                   )
//# 2065 "src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2069 "src/fsharp/pars.fsy"
                            (None, _1) 
                   )
//# 2069 "src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2072 "src/fsharp/pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _4
                            (Some(_1), LongIdentWithDots(ident("_", rhs parseState 2)::lid, rhs parseState 3::dotms)) 
                   )
//# 2072 "src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2078 "src/fsharp/pars.fsy"
                            (Some(_1), _2) 
                   )
//# 2078 "src/fsharp/pars.fsy"
                 : 'atomicPatternLongIdent));
//# 6259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2083 "src/fsharp/pars.fsy"
                            None 
                   )
//# 2083 "src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2086 "src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2086 "src/fsharp/pars.fsy"
                 : 'opt_access));
//# 6280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2091 "src/fsharp/pars.fsy"
                            SynAccess.Private 
                   )
//# 2091 "src/fsharp/pars.fsy"
                 : 'access));
//# 6290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2094 "src/fsharp/pars.fsy"
                            SynAccess.Public 
                   )
//# 2094 "src/fsharp/pars.fsy"
                 : 'access));
//# 6300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2097 "src/fsharp/pars.fsy"
                            SynAccess.Internal 
                   )
//# 2097 "src/fsharp/pars.fsy"
                 : 'access));
//# 6310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2102 "src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2102 "src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2105 "src/fsharp/pars.fsy"
                            None 
                   )
//# 2105 "src/fsharp/pars.fsy"
                 : 'opt_declVisibility));
//# 6331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2110 "src/fsharp/pars.fsy"
                            let members = _2
                            let m = (rhs parseState 1, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            Some (members, m) 
                   )
//# 2110 "src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2115 "src/fsharp/pars.fsy"
                            Some ([], rhs parseState 1) 
                   )
//# 2115 "src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2118 "src/fsharp/pars.fsy"
                            None 
                   )
//# 2118 "src/fsharp/pars.fsy"
                 : 'opt_interfaceImplDefn));
//# 6365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2123 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 2123 "src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6377 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2126 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 2126 "src/fsharp/pars.fsy"
                 : 'opt_classDefn));
//# 6387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2132 "src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2, _3, mDecl) 
                   )
//# 2132 "src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6400 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2136 "src/fsharp/pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2, _4, _5, mDecl) 
                   )
//# 2136 "src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2140 "src/fsharp/pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None, mDecl) 
                   )
//# 2140 "src/fsharp/pars.fsy"
                 : 'inheritsDefn));
//# 6428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2146 "src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 2146 "src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2149 "src/fsharp/pars.fsy"
                             None 
                   )
//# 2149 "src/fsharp/pars.fsy"
                 : 'optAsSpec));
//# 6449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2153 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 2153 "src/fsharp/pars.fsy"
                 : 'asSpec));
//# 6460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2157 "src/fsharp/pars.fsy"
                            Some(_1) 
                   )
//# 2157 "src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2160 "src/fsharp/pars.fsy"
                            None 
                   )
//# 2160 "src/fsharp/pars.fsy"
                 : 'optBaseSpec));
//# 6481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2164 "src/fsharp/pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2164 "src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2169 "src/fsharp/pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
//# 2169 "src/fsharp/pars.fsy"
                 : 'baseSpec));
//# 6505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2176 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 2176 "src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2179 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers())
                             _2 
                   )
//# 2179 "src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2183 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2183 "src/fsharp/pars.fsy"
                 : 'objectImplementationBlock));
//# 6541 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2189 "src/fsharp/pars.fsy"
                             _1 @  _3 
                   )
//# 2189 "src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2192 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2192 "src/fsharp/pars.fsy"
                 : 'objectImplementationMembers));
//# 6566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2198 "src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 None OverrideMemberFlags _1 rangeStart 
                   )
//# 2198 "src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2202 "src/fsharp/pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 _1 false OverrideMemberFlags rangeStart 
                   )
//# 2202 "src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2206 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 2206 "src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2209 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 2209 "src/fsharp/pars.fsy"
                 : 'objectImplementationMember));
//# 6621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2213 "src/fsharp/pars.fsy"
                                    
                   )
//# 2213 "src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2214 "src/fsharp/pars.fsy"
                                      
                   )
//# 2214 "src/fsharp/pars.fsy"
                 : 'memberOrOverride));
//# 6641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2222 "src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ErrorRecovery, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
//# 2222 "src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2227 "src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 2227 "src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Choice<SynEnumCase, SynUnionCase> list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2233 "src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(), rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(SynUnionCase(_, _, _, _, _, m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(), m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2,
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
//# 2233 "src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2251 "src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            SynTypeDefnSimpleRepr.Record (_2, _3, lhs parseState) 
                   )
//# 2251 "src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2256 "src/fsharp/pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let lhsm = lhs parseState
                            if parseState.LexBuffer.ReportLibraryOnlyFeatures then libraryOnlyError lhsm
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            let s, _ = _5
                            let ilType = ParseAssemblyCodeType s parseState.LexBuffer.ReportLibraryOnlyFeatures parseState.LexBuffer.LanguageVersion (rhs parseState 5)
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (box ilType, lhsm)  
                   )
//# 2256 "src/fsharp/pars.fsy"
                 : SynTypeDefnSimpleRepr));
//# 6734 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2268 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 2268 "src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6747 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2271 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) 
                            _2 
                   )
//# 2271 "src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2275 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 2275 "src/fsharp/pars.fsy"
                 : 'braceFieldDeclList));
//# 6773 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2279 "src/fsharp/pars.fsy"
                               _2, true 
                   )
//# 2279 "src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2281 "src/fsharp/pars.fsy"
                               _1, false 
                   )
//# 2281 "src/fsharp/pars.fsy"
                 : 'anonRecdType));
//# 6795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2286 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 2286 "src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2289 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar()) 
                            _2 
                   )
//# 2289 "src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2293 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 2293 "src/fsharp/pars.fsy"
                 : 'braceBarFieldDeclListCore));
//# 6831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2297 "src/fsharp/pars.fsy"
                            SynTypeDefnKind.Class 
                   )
//# 2297 "src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2300 "src/fsharp/pars.fsy"
                            SynTypeDefnKind.Interface 
                   )
//# 2300 "src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2303 "src/fsharp/pars.fsy"
                            SynTypeDefnKind.Struct 
                   )
//# 2303 "src/fsharp/pars.fsy"
                 : 'classOrInterfaceOrStruct));
//# 6861 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2306 "src/fsharp/pars.fsy"
                                     
                   )
//# 2306 "src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6871 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2307 "src/fsharp/pars.fsy"
                                                
                   )
//# 2307 "src/fsharp/pars.fsy"
                 : 'interfaceMember));
//# 6881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2311 "src/fsharp/pars.fsy"
                             None, _2.Lid, false, _1 
                   )
//# 2311 "src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2314 "src/fsharp/pars.fsy"
                             Some _2, _3.Lid, false, _1 
                   )
//# 2314 "src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2317 "src/fsharp/pars.fsy"
                             Some _3, _2.Lid, true, _1 
                   )
//# 2317 "src/fsharp/pars.fsy"
                 : 'tyconNameAndTyparDecls));
//# 6919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2321 "src/fsharp/pars.fsy"
                             SynTyparDecls.SinglePrefix (SynTyparDecl([], _1), rhs parseState 1) 
                   )
//# 2321 "src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2324 "src/fsharp/pars.fsy"
                             SynTyparDecls.PrefixList (List.rev _2, rhs2 parseState 1 3) 
                   )
//# 2324 "src/fsharp/pars.fsy"
                 : 'prefixTyparDecls));
//# 6942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2327 "src/fsharp/pars.fsy"
                                                         _3 :: _1 
                   )
//# 2327 "src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2328 "src/fsharp/pars.fsy"
                                     [_1] 
                   )
//# 2328 "src/fsharp/pars.fsy"
                 : 'typarDeclList));
//# 6965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2332 "src/fsharp/pars.fsy"
                             SynTyparDecl(_1, _2) 
                   )
//# 2332 "src/fsharp/pars.fsy"
                 : 'typarDecl));
//# 6977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2338 "src/fsharp/pars.fsy"
                             let m = rhs2 parseState 2 5
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), m))
                             SynTyparDecls.PostfixList (List.rev _3, _4, m) 
                   )
//# 2338 "src/fsharp/pars.fsy"
                 : 'postfixTyparDecls));
//# 6994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2346 "src/fsharp/pars.fsy"
                             (List.rev _1, true) 
                   )
//# 2346 "src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 7005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2349 "src/fsharp/pars.fsy"
                             (List.rev _1, false) 
                   )
//# 2349 "src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 7016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2352 "src/fsharp/pars.fsy"
                             ([], false) 
                   )
//# 2352 "src/fsharp/pars.fsy"
                 : 'explicitValTyparDeclsCore));
//# 7026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2356 "src/fsharp/pars.fsy"
                             let m = rhs2 parseState 2 5
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), m))
                             let tps, flex = _3 
                             let tps = SynTyparDecls.PostfixList (tps, _4, m)
                             SynValTyparDecls(Some tps, flex) 
                   )
//# 2356 "src/fsharp/pars.fsy"
                 : 'explicitValTyparDecls));
//# 7045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2364 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2364 "src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 7056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2366 "src/fsharp/pars.fsy"
                             SynValTyparDecls(None, true) 
                   )
//# 2366 "src/fsharp/pars.fsy"
                 : 'opt_explicitValTyparDecls));
//# 7066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2372 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 2372 "src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2375 "src/fsharp/pars.fsy"
                            List.rev _2 
                   )
//# 2375 "src/fsharp/pars.fsy"
                 : 'opt_typeConstraints));
//# 7087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2381 "src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2381 "src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2384 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2384 "src/fsharp/pars.fsy"
                 : 'typeConstraints));
//# 7110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2390 "src/fsharp/pars.fsy"
                            if parseState.LexBuffer.ReportLibraryOnlyFeatures then libraryOnlyError (lhs parseState)
                            SynTypeConstraint.WhereTyparDefaultsToType(_2, _4, lhs parseState) 
                   )
//# 2390 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2394 "src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSubtypeOfType(_1, _3, lhs parseState) 
                   )
//# 2394 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2397 "src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparIsValueType(_1, lhs parseState) 
                   )
//# 2397 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2400 "src/fsharp/pars.fsy"
                            if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3))  
                            SynTypeConstraint.WhereTyparIsReferenceType(_1, lhs parseState) 
                   )
//# 2400 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2404 "src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSupportsNull(_1, lhs parseState) 
                   )
//# 2404 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2407 "src/fsharp/pars.fsy"
                            let tp = _1
                            SynTypeConstraint.WhereTyparSupportsMember([ SynType.Var(tp, tp.Range) ], _4, lhs parseState) 
                   )
//# 2407 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2411 "src/fsharp/pars.fsy"
                            SynTypeConstraint.WhereTyparSupportsMember(List.rev(_2), _6, lhs parseState) 
                   )
//# 2411 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2414 "src/fsharp/pars.fsy"
                            let _ltm, _gtm, args, _commas, mWhole = _4
                            SynTypeConstraint.WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
//# 2414 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2418 "src/fsharp/pars.fsy"
                            match _3 with 
                            | "enum" ->
                                let _ltm, _gtm, args, _commas, mWhole = _4
                                SynTypeConstraint.WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2418 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2425 "src/fsharp/pars.fsy"
                            match _3 with 
                            | "comparison" -> SynTypeConstraint.WhereTyparIsComparable(_1, lhs parseState)
                            | "equality" -> SynTypeConstraint.WhereTyparIsEquatable(_1, lhs parseState)
                            | "unmanaged" -> SynTypeConstraint.WhereTyparIsUnmanaged(_1, lhs parseState)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
//# 2425 "src/fsharp/pars.fsy"
                 : 'typeConstraint));
//# 7244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2433 "src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2433 "src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2436 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2436 "src/fsharp/pars.fsy"
                 : 'typarAlts));
//# 7267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2443 "src/fsharp/pars.fsy"
                            _2 _1 
                   )
//# 2443 "src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2446 "src/fsharp/pars.fsy"
                            _1 :: _3 _2 
                   )
//# 2446 "src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2449 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2449 "src/fsharp/pars.fsy"
                 : Choice<SynEnumCase, SynUnionCase> list));
//# 7303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2453 "src/fsharp/pars.fsy"
                            grabXmlDoc(parseState, [], 1) 
                   )
//# 2453 "src/fsharp/pars.fsy"
                 : 'barAndgrabXmlDoc));
//# 7313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2457 "src/fsharp/pars.fsy"
                            (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
//# 2457 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7326 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2460 "src/fsharp/pars.fsy"
                            (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
//# 2460 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecls));
//# 7337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2465 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields [], xmlDoc, None, mDecl))) 
                   )
//# 2465 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2470 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields _5, xmlDoc, None, mDecl))) 
                   )
//# 2470 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2475 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 4
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.Fields [], xmlDoc, None, mDecl))) 
                   )
//# 2475 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2480 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             if parseState.LexBuffer.ReportLibraryOnlyFeatures then libraryOnlyWarning(lhs parseState)
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (SynUnionCase ( _1, _3, SynUnionCaseKind.FullType _5, xmlDoc, None, mDecl))) 
                   )
//# 2480 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2486 "src/fsharp/pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mEquals = rhs parseState 4
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice1Of2 (SynEnumCase ( _1, _3, mEquals, fst _5, snd _5, xmlDoc, mDecl))) 
                   )
//# 2486 "src/fsharp/pars.fsy"
                 : 'attrUnionCaseDecl));
//# 7418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2494 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2494 "src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7429 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2497 "src/fsharp/pars.fsy"
                              ident(opNameCons, rhs parseState 2) 
                   )
//# 2497 "src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2500 "src/fsharp/pars.fsy"
                              ident(opNameNil, rhs2 parseState 2 3) 
                   )
//# 2500 "src/fsharp/pars.fsy"
                 : 'unionCaseName));
//# 7451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2504 "src/fsharp/pars.fsy"
                             Choice2Of2 (SynUnionCase ( [], _1, SynUnionCaseKind.Fields [], grabXmlDoc(parseState, [], 1), None, rhs parseState 1)) 
                   )
//# 2504 "src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2507 "src/fsharp/pars.fsy"
                             let mEquals = rhs parseState 2
                             Choice1Of2 (SynEnumCase ([], _1, mEquals, fst _3, snd _3, grabXmlDoc(parseState, [], 1), rhs2 parseState 1 3)) 
                   )
//# 2507 "src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2511 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2511 "src/fsharp/pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
//# 7489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2515 "src/fsharp/pars.fsy"
                            Choice2Of2 (SynUnionCase ( [], _1, SynUnionCaseKind.Fields _3, grabXmlDoc(parseState, [], 1), None, rhs2 parseState 1 3)) 
                   )
//# 2515 "src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2518 "src/fsharp/pars.fsy"
                             let mEquals = rhs parseState 2
                             Choice1Of2 (SynEnumCase ([], _1, mEquals, fst _3, snd _3, grabXmlDoc(parseState, [], 1), rhs2 parseState 1 3))  
                   )
//# 2518 "src/fsharp/pars.fsy"
                 : 'firstUnionCaseDecl));
//# 7515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2523 "src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2523 "src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2526 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2526 "src/fsharp/pars.fsy"
                 : 'unionCaseReprElements));
//# 7538 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2530 "src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc(parseState, [], 1)
                            let wholeRange = rhs2 parseState 1 3
                            mkSynNamedField (_1, _3, xmlDoc, wholeRange) 
                   )
//# 2530 "src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2535 "src/fsharp/pars.fsy"
                            let xmlDoc = grabXmlDoc(parseState, [], 1)
                            mkSynAnonField (_1, xmlDoc) 
                   )
//# 2535 "src/fsharp/pars.fsy"
                 : 'unionCaseReprElement));
//# 7564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2540 "src/fsharp/pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(), lhs parseState)) 
                            _1 
                   )
//# 2540 "src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2544 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 2544 "src/fsharp/pars.fsy"
                 : 'unionCaseRepr));
//# 7587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2549 "src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 2549 "src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2552 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2552 "src/fsharp/pars.fsy"
                 : 'recdFieldDeclList));
//# 7612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2557 "src/fsharp/pars.fsy"
                            let wholeRange = rhs2 parseState 1 2
                            let fld = _2 _1 false wholeRange
                            let (SynField (a, b, c, d, e, f, vis, wholeRange)) = fld
                            if Option.isSome vis then errorR (Error (FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations (), rhs parseState 2))
                            SynField (a, b, c, d, e, f, None, wholeRange) 
                   )
//# 2557 "src/fsharp/pars.fsy"
                 : 'recdFieldDecl));
//# 7628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2566 "src/fsharp/pars.fsy"
                            fun attrs stat wholeRange ->
                                let xmlDoc = grabXmlDocAtRangeStart(parseState, attrs, wholeRange)
                                SynField(attrs, stat, Some _3, _5, _1, xmlDoc, _2, wholeRange) 
                   )
//# 2566 "src/fsharp/pars.fsy"
                 : 'fieldDecl));
//# 7644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2573 "src/fsharp/pars.fsy"
                            SynExceptionDefn(_1, _2, (_1.Range, _2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
//# 2573 "src/fsharp/pars.fsy"
                 : SynExceptionDefn));
//# 7656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2578 "src/fsharp/pars.fsy"
                            SynExceptionDefnRepr(_2, _4, _5, PreXmlDoc.Empty, _3, (match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
//# 2578 "src/fsharp/pars.fsy"
                 : SynExceptionDefnRepr));
//# 7670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2583 "src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2583 "src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2586 "src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields _3, PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2586 "src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2589 "src/fsharp/pars.fsy"
                             SynUnionCase([], _1, SynUnionCaseKind.Fields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
//# 2589 "src/fsharp/pars.fsy"
                 : 'exconIntro));
//# 7705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2593 "src/fsharp/pars.fsy"
                            None 
                   )
//# 2593 "src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2596 "src/fsharp/pars.fsy"
                            Some (_2.Lid) 
                   )
//# 2596 "src/fsharp/pars.fsy"
                 : 'exconRepr));
//# 7726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2604 "src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                                 (fun attrs vis ->
                                     let xmlDoc = grabXmlDoc(parseState, attrs, 1)
                                     // apply the builder
                                     let binds = localBindingsBuilder xmlDoc attrs vis mLetKwd
                                     if not isRec && not (isNilOrSingleton binds) then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                     [], binds),
                                 bindingSetRange) 
                   )
//# 2604 "src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2627 "src/fsharp/pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false, false, _1, bindRange)  
                   )
//# 2627 "src/fsharp/pars.fsy"
                 : 'defnBindings));
//# 7770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2634 "src/fsharp/pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, mWhole)]), mWhole) 
                   )
//# 2634 "src/fsharp/pars.fsy"
                 : 'doBinding));
//# 7785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2644 "src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                               (fun attrs vis ->
                                 let xmlDoc = grabXmlDoc(parseState, attrs, 1)
                                 let binds = localBindingsBuilder xmlDoc attrs vis mLetKwd
                                 if not isRec && not (isNilOrSingleton binds) then
                                     reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                 [], binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
//# 2644 "src/fsharp/pars.fsy"
                 : 'hardwhiteLetBindings));
//# 7819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2671 "src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = DebugPointAtBinding.NoneAtDo 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, bindingSetRange)]), bindingSetRange), _2 
                   )
//# 2671 "src/fsharp/pars.fsy"
                 : 'hardwhiteDoBinding));
//# 7836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2682 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 2682 "src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2685 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 2685 "src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2688 "src/fsharp/pars.fsy"
                            let b, m = _1 in b 
                   )
//# 2688 "src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2691 "src/fsharp/pars.fsy"
                            fst _1 
                   )
//# 2691 "src/fsharp/pars.fsy"
                 : 'classDefnBindings));
//# 7880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2697 "src/fsharp/pars.fsy"
                            (fun _ m -> ()) 
                   )
//# 2697 "src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2700 "src/fsharp/pars.fsy"
                            (fun kwd m ->
                              let msg = 
                                  match kwd with 
                                  | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                  | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                  | "use" -> FSComp.SR.parsUnmatchedUse() 
                                  | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()
                              reportParseErrorAt m msg) 
                   )
//# 2700 "src/fsharp/pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
//# 7908 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2712 "src/fsharp/pars.fsy"
                             let rty, vis, nm, args  = _2, _3, _4, _7
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App (ExprAtomicFlag.NonAtomic,
                                                       false,
                                                       SynExpr.Ident (ident("failwith", rhs parseState 6)),
                                                       SynExpr.Const (SynConst.String("extern was not given a DllImport attribute", SynStringKind.Regular, rhs parseState 8), rhs parseState 8),
                                                       mRhs)
                             (fun attrs _ ->
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm], []), None, Some noInferredTypars, SynArgPats.Pats [SynPat.Tuple(false, args, argsm)], vis, nmm)
                                 let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 let xmlDoc = grabXmlDoc(parseState, attrs, 1)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mWholeBindLhs, DebugPointAtBinding.NoneAtInvisible, Some rty, None, rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
//# 2712 "src/fsharp/pars.fsy"
                 : 'cPrototype));
//# 7942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2735 "src/fsharp/pars.fsy"
                            List.rev _1 
                   )
//# 2735 "src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2738 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 2738 "src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2740 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 2740 "src/fsharp/pars.fsy"
                 : 'cArgs));
//# 7974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2746 "src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 2746 "src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 7986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2749 "src/fsharp/pars.fsy"
                            [_3; _1] 
                   )
//# 2749 "src/fsharp/pars.fsy"
                 : 'cMoreArgs));
//# 7998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2755 "src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m, _2, m) |> addAttribs _1 
                   )
//# 2755 "src/fsharp/pars.fsy"
                 : 'cArg));
//# 8010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2758 "src/fsharp/pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (_3, false, None, m), _2, m) |> addAttribs _1 
                   )
//# 2758 "src/fsharp/pars.fsy"
                 : 'cArg));
//# 8023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2763 "src/fsharp/pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1), None, [], [], None, false, m) 
                   )
//# 2763 "src/fsharp/pars.fsy"
                 : 'cType));
//# 8035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2767 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2767 "src/fsharp/pars.fsy"
                 : 'cType));
//# 8048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2771 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2771 "src/fsharp/pars.fsy"
                 : 'cType));
//# 8060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2775 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref", m)], [])), None, [_1], [], None, true, m) 
                   )
//# 2775 "src/fsharp/pars.fsy"
                 : 'cType));
//# 8072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2779 "src/fsharp/pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint", m)], [])), None, [], [], None, true, m) 
                   )
//# 2779 "src/fsharp/pars.fsy"
                 : 'cType));
//# 8083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2786 "src/fsharp/pars.fsy"
                            SynReturnInfo((_2, SynArgInfo(_1, false, None)), rhs parseState 2) 
                   )
//# 2786 "src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2789 "src/fsharp/pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit", m)], [])), None, [], [], None, false, m), SynArgInfo(_1, false, None)), m) 
                   )
//# 2789 "src/fsharp/pars.fsy"
                 : 'cRetType));
//# 8107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2795 "src/fsharp/pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange, attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun xmlDoc attrs vis mLetKwd -> attrLocalBindingBuilder xmlDoc attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _xmlDoc _attrs _vis _letm -> moreBindings) 
                   )
//# 2795 "src/fsharp/pars.fsy"
                 : 'localBindings));
//# 8129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2810 "src/fsharp/pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange, attrLocalBindingBuilder) ->
                                 let xmlDoc = grabXmlDoc(parseState, [], 1)
                                 let xmlDoc = if xmlDoc.IsEmpty then grabXmlDoc(parseState, [], 2) else xmlDoc
                                 (attrLocalBindingBuilder xmlDoc [] None mLetKwd false, localBindingRange) :: _3
                              | None -> _3) 
                   )
//# 2810 "src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2819 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 2819 "src/fsharp/pars.fsy"
                 : 'moreLocalBindings));
//# 8157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2825 "src/fsharp/pars.fsy"
                             let attrs2 = _1
                             let localBindingRange, localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun xmlDoc attrs vis mLetKwd _ -> localBindingBuilder xmlDoc (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange, attrLocalBindingBuilder) 
                   )
//# 2825 "src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2831 "src/fsharp/pars.fsy"
                             None 
                   )
//# 2831 "src/fsharp/pars.fsy"
                 : 'attr_localBinding));
//# 8182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2837 "src/fsharp/pars.fsy"
                             let (expr:SynExpr), opts = _6
                             let eqm = rhs parseState 5
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 1 5) mRhs
                             let localBindingBuilder = 
                               (fun xmlDoc attrs vis mLetKwd ->
                                 let mWhole = (unionRanges mLetKwd mRhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 let spBind = if IsControlFlowExpression expr then DebugPointAtBinding.NoneAtLet else DebugPointAtBinding.Yes mWhole
                                 let mWholeBindLhs = (mBindLhs, attrs) ||> unionRangeWithListBy (fun (a: SynAttributeList) -> a.Range)
                                 (bindingBuilder xmlDoc) (vis, _1, _2, mWholeBindLhs, spBind, optReturnType, Some eqm, expr, mRhs, opts, attrs, None))
                             localBindingRange, localBindingBuilder 
                   )
//# 2837 "src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2852 "src/fsharp/pars.fsy"
                             let mWhole = rhs2 parseState 1 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3
                             let localBindingBuilder = 
                               (fun xmlDoc attrs vis mLetKwd ->
                                 let spBind = DebugPointAtBinding.Yes (unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 (bindingBuilder xmlDoc) (vis, _1, _2, mBindLhs, spBind, optReturnType, Some eqm, arbExpr("localBinding1", zeroWidthAtEnd), mRhs, [], attrs, None))
                             mWhole, localBindingBuilder 
                   )
//# 2852 "src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2865 "src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = rhs2 parseState 1 (match optReturnType with None -> 3 | _ -> 4)
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun xmlDoc attrs vis mLetKwd ->
                                 let spBind = DebugPointAtBinding.Yes (unionRanges mLetKwd mRhs)
                                 (bindingBuilder xmlDoc) (vis, _1, _2, mBindLhs, spBind, optReturnType, None, arbExpr("localBinding2", mRhs), mRhs, [], attrs, None))
                             mWhole, localBindingBuilder 
                   )
//# 2865 "src/fsharp/pars.fsy"
                 : 'localBinding));
//# 8257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2880 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 2880 "src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2883 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile())
                             let a, b = _2
                             (exprFromParseError a, b) 
                   )
//# 2883 "src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2888 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 2888 "src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
//# 8294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2892 "src/fsharp/pars.fsy"
                             _1, List.rev _2 
                   )
//# 2892 "src/fsharp/pars.fsy"
                 : 'typedExprWithStaticOptimizations));
//# 8306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2896 "src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 2896 "src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2899 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 2899 "src/fsharp/pars.fsy"
                 : 'opt_staticOptimizations));
//# 8328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2903 "src/fsharp/pars.fsy"
                             (_2, _4) 
                   )
//# 2903 "src/fsharp/pars.fsy"
                 : 'staticOptimization));
//# 8340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2907 "src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 2907 "src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2910 "src/fsharp/pars.fsy"
                             [_1 ] 
                   )
//# 2910 "src/fsharp/pars.fsy"
                 : 'staticOptimizationConditions));
//# 8363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2914 "src/fsharp/pars.fsy"
                             SynStaticOptimizationConstraint.WhenTyparTyconEqualsTycon(_1, _3, lhs parseState) 
                   )
//# 2914 "src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2917 "src/fsharp/pars.fsy"
                             SynStaticOptimizationConstraint.WhenTyparIsStruct(_1, lhs parseState) 
                   )
//# 2917 "src/fsharp/pars.fsy"
                 : 'staticOptimizationCondition));
//# 8386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2921 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState))
                           SynConst.SByte (fst _1) 
                   )
//# 2921 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2925 "src/fsharp/pars.fsy"
                           SynConst.Byte _1 
                   )
//# 2925 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2928 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState))
                           SynConst.Int16 (fst _1) 
                   )
//# 2928 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2932 "src/fsharp/pars.fsy"
                           SynConst.UInt16 _1 
                   )
//# 2932 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8432 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2935 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynConst.Int32 (fst _1) 
                   )
//# 2935 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2939 "src/fsharp/pars.fsy"
                           SynConst.UInt32 _1 
                   )
//# 2939 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8455 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2942 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState))
                           SynConst.Int64 (fst _1) 
                   )
//# 2942 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2946 "src/fsharp/pars.fsy"
                           SynConst.UInt64 _1 
                   )
//# 2946 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2949 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideNativeSigned(), lhs parseState))
                           SynConst.IntPtr (fst _1) 
                   )
//# 2949 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2953 "src/fsharp/pars.fsy"
                           SynConst.UIntPtr _1 
                   )
//# 2953 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2956 "src/fsharp/pars.fsy"
                           SynConst.Single _1 
                   )
//# 2956 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2959 "src/fsharp/pars.fsy"
                           SynConst.Double _1 
                   )
//# 2959 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2962 "src/fsharp/pars.fsy"
                           SynConst.Char _1 
                   )
//# 2962 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2965 "src/fsharp/pars.fsy"
                           SynConst.Decimal _1 
                   )
//# 2965 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2968 "src/fsharp/pars.fsy"
                           SynConst.UserNum _1 
                   )
//# 2968 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2971 "src/fsharp/pars.fsy"
                           let s, synStringKind = _1
                           SynConst.String (s, synStringKind, lhs parseState) 
                   )
//# 2971 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sourceIdentifier)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2975 "src/fsharp/pars.fsy"
                           let c,v = _1
                           SynConst.SourceIdentifier (c, v, lhs parseState) 
                   )
//# 2975 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[] * SynByteStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2979 "src/fsharp/pars.fsy"
                           let (v, synByteStringKind, _) = _1
                           SynConst.Bytes (v, synByteStringKind, lhs parseState) 
                   )
//# 2979 "src/fsharp/pars.fsy"
                 : 'rawConstant));
//# 8592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2984 "src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
//# 2984 "src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2990 "src/fsharp/pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
//# 2990 "src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 2996 "src/fsharp/pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Integer(fst _1) 
                   )
//# 2996 "src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8636 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3000 "src/fsharp/pars.fsy"
                           if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
//# 3000 "src/fsharp/pars.fsy"
                 : 'rationalConstant));
//# 8648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3004 "src/fsharp/pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
//# 3004 "src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3008 "src/fsharp/pars.fsy"
                           _2 
                   )
//# 3008 "src/fsharp/pars.fsy"
                 : 'atomicUnsignedRationalConstant));
//# 8672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3011 "src/fsharp/pars.fsy"
                                                          _1 
                   )
//# 3011 "src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3014 "src/fsharp/pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
//# 3014 "src/fsharp/pars.fsy"
                 : 'atomicRationalConstant));
//# 8694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3018 "src/fsharp/pars.fsy"
                           _1, rhs parseState 1 
                   )
//# 3018 "src/fsharp/pars.fsy"
                 : 'constant));
//# 8705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3021 "src/fsharp/pars.fsy"
                           SynConst.Measure(_1, rhs parseState 1, _3), lhs parseState 
                   )
//# 3021 "src/fsharp/pars.fsy"
                 : 'constant));
//# 8717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3025 "src/fsharp/pars.fsy"
                           (fun (xmlDoc: PreXmlDoc) -> mkSynBinding (xmlDoc, _1)), rhs parseState 1 
                   )
//# 3025 "src/fsharp/pars.fsy"
                 : 'bindingPattern));
//# 8728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3032 "src/fsharp/pars.fsy"
                             let m = rhs parseState 1 
                             SynPat.Named(_1, false, None, m) 
                   )
//# 3032 "src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3036 "src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, rhs parseState 2) 
                   )
//# 3036 "src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3039 "src/fsharp/pars.fsy"
                             SynPat.Typed(_1, _3, lhs parseState) 
                   )
//# 3039 "src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3042 "src/fsharp/pars.fsy"
                             SynPat.Attrib(_2, _1, lhs parseState) 
                   )
//# 3042 "src/fsharp/pars.fsy"
                 : 'simplePattern));
//# 8775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3046 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3046 "src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3049 "src/fsharp/pars.fsy"
                             match _3 with
                             | SynPat.Tuple(_, pats, _) -> SynPat.Tuple(false, _1 :: pats, rhs2 parseState 1 3)
                             | _ -> SynPat.Tuple(false, [_1; _3], rhs2 parseState 1 3) 
                   )
//# 3049 "src/fsharp/pars.fsy"
                 : 'simplePatternCommaList));
//# 8800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3055 "src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(_2, rhs2 parseState 1 3)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3055 "src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3060 "src/fsharp/pars.fsy"
                             let pat = SynPat.Const(SynConst.Unit, rhs2 parseState 1 2)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 3060 "src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3065 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let parenPat = SynPat.Paren(SynPat.Tuple(false, [], rhs2 parseState 1 2), rhs2 parseState 1 2) // todo: report parsed pats anyway?
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3065 "src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3071 "src/fsharp/pars.fsy"
                             let parenPat = SynPat.Paren(SynPat.Wild(rhs parseState 2), rhs2 parseState 1 3) // silent recovery
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
//# 3071 "src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3076 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let pat = SynPat.Wild(lhs parseState)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
//# 3076 "src/fsharp/pars.fsy"
                 : 'simplePatterns));
//# 8869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3084 "src/fsharp/pars.fsy"
                             SynPat.As(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3084 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3087 "src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3087 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3090 "src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3)], None, lhs parseState) 
                   )
//# 3090 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3093 "src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3093 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3096 "src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
//# 3096 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3099 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3099 "src/fsharp/pars.fsy"
                 : SynPat));
//# 8938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3103 "src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3103 "src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3106 "src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3106 "src/fsharp/pars.fsy"
                 : 'tuplePatternElements));
//# 8962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3110 "src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 3110 "src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3113 "src/fsharp/pars.fsy"
                            _3 :: _1 :: [] 
                   )
//# 3113 "src/fsharp/pars.fsy"
                 : 'conjPatternElements));
//# 8986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3117 "src/fsharp/pars.fsy"
                            [_1], lhs parseState 
                   )
//# 3117 "src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 8998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3120 "src/fsharp/pars.fsy"
                            let (rs, _) = _3 in (_1 :: rs), lhs parseState 
                   )
//# 3120 "src/fsharp/pars.fsy"
                 : 'namePatPairs));
//# 9011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3124 "src/fsharp/pars.fsy"
                            let mEquals = rhs parseState 2
                            (_1, mEquals, _3) 
                   )
//# 3124 "src/fsharp/pars.fsy"
                 : 'namePatPair));
//# 9024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3129 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             SynPat.LongIdent (lid, None, Some _2, SynArgPats.Pats [], vis, lhs parseState) 
                   )
//# 3129 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3133 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _3
                             let m = unionRanges (rhs2 parseState 1 2) argsM
                             SynPat.LongIdent (lid, None, Some _2, args, vis, m) 
                   )
//# 3133 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3139 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _4
                             let m = unionRanges (rhs2 parseState 1 2) argsM
                             SynPat.LongIdent (lid, None, Some _2, args, vis, m) 
                   )
//# 3139 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3145 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _4
                             let m = unionRanges (rhs2 parseState 1 2) argsM
                             SynPat.LongIdent (lid, None, Some _2, args, vis, m) 
                   )
//# 3145 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3151 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _2
                             let m = unionRanges (rhs parseState 1) argsM
                             SynPat.LongIdent (lid, None, None, args, vis, m) 
                   )
//# 3151 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9100 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3157 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _3
                             let m = unionRanges (rhs parseState 1) argsM
                             SynPat.LongIdent (lid, None, None, args, vis, m) 
                   )
//# 3157 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynArgPats * Range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3163 "src/fsharp/pars.fsy"
                             let vis, lid = _1
                             let args, argsM = _3
                             let m = unionRanges (rhs parseState 1) argsM
                             SynPat.LongIdent (lid, None, None, args, vis, m) 
                   )
//# 3163 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3169 "src/fsharp/pars.fsy"
                             SynPat.IsInst(_2, lhs parseState) 
                   )
//# 3169 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9141 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3172 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3172 "src/fsharp/pars.fsy"
                 : 'constrPattern));
//# 9152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3176 "src/fsharp/pars.fsy"
                             SynArgPats.NamePatPairs _2, snd _2 
                   )
//# 3176 "src/fsharp/pars.fsy"
                 : SynArgPats * Range));
//# 9164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3179 "src/fsharp/pars.fsy"
                             let mParsed = rhs parseState 1
                             let mAll = (mParsed.StartRange, _1) ||> unionRangeWithListBy (fun p -> p.Range)
                             SynArgPats.Pats _1, mAll 
                   )
//# 3179 "src/fsharp/pars.fsy"
                 : SynArgPats * Range));
//# 9177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3185 "src/fsharp/pars.fsy"
                             _1 :: _2 
                   )
//# 3185 "src/fsharp/pars.fsy"
                 : SynPat list));
//# 9189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3188 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3188 "src/fsharp/pars.fsy"
                 : SynPat list));
//# 9202 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3192 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
//# 3192 "src/fsharp/pars.fsy"
                 : SynPat list));
//# 9215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3196 "src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3196 "src/fsharp/pars.fsy"
                 : SynPat list));
//# 9226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3201 "src/fsharp/pars.fsy"
                             SynPat.QuoteExpr(_1, lhs parseState) 
                   )
//# 3201 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3204 "src/fsharp/pars.fsy"
                             SynPat.DeprecatedCharRange (_1, _3, rhs2 parseState 1 3) 
                   )
//# 3204 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3207 "src/fsharp/pars.fsy"
                             let rs, m = _2 in SynPat.Record (rs, rhs2 parseState 1 3) 
                   )
//# 3207 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9262 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3210 "src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(false, _2, lhs parseState) 
                   )
//# 3210 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3213 "src/fsharp/pars.fsy"
                             SynPat.ArrayOrList(true, _2, lhs parseState) 
                   )
//# 3213 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3216 "src/fsharp/pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
//# 3216 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3219 "src/fsharp/pars.fsy"
                             SynPat.OptionalVal(_2, lhs parseState) 
                   )
//# 3219 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3222 "src/fsharp/pars.fsy"
                             let vis, lidwd = _1 
                             if not (isNilOrSingleton lidwd.Lid) || String.isLeadingIdentifierCharacterUpperCase (List.head lidwd.Lid).idText
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
//# 3222 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9319 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3228 "src/fsharp/pars.fsy"
                             SynPat.Const (fst _1, snd _1) 
                   )
//# 3228 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3231 "src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool false, lhs parseState) 
                   )
//# 3231 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3234 "src/fsharp/pars.fsy"
                             SynPat.Const(SynConst.Bool true, lhs parseState) 
                   )
//# 3234 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3237 "src/fsharp/pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
//# 3237 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3240 "src/fsharp/pars.fsy"
                             let m = lhs parseState
                             SynPat.Paren(_2 m, m) 
                   )
//# 3240 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3244 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let m = rhs2 parseState 1 2
                             let parenPat = SynPat.Paren(_2 m, m)
                             patFromParseError parenPat 
                   )
//# 3244 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3250 "src/fsharp/pars.fsy"
                             let innerPat = patFromParseError (SynPat.Wild (rhs parseState 2))
                             SynPat.Paren(innerPat, lhs parseState) 
                   )
//# 3250 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9400 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3254 "src/fsharp/pars.fsy"
                             let parenM = rhs parseState 1
                             reportParseErrorAt parenM (FSComp.SR.parsUnmatchedParen())
                             let innerPat = patFromParseError (SynPat.Wild parenM.EndRange)
                             let parenPat = SynPat.Paren(innerPat, parenM)
                             patFromParseError parenPat 
                   )
//# 3254 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3261 "src/fsharp/pars.fsy"
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3261 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3264 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
//# 3264 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3268 "src/fsharp/pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
//# 3268 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3271 "src/fsharp/pars.fsy"
                              reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
//# 3271 "src/fsharp/pars.fsy"
                 : 'atomicPattern));
//# 9463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3276 "src/fsharp/pars.fsy"
                             (fun m -> _1) 
                   )
//# 3276 "src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9474 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3279 "src/fsharp/pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit, m)) 
                   )
//# 3279 "src/fsharp/pars.fsy"
                 : 'parenPatternBody));
//# 9484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3308 "src/fsharp/pars.fsy"
                             SynPat.As(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3308 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3311 "src/fsharp/pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
//# 3311 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3314 "src/fsharp/pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
//# 3314 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9519 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3317 "src/fsharp/pars.fsy"
                             SynPat.Ands(List.rev _1, rhs2 parseState 1 3) 
                   )
//# 3317 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3320 "src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1, _3, lhsm) 
                   )
//# 3320 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3324 "src/fsharp/pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2, _1, lhsm) 
                   )
//# 3324 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3328 "src/fsharp/pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [ SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3) ], None, lhs parseState) 
                   )
//# 3328 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3330 "src/fsharp/pars.fsy"
                                         _1 
                   )
//# 3330 "src/fsharp/pars.fsy"
                 : 'parenPattern));
//# 9579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3334 "src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3334 "src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3337 "src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3337 "src/fsharp/pars.fsy"
                 : 'tupleParenPatternElements));
//# 9603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3341 "src/fsharp/pars.fsy"
                             _3 :: _1 
                   )
//# 3341 "src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3344 "src/fsharp/pars.fsy"
                             _3 :: _1 :: [] 
                   )
//# 3344 "src/fsharp/pars.fsy"
                 : 'conjParenPatternElements));
//# 9627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3348 "src/fsharp/pars.fsy"
                             [_1], lhs parseState 
                   )
//# 3348 "src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3351 "src/fsharp/pars.fsy"
                             let r = _1 in let (rs, dropMark) = _3 in (r :: rs), lhs parseState 
                   )
//# 3351 "src/fsharp/pars.fsy"
                 : 'recordPatternElementsAux));
//# 9652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3355 "src/fsharp/pars.fsy"
                           let mEquals = rhs parseState 2
                           (List.frontAndBack _1.Lid, mEquals, _3) 
                   )
//# 3355 "src/fsharp/pars.fsy"
                 : 'recordPatternElement));
//# 9665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3360 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 3360 "src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3363 "src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 3363 "src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3366 "src/fsharp/pars.fsy"
                             _1 :: _3 
                   )
//# 3366 "src/fsharp/pars.fsy"
                 : 'listPatternElements));
//# 9700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3371 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 3371 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3374 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                             exprFromParseError _2 
                   )
//# 3374 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3378 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3378 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9736 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3383 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 3383 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3386 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3386 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3392 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 3392 "src/fsharp/pars.fsy"
                 : 'typedSequentialExprBlockR));
//# 9770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3395 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 3395 "src/fsharp/pars.fsy"
                 : 'typedSequentialExprBlockR));
//# 9781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3399 "src/fsharp/pars.fsy"
                           SynExpr.Typed (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3399 "src/fsharp/pars.fsy"
                 : 'typedSequentialExpr));
//# 9793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3402 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 3402 "src/fsharp/pars.fsy"
                 : 'typedSequentialExpr));
//# 9804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3406 "src/fsharp/pars.fsy"
                           checkEndOfFileError _2; _1 
                   )
//# 3406 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3410 "src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.SuppressNeither, true, _1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3410 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3413 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3413 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3416 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3416 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3419 "src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.SuppressNeither, false, _1, _3, unionRanges _1.Range _3.Range ) 
                   )
//# 3419 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3422 "src/fsharp/pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.SuppressNeither, false, _1, _4, unionRanges _1.Range _4.Range) 
                   )
//# 3422 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3425 "src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            let mLetKwd, isUse = match hwlb with (BindingSetPreAttrs(m, _, isUse, _, _))  -> m, isUse
                            let usedKeyword = if isUse then "use" else "let"
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedExpressionAfterLet(usedKeyword, usedKeyword))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m, hwlb, arbExpr("seqExpr", fauxRange)) 
                   )
//# 3425 "src/fsharp/pars.fsy"
                 : 'sequentialExpr));
//# 9893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3438 "src/fsharp/pars.fsy"
                             debugPrint("recovering via error"); true 
                   )
//# 3438 "src/fsharp/pars.fsy"
                 : 'recover));
//# 9903 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3441 "src/fsharp/pars.fsy"
                             debugPrint("recovering via EOF"); false 
                   )
//# 3441 "src/fsharp/pars.fsy"
                 : 'recover));
//# 9914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3445 "src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let mEquals = rhs parseState 3
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            SynExprAndBang(spBind, _1, true, _2, mEquals, _4, m) :: _6 
                   )
//# 3445 "src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3451 "src/fsharp/pars.fsy"
                            _5 "and!" (rhs parseState 1)  // report unterminated error
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let mEquals = rhs parseState 3
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            SynExprAndBang(spBind, _1, true, _2, mEquals, _4, m) :: _7 
                   )
//# 3451 "src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3458 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 3458 "src/fsharp/pars.fsy"
                 : 'moreBinders));
//# 9961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3462 "src/fsharp/pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range, _1, _3) 
                   )
//# 3462 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3465 "src/fsharp/pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2, _1, arbExpr("declExpr1", (rhs parseState 3))) 
                   )
//# 3465 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3471 "src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _2.Range, hwlb, _2) 
                   )
//# 3471 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 9997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3475 "src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m, hwlb, arbExpr("declExpr2", (rhs parseState 2))) 
                   )
//# 3475 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3480 "src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _3.Range, hwlb, _3) 
                   )
//# 3480 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3484 "src/fsharp/pars.fsy"
                            let hwlb, m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3), hwlb, arbExpr("declExpr3", (rhs parseState 3))) 
                   )
//# 3484 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3489 "src/fsharp/pars.fsy"
                            let e = snd _1
                            SynExpr.Do (e, unionRanges (rhs parseState 1).StartRange e.Range) 
                   )
//# 3489 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3493 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3493 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3496 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 3496 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3499 "src/fsharp/pars.fsy"
                             let mMatch = rhs parseState 1
                             let mWith, (clauses, mLast) = _3
                             let spBind = DebugPointAtBinding.Yes(unionRanges mMatch mWith)
                             SynExpr.Match (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3499 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3505 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery
                             exprFromParseError _2 
                   )
//# 3505 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3510 "src/fsharp/pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding.Yes(unionRanges mMatch mWith) 
                             SynExpr.MatchBang (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
//# 3510 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3516 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
//# 3516 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3521 "src/fsharp/pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = DebugPointAtTry.Yes mTry
                             let mWith, (clauses, mLast) = _3 
                             let spWith = DebugPointAtWith.Yes mWith
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith (_2, mTryToWith, clauses, mWithToLast, mTryToLast, spTry, spWith) 
                   )
//# 3521 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3531 "src/fsharp/pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry())
                             exprFromParseError _2 
                   )
//# 3531 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10162 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3537 "src/fsharp/pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = DebugPointAtTry.Yes mTry
                             let spFinally = DebugPointAtFinally.Yes (rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally (_2, _4, mTryToLast, spTry, spFinally) 
                   )
//# 3537 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3544 "src/fsharp/pars.fsy"
                             let mIf = rhs parseState 1
                             _3 _2 mIf false 
                   )
//# 3544 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3548 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()) 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
//# 3548 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3556 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = rhs parseState 1
                             let mEnd = m.EndRange
                             let spIfToThen = DebugPointAtBinding.Yes mEnd
                             exprFromParseError (SynExpr.IfThenElse (m, false, arbExpr("ifGuard1", mEnd), m, arbExpr("thenBody1", mEnd), None, None, spIfToThen, true, m, m)) 
                   )
//# 3556 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10225 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3565 "src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3565 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3568 "src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3568 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3571 "src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3571 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3574 "src/fsharp/pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3574 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3577 "src/fsharp/pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3577 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3580 "src/fsharp/pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
//# 3580 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3583 "src/fsharp/pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While (spWhile, _2, _4, mWhileAll) 
                   )
//# 3583 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3589 "src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While (spWhile, _2, _4, mWhileAll)) 
                   )
//# 3589 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3596 "src/fsharp/pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While (spWhile, _2, arbExpr("whileBody1", mWhileBodyArb), mWhileAll) 
                   )
//# 3596 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10342 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3604 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, _2, arbExpr("whileBody2", mWhileBodyArb), mWhileAll))  
                   )
//# 3604 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3612 "src/fsharp/pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             arbExpr("whileLoop1", rhs parseState 1)  
                   )
//# 3612 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3616 "src/fsharp/pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, arbExpr("whileGuard1", mWhileHeader), arbExpr("whileBody3", mWhileBodyArb), mWhileAll))  
                   )
//# 3616 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3624 "src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3624 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3630 "src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, mForLoopAll) 
                   )
//# 3630 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10423 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3638 "src/fsharp/pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2a", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3638 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3647 "src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3647 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3656 "src/fsharp/pars.fsy"
                             let (a, b, ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody1", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3656 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3665 "src/fsharp/pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d, e) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For (spBind, a, b, c, d, e, _4, mForLoopAll) 
                   )
//# 3665 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3672 "src/fsharp/pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d, e) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, e, _4, mForLoopAll)) 
                   )
//# 3672 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3681 "src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d, e) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For (spBind, a, b, c, d, e, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3681 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3690 "src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d, e) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, e, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3690 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3699 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d, e) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, e, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3699 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3709 "src/fsharp/pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             SynExpr.For (spBind, mkSynId mForLoopHeader "_loopVar", None, arbExpr("startLoopRange1", mForLoopHeader), true, arbExpr("endLoopRange1", rhs parseState 3), _4, mForLoopAll) 
                   )
//# 3709 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3716 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12", (rhs parseState 1)) 
                   )
//# 3716 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3720 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll) 
                   )
//# 3720 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3728 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll)) 
                   )
//# 3728 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10636 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3736 "src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3736 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3739 "src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturnFrom ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3739 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3742 "src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturn ((_1, not _1), arbExpr("yield", mYieldAll), mYieldAll) 
                   )
//# 3742 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3746 "src/fsharp/pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturnFrom ((_1, not _1), arbExpr("yield!", mYieldAll), mYieldAll) 
                   )
//# 3746 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3750 "src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.Yes(rhs2 parseState 1 5)
                            let mEquals = rhs parseState 3
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, Some mEquals, _4, _7, _8, m) 
                   )
//# 3750 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3756 "src/fsharp/pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1)  // report unterminated error 
                            let spBind = DebugPointAtBinding.Yes(unionRanges (rhs parseState 1) _4.Range)
                            let mEquals = rhs parseState 3
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, Some mEquals, _4, _7, _8, m) 
                   )
//# 3756 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3763 "src/fsharp/pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = DebugPointAtBinding.Yes(unionRanges (rhs parseState 1) _4.Range) 
                            let mEquals = rhs parseState 3
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, Some mEquals, _4, [], SynExpr.ImplicitZero m, mAll) 
                   )
//# 3763 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3771 "src/fsharp/pars.fsy"
                            let spBind = DebugPointAtBinding.NoneAtDo
                            SynExpr.LetOrUseBang(spBind, false, true, SynPat.Const(SynConst.Unit, _2.Range), None, _2, [], _5, unionRanges (rhs parseState 1) _5.Range) 
                   )
//# 3771 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3775 "src/fsharp/pars.fsy"
                            SynExpr.DoBang (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 3775 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3778 "src/fsharp/pars.fsy"
                            let spBind = DebugPointAtFor.Yes (rhs2 parseState 1 2)
                            let (a, b, _) = _2 in SynExpr.ForEach (spBind, SeqExprOnly true, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 3778 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3782 "src/fsharp/pars.fsy"
                            SynExpr.Fixed (_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3782 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3785 "src/fsharp/pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(), lhs parseState))
                            SynExpr.YieldOrReturn ((true, true), _2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
//# 3785 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3789 "src/fsharp/pars.fsy"
                            SynExpr.TypeTest (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3789 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3792 "src/fsharp/pars.fsy"
                            SynExpr.Upcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3792 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3795 "src/fsharp/pars.fsy"
                            SynExpr.Downcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3795 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3798 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
//# 3798 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3801 "src/fsharp/pars.fsy"
                            mkSynAssign _1 _3 
                   )
//# 3801 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3804 "src/fsharp/pars.fsy"
                            let exprs, commas = _1
                            SynExpr.Tuple (false, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
//# 3804 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3808 "src/fsharp/pars.fsy"
                            SynExpr.JoinIn (_1, rhs parseState 2, _3, unionRanges _1.Range _3.Range) 
                   )
//# 3808 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10893 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3811 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
//# 3811 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3814 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3814 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3817 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
//# 3817 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3820 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
//# 3820 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3823 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
//# 3823 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3826 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3826 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3829 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
//# 3829 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3832 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3832 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 10992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3835 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
//# 3835 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3838 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
//# 3838 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3841 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<"))  
                            exprFromParseError (mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3841 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3845 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
//# 3845 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3848 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3848 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3851 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3851 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3854 "src/fsharp/pars.fsy"
                            let tupExpr = SynExpr.Tuple (false, [_1;_3], [rhs parseState 2], unionRanges _1.Range _3.Range)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range _3.Range) 
                   )
//# 3854 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11083 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3858 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3858 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3861 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
//# 3861 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3864 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
//# 3864 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3867 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3867 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3870 "src/fsharp/pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
//# 3870 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3873 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3873 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3877 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3877 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11170 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3881 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3881 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3885 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3885 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3889 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3889 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3893 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3893 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3897 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3897 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3901 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3901 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3905 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3905 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3909 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3909 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3913 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3913 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11282 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3917 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3917 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3921 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3921 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11308 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3925 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3925 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3929 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")) 
                            let tupExpr = SynExpr.Tuple (false, [_1;(arbExpr("declExprInfix", (rhs parseState 3).StartRange))], [rhs parseState 2], unionRanges _1.Range (rhs parseState 3).StartRange)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
//# 3929 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3934 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3934 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3938 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3938 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3942 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3942 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3946 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3946 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3950 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
//# 3950 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3954 "src/fsharp/pars.fsy"
                             let wholem = rhs2 parseState 1 3
                             let opm = rhs parseState 2
                             SynExpr.IndexRange(Some _1, opm, Some _3, rhs parseState 1, rhs parseState 3, wholem) 
                   )
//# 3954 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3959 "src/fsharp/pars.fsy"
                             let wholem = rhs2 parseState 1 2
                             let opm = rhs parseState 2
                             SynExpr.IndexRange(Some _1, opm, None, rhs parseState 1, opm, wholem) 
                   )
//# 3959 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3964 "src/fsharp/pars.fsy"
                             let wholem = rhs2 parseState 1 2
                             let opm = rhs parseState 1
                             SynExpr.IndexRange(None, opm, Some _2, opm, rhs parseState 2, wholem) 
                   )
//# 3964 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11437 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3969 "src/fsharp/pars.fsy"
                             let m = rhs parseState 1
                             SynExpr.IndexRange(None, m, None, m, m, m) 
                   )
//# 3969 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3973 "src/fsharp/pars.fsy"
                           if not (parseState.LexBuffer.SupportsFeature LanguageFeature.FromEndSlicing) then 
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.fromEndSlicingRequiresVFive())
                           if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidPrefixOperator())
                           let m = (rhs2 parseState 1 2)
                           SynExpr.IndexFromEnd(_2, m) 
                   )
//# 3973 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3979 "src/fsharp/pars.fsy"
                                                                  _1 
                   )
//# 3979 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11475 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3983 "src/fsharp/pars.fsy"
                             let con = SynConst.String (_1, SynStringKind.Regular, rhs parseState 1)
                             let arg2 = SynExpr.Const (con, con.Range (rhs parseState 1)) 
                             arg2 
                   )
//# 3983 "src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11488 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3988 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 3988 "src/fsharp/pars.fsy"
                 : 'dynamicArg));
//# 11500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3992 "src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3992 "src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3995 "src/fsharp/pars.fsy"
                             rhs parseState 1, _2 
                   )
//# 3995 "src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 3998 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith())
                             rhs parseState 1, _2 
                   )
//# 3998 "src/fsharp/pars.fsy"
                 : 'withClauses));
//# 11535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4003 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4003 "src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4006 "src/fsharp/pars.fsy"
                             _2 
                   )
//# 4006 "src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4009 "src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 4009 "src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11569 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4014 "src/fsharp/pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
//# 4014 "src/fsharp/pars.fsy"
                 : 'withPatternClauses));
//# 11581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4021 "src/fsharp/pars.fsy"
                             _1, _2 
                   )
//# 4021 "src/fsharp/pars.fsy"
                 : 'patternAndGuard));
//# 11593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Range * SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4025 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let mArrow, resultExpr = _2
                            let mLast = resultExpr.Range
                            let m = unionRanges resultExpr.Range pat.Range
                            [SynMatchClause(pat, guard, (Some mArrow), resultExpr, m, DebugPointAtTarget.Yes)], mLast 
                   )
//# 4025 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Range * SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4032 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let mArrow, resultExpr = _2
                            let clauses, mLast = _4
                            let m = unionRanges resultExpr.Range pat.Range
                            (SynMatchClause(pat, guard, (Some mArrow), resultExpr, m, DebugPointAtTarget.Yes) :: clauses), mLast 
                   )
//# 4032 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11626 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4039 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let clauses, mLast = _4
                            let patm = pat.Range
                            let m = guard |> Option.map (fun e -> unionRanges patm e.Range) |> Option.defaultValue patm
                            (SynMatchClause(pat, guard, None, arbExpr ("patternClauses1", m.EndRange), m, DebugPointAtTarget.Yes) :: clauses), mLast 
                   )
//# 4039 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Range * SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4046 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let mArrow, resultExpr = _2
                            let mLast = rhs parseState 3 
                            let m = unionRanges resultExpr.Range pat.Range
                            [SynMatchClause(pat, guard, (Some mArrow), resultExpr, m, DebugPointAtTarget.Yes)], mLast  
                   )
//# 4046 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Range * SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4053 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let mArrow, resultExpr = _2
                            let m = unionRanges resultExpr.Range pat.Range
                            [SynMatchClause(pat, guard, (Some mArrow), resultExpr, m, DebugPointAtTarget.Yes)], m 
                   )
//# 4053 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4059 "src/fsharp/pars.fsy"
                            let pat, guard = _1
                            let patm = pat.Range
                            let m = guard |> Option.map (fun e -> unionRanges patm e.Range) |> Option.defaultValue patm
                            [SynMatchClause(pat, guard, None, arbExpr ("patternClauses2", m.EndRange), m, DebugPointAtTarget.Yes)], m 
                   )
//# 4059 "src/fsharp/pars.fsy"
                 : 'patternClauses));
//# 11687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4066 "src/fsharp/pars.fsy"
                            Some _2 
                   )
//# 4066 "src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4069 "src/fsharp/pars.fsy"
                            None 
                   )
//# 4069 "src/fsharp/pars.fsy"
                 : 'patternGuard));
//# 11708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4073 "src/fsharp/pars.fsy"
                            let mArrow = rhs parseState 1
                            mArrow, _2 
                   )
//# 4073 "src/fsharp/pars.fsy"
                 : Range * SynExpr));
//# 11720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4078 "src/fsharp/pars.fsy"
                             let exprThen, mThen = _1
                             let mElse, elseExpr = _2
                             (fun exprGuard mIf isElif ->
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match elseExpr with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = DebugPointAtBinding.Yes(mIfToThen)
                                 SynExpr.IfThenElse (mIf, isElif, exprGuard, mThen, exprThen, mElse, elseExpr, spIfToThen, false, mIfToThen, mIfToEndOfLastBranch)) 
                   )
//# 4078 "src/fsharp/pars.fsy"
                 : 'ifExprCases));
//# 11739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4089 "src/fsharp/pars.fsy"
                             _2, rhs parseState 1 
                   )
//# 4089 "src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4092 "src/fsharp/pars.fsy"
                             _3, rhs parseState 1 
                   )
//# 4092 "src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4095 "src/fsharp/pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen())
                             exprFromParseError _3, rhs parseState 1 
                   )
//# 4095 "src/fsharp/pars.fsy"
                 : 'ifExprThen));
//# 11775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4100 "src/fsharp/pars.fsy"
                             None, None 
                   )
//# 4100 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4103 "src/fsharp/pars.fsy"
                             let mElse = rhs parseState 1
                             Some mElse, Some _2 
                   )
//# 4103 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4107 "src/fsharp/pars.fsy"
                             let mElse = rhs parseState 1
                             Some mElse, Some _3 
                   )
//# 4107 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4111 "src/fsharp/pars.fsy"
                             let mElse = rhs parseState 1
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse())
                             Some mElse, Some (exprFromParseError _3) 
                   )
//# 4111 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4116 "src/fsharp/pars.fsy"
                             let mElif = rhs parseState 1
                             // verify if `ELIF` is not a merged token
                             let length = mElif.EndColumn - mElif.StartColumn
                             if length > 4 then
                                 let mElse = mkRange mElif.FileName (mkPos mElif.StartLine mElif.StartColumn) (mkPos mElif.StartLine (mElif.StartColumn + 4))
                                 let mIf = mkRange mElif.FileName (mkPos mElif.StartLine (mElif.EndColumn - 2)) (mkPos mElif.StartLine mElif.EndColumn)
                                 Some mElse, (Some (_3 _2 mIf false))
                             else
                                 None, Some (_3 _2 mElif true) 
                   )
//# 4116 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4127 "src/fsharp/pars.fsy"
                             None, Some (exprFromParseError _2) 
                   )
//# 4127 "src/fsharp/pars.fsy"
                 : 'ifExprElifs));
//# 11856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4131 "src/fsharp/pars.fsy"
                             let exprs, commas = _1 in (_3 :: exprs), ((rhs parseState 2) :: commas) 
                   )
//# 4131 "src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4134 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs, commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1", zeroWidthAtNextToken)) :: exprs), (rhs parseState 2) :: commas 
                   )
//# 4134 "src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11883 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4140 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2", zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
//# 4140 "src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4145 "src/fsharp/pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
//# 4145 "src/fsharp/pars.fsy"
                 : 'tupleExpr));
//# 11909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4149 "src/fsharp/pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
//# 4149 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4152 "src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~" + (_1)) _2 
                   )
//# 4152 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4156 "src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~" + (_1)) _2 
                   )
//# 4156 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4160 "src/fsharp/pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~" + (_1)) _2 
                   )
//# 4160 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4164 "src/fsharp/pars.fsy"
                             SynExpr.AddressOf (true, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4164 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4167 "src/fsharp/pars.fsy"
                             SynExpr.AddressOf (false, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4167 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4170 "src/fsharp/pars.fsy"
                             errorR (Error (FSComp.SR.parsNewExprMemberAccess (), rhs parseState 6))
                             let newExpr = SynExpr.New (false, _2, _4, unionRanges (rhs parseState 1) _4.Range)
                             _6 newExpr (lhs parseState) (rhs parseState 5) 
                   )
//# 4170 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 11997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4175 "src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 4175 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4178 "src/fsharp/pars.fsy"
                             SynExpr.New (false, _2, arbExpr("minusExpr", (rhs parseState 4)), unionRanges (rhs parseState 1) (_2).Range) 
                   )
//# 4178 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12022 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4181 "src/fsharp/pars.fsy"
                             arbExpr("minusExpr2", (rhs parseState 1)) 
                   )
//# 4181 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4184 "src/fsharp/pars.fsy"
                             SynExpr.InferredUpcast (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4184 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4187 "src/fsharp/pars.fsy"
                             SynExpr.InferredDowncast (_2, unionRanges (rhs parseState 1) _2.Range)
                   )
//# 4187 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4190 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4190 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4194 "src/fsharp/pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1, _2, unionRanges _1.Range _2.Range)  
                   )
//# 4194 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4197 "src/fsharp/pars.fsy"
                             let arg, _ = _1 
                             arg 
                   )
//# 4197 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4202 "src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~" + (_1)) arg2 
                   )
//# 4202 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4208 "src/fsharp/pars.fsy"
                             let arg, hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             arg 
                   )
//# 4208 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4214 "src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, hpa = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), hpa 
                   )
//# 4214 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4219 "src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
//# 4219 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12145 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4224 "src/fsharp/pars.fsy"
                             let arg1, _ = _1 
                             let mLessThan, mGreaterThan, _, args, commas, mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp (arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
//# 4224 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4230 "src/fsharp/pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefixPrim (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2, hpa2 
                   )
//# 4230 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4235 "src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2), hpa1 
                   )
//# 4235 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4239 "src/fsharp/pars.fsy"
                             let arg1 = SynExpr.Ident (ident("base", rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2), false 
                   )
//# 4239 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4243 "src/fsharp/pars.fsy"
                             SynExpr.LongIdent (true, LongIdentWithDots([_2], []), None, rhs parseState 2), false 
                   )
//# 4243 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4246 "src/fsharp/pars.fsy"
                             let arg1, hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
//# 4246 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4250 "src/fsharp/pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName, rhs parseState 1)), false 
                   )
//# 4250 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4253 "src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4253 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4256 "src/fsharp/pars.fsy"
                             _2 (lhs parseState), false 
                   )
//# 4256 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4259 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2)), false 
                   )
//# 4259 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4263 "src/fsharp/pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList (false, [ ], lhs parseState), false  
                   )
//# 4263 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4267 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList (false, [ ], rhs parseState 1)), false  
                   )
//# 4267 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4272 "src/fsharp/pars.fsy"
                             let exprs, commas = _3
                             let m = rhs2 parseState 1 4
                             SynExpr.Tuple (true, List.rev exprs, List.rev commas, m), false 
                   )
//# 4272 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4277 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedBracket());
                             let exprs, commas = _3
                             let m = (rhs parseState 1, exprs) ||> unionRangeWithListBy (fun e -> e.Range)
                             SynExpr.Tuple (true, List.rev exprs, List.rev commas, m), false 
                   )
//# 4277 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4283 "src/fsharp/pars.fsy"
                             _1, false 
                   )
//# 4283 "src/fsharp/pars.fsy"
                 : SynExpr * bool));
//# 12332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4287 "src/fsharp/pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
//# 4287 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4291 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt (rhs parseState 3) (FSComp.SR.nrGlobalUsedOnlyAsFirstName()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4291 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4297 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
//# 4297 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4302 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot (e, fixedLhsm)) 
                   )
//# 4302 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4308 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 if parseState.LexBuffer.ReportLibraryOnlyFeatures then libraryOnlyError(lhs parseState)
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e, mkSynCaseName lhsm opNameCons, (fst _5), lhsm)) 
                   )
//# 4308 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4313 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> 
                                 // Check for expr.( * )
                                 // Note that "*" is parsed as an expression (it is allowed in "foo.[3,*]")
                                 match _2 with
                                 | SynExpr.IndexRange (None, opm, None, _m1, _m2, _) ->
                                     mkSynDot dotm lhsm e (ident(CompileOpName "*", opm))
                                 | _ ->
                                     if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                                         mlCompatError (FSComp.SR.mlCompatMultiPrefixTyparsNoLongerSupported()) (lhs parseState) 
                                     else
                                         mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState) 
                                     mkSynDotParenGet lhsm dotm e _2) 
                   )
//# 4313 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4327 "src/fsharp/pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
//# 4327 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4330 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
//# 4330 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4334 "src/fsharp/pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1", mArg))) 
                   )
//# 4334 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4338 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2", mArg)))) 
                   )
//# 4338 "src/fsharp/pars.fsy"
                 : 'atomicExprQualification));
//# 12470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4345 "src/fsharp/pars.fsy"
                             SynExpr.Const (fst _1, snd _1) 
                   )
//# 4345 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4348 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4348 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4351 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4351 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4354 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4354 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4357 "src/fsharp/pars.fsy"
                             let parts, synStringKind = _1
                             SynExpr.InterpolatedString(parts, synStringKind, rhs parseState 1) 
                   )
//# 4357 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4361 "src/fsharp/pars.fsy"
                             SynExpr.Null (lhs parseState) 
                   )
//# 4361 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4364 "src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool false, lhs parseState) 
                   )
//# 4364 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4367 "src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Bool true, lhs parseState) 
                   )
//# 4367 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12556 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4370 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4370 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4373 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4373 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4376 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4376 "src/fsharp/pars.fsy"
                 : SynExpr));
//# 12589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4380 "src/fsharp/pars.fsy"
                             SynExpr.Paren (_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
//# 4380 "src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4383 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
//# 4383 "src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4386 "src/fsharp/pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr", (lhs parseState))  
                   )
//# 4386 "src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4389 "src/fsharp/pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
//# 4389 "src/fsharp/pars.fsy"
                 : 'beginEndExpr));
//# 12632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4393 "src/fsharp/pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
//# 4393 "src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12646 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4397 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, mExpr))  
                   )
//# 4397 "src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12661 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4402 "src/fsharp/pars.fsy"
                             (* silent recovery *) SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr", (rhs parseState 2)), false, lhs parseState)  
                   )
//# 4402 "src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4405 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr2", (rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
//# 4405 "src/fsharp/pars.fsy"
                 : 'quoteExpr));
//# 12686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4410 "src/fsharp/pars.fsy"
                              _2 (lhs parseState) 
                   )
//# 4410 "src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12697 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4413 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
//# 4413 "src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12710 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4417 "src/fsharp/pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList (true, [ ], lhs parseState) 
                   )
//# 4417 "src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4420 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar())  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList (true, [ ], rhs parseState 1)) 
                   )
//# 4420 "src/fsharp/pars.fsy"
                 : 'arrayExpr));
//# 12733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4426 "src/fsharp/pars.fsy"
                             SynExpr.Const (SynConst.Unit, (rhs2 parseState 1 2)) 
                   )
//# 4426 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4429 "src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren (_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
//# 4429 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4433 "src/fsharp/pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).End
                             SynExpr.Paren (exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
//# 4433 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4438 "src/fsharp/pars.fsy"
                             // silent recovery
                             SynExpr.Paren (arbExpr("parenExpr1", (rhs parseState 1).EndRange), (rhs parseState 1), Some(rhs parseState 3), (rhs2 parseState 1 3)) 
                   )
//# 4438 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4442 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
//# 4442 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4447 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
//# 4447 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4452 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
//# 4452 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4457 "src/fsharp/pars.fsy"
                             let lparenRange = (rhs parseState 1)
                             reportParseErrorAt lparenRange (FSComp.SR.parsUnmatchedParen())
                             SynExpr.Paren(arbExpr("parenExpr2obecs", lparenRange.EndRange), lparenRange, None, lparenRange) 
                   )
//# 4457 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4462 "src/fsharp/pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             arbExpr("parenExpr2", (lhs parseState))  
                   )
//# 4462 "src/fsharp/pars.fsy"
                 : 'parenExpr));
//# 12843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4474 "src/fsharp/pars.fsy"
                             (fun m -> SynExpr.TraitCall (_1, _4, _6, m)) 
                   )
//# 4474 "src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12857 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4477 "src/fsharp/pars.fsy"
                             (fun _m -> _1) 
                   )
//# 4477 "src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4480 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 4480 "src/fsharp/pars.fsy"
                 : 'parenExprBody));
//# 12879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4484 "src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4484 "src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4487 "src/fsharp/pars.fsy"
                             List.rev _2 
                   )
//# 4487 "src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypars));
//# 12902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4491 "src/fsharp/pars.fsy"
                            _3 :: _1
                   )
//# 4491 "src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4494 "src/fsharp/pars.fsy"
                             [_1] 
                   )
//# 4494 "src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
//# 12925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4498 "src/fsharp/pars.fsy"
                             let m, r = _2 in r (rhs2 parseState 1 3) 
                   )
//# 4498 "src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4501 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            let m, r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
//# 4501 "src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4507 "src/fsharp/pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr", rhs2 parseState 1 3)  
                   )
//# 4507 "src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4511 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record (None, None, [], rhs parseState 1) 
                   )
//# 4511 "src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4516 "src/fsharp/pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record (None, None, [], m) 
                   )
//# 4516 "src/fsharp/pars.fsy"
                 : 'braceExpr));
//# 12994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4521 "src/fsharp/pars.fsy"
                             (lhs parseState), (fun m -> let a, b, c = _1 in SynExpr.Record (a, b, c, m)) 
                   )
//# 4521 "src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 13005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4524 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4524 "src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 13016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'computationExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4527 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4527 "src/fsharp/pars.fsy"
                 : 'braceExprBody));
//# 13027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4531 "src/fsharp/pars.fsy"
                            (fun lhsm -> SynExpr.ArrayOrListComputed (false, _1, lhsm)) 
                   )
//# 4531 "src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 13038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4534 "src/fsharp/pars.fsy"
                            (fun lhsm -> SynExpr.ArrayOrList (false, [ ], lhsm)) 
                   )
//# 4534 "src/fsharp/pars.fsy"
                 : 'listExprElements));
//# 13048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4538 "src/fsharp/pars.fsy"
                            (fun lhsm -> SynExpr.ArrayOrListComputed (true, _1, lhsm)) 
                   )
//# 4538 "src/fsharp/pars.fsy"
                 : 'arrayExprElements));
//# 13059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4541 "src/fsharp/pars.fsy"
                            (fun lhsm -> SynExpr.ArrayOrList (true, [ ], lhsm)) 
                   )
//# 4541 "src/fsharp/pars.fsy"
                 : 'arrayExprElements));
//# 13069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sequentialExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4545 "src/fsharp/pars.fsy"
                            _1.Range, (fun lhsm -> SynExpr.ComputationExpr (false, _1, lhsm)) 
                   )
//# 4545 "src/fsharp/pars.fsy"
                 : 'computationExpr));
//# 13080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4549 "src/fsharp/pars.fsy"
                            SynExpr.YieldOrReturn ((true, false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 4549 "src/fsharp/pars.fsy"
                 : 'arrowThenExprR));
//# 13091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4553 "src/fsharp/pars.fsy"
                            (_1, _3, true) 
                   )
//# 4553 "src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4556 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder", (rhs parseState 2)), false) 
                   )
//# 4556 "src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4560 "src/fsharp/pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2", (rhs parseState 1).EndRange), false) 
                   )
//# 4560 "src/fsharp/pars.fsy"
                 : 'forLoopBinder));
//# 13129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4565 "src/fsharp/pars.fsy"
                             let mEquals = rhs parseState 2
                             idOfPat parseState (rhs parseState 1) _1, Some mEquals, _3, _4, _5 
                   )
//# 4565 "src/fsharp/pars.fsy"
                 : 'forLoopRange));
//# 13144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4569 "src/fsharp/pars.fsy"
                                  true 
                   )
//# 4569 "src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4571 "src/fsharp/pars.fsy"
                                  false 
                   )
//# 4571 "src/fsharp/pars.fsy"
                 : 'forLoopDirection));
//# 13164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optInlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4575 "src/fsharp/pars.fsy"
                             if parseState.LexBuffer.ReportLibraryOnlyFeatures then libraryOnlyWarning (lhs parseState)
                             let (s, _), sm = _2, rhs parseState 2
                             (fun m ->
                                 let ilInstrs = ParseAssemblyCodeInstructions s parseState.LexBuffer.ReportLibraryOnlyFeatures parseState.LexBuffer.LanguageVersion sm
                                 SynExpr.LibraryOnlyILAssembly (box ilInstrs, _3, List.rev _4, _5, m)) 
                   )
//# 4575 "src/fsharp/pars.fsy"
                 : 'inlineAssemblyExpr));
//# 13182 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4583 "src/fsharp/pars.fsy"
                             _2 :: _1 
                   )
//# 4583 "src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13194 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4586 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 4586 "src/fsharp/pars.fsy"
                 : 'optCurriedArgExprs));
//# 13204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4590 "src/fsharp/pars.fsy"
                             None 
                   )
//# 4590 "src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4593 "src/fsharp/pars.fsy"
                             Some(_1) 
                   )
//# 4593 "src/fsharp/pars.fsy"
                 : 'opt_atomicExprAfterType));
//# 13225 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4597 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 4597 "src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4600 "src/fsharp/pars.fsy"
                              [_3] 
                   )
//# 4600 "src/fsharp/pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
//# 13248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4604 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 4604 "src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4607 "src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 4607 "src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4610 "src/fsharp/pars.fsy"
                             [] 
                   )
//# 4610 "src/fsharp/pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
//# 13280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4614 "src/fsharp/pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None, None) l _6 
                            let (SynExprRecordField(_, _, _, inheritsSep)) = List.head l
                            let bindings = List.tail l
                            (Some (_2, arg, rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
//# 4614 "src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4623 "src/fsharp/pars.fsy"
                           let a, b = _1 in (None, a, b) 
                   )
//# 4623 "src/fsharp/pars.fsy"
                 : 'recdExpr));
//# 13312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4627 "src/fsharp/pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_, _) as f), None, m) ->  
                                 let f = mkRecdField f
                                 let mEquals = rhs parseState 2
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some mEquals, Some _3) l _5
                                 (None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
//# 4627 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13333 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4641 "src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, [ SynExprRecordField(f, None, None, None)  ]) 
                   )
//# 4641 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4648 "src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           let mEquals = rhs parseState 2
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, [ SynExprRecordField(f, Some mEquals, None, None) ]) 
                   )
//# 4648 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4657 "src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let mEquals = rhs parseState 2
                           let l = List.rev _4
                           let l = rebindRanges (f, Some mEquals, Some _3) l _5
                           (None, l) 
                   )
//# 4657 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4666 "src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4666 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4671 "src/fsharp/pars.fsy"
                            (Some (_1, (rhs parseState 2, None)), []) 
                   )
//# 4671 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4674 "src/fsharp/pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
//# 4674 "src/fsharp/pars.fsy"
                 : 'recdExprCore));
//# 13425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4680 "src/fsharp/pars.fsy"
                            Some _1 
                   )
//# 4680 "src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4683 "src/fsharp/pars.fsy"
                            None 
                   )
//# 4683 "src/fsharp/pars.fsy"
                 : 'opt_seps_recd));
//# 13446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4687 "src/fsharp/pars.fsy"
                            (rhs parseState 1), None 
                   )
//# 4687 "src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4690 "src/fsharp/pars.fsy"
                            let m = (rhs parseState 1) in (m, Some m.End) 
                   )
//# 4690 "src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4693 "src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
//# 4693 "src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4696 "src/fsharp/pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
//# 4696 "src/fsharp/pars.fsy"
                 : 'seps_recd));
//# 13486 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4702 "src/fsharp/pars.fsy"
                           mkRecdField _1 
                   )
//# 4702 "src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4705 "src/fsharp/pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
//# 4705 "src/fsharp/pars.fsy"
                 : 'pathOrUnderscore));
//# 13509 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4711 "src/fsharp/pars.fsy"
                            (_3, Some _2) :: _1 
                   )
//# 4711 "src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4714 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 4714 "src/fsharp/pars.fsy"
                 : 'recdExprBindings));
//# 13532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4718 "src/fsharp/pars.fsy"
                            let mEquals = rhs parseState 2
                            (_1, Some mEquals, Some _3) 
                   )
//# 4718 "src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13545 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4722 "src/fsharp/pars.fsy"
                            let mEquals = rhs parseState 2
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, Some mEquals, None) 
                   )
//# 4722 "src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4727 "src/fsharp/pars.fsy"
                            let mEquals = rhs parseState 2
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, Some mEquals, None) 
                   )
//# 4727 "src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4732 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None, None) 
                   )
//# 4732 "src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4736 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None, None) 
                   )
//# 4736 "src/fsharp/pars.fsy"
                 : 'recdBinding));
//# 13597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4747 "src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, _2, _4, mNewExpr, m)) 
                   )
//# 4747 "src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4752 "src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, [], _3, mNewExpr, m)) 
                   )
//# 4752 "src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13628 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4757 "src/fsharp/pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a, b) = _2, None in SynExpr.ObjExpr (a, b, [], [], mNewExpr, m)) 
                   )
//# 4757 "src/fsharp/pars.fsy"
                 : 'objExpr));
//# 13640 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4762 "src/fsharp/pars.fsy"
                            (_2, Some(_4, Some(_5))) 
                   )
//# 4762 "src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13654 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4765 "src/fsharp/pars.fsy"
                            (_2, Some(_4, None)) 
                   )
//# 4765 "src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4768 "src/fsharp/pars.fsy"
                            _2, None 
                   )
//# 4768 "src/fsharp/pars.fsy"
                 : 'objExprBaseCall));
//# 13678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4774 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4774 "src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4777 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 4777 "src/fsharp/pars.fsy"
                 : 'opt_objExprBindings));
//# 13699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4781 "src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder PreXmlDoc.Empty [] None mWithKwd 
                   )
//# 4781 "src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4786 "src/fsharp/pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder PreXmlDoc.Empty [] None mWithKwd 
                   )
//# 4786 "src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13725 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4791 "src/fsharp/pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b, m) -> Some b
                                               | SynMemberDefn.AutoProperty(range = m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(), m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(), x.Range)); None)) 
                   )
//# 4791 "src/fsharp/pars.fsy"
                 : 'objExprBindings));
//# 13741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4798 "src/fsharp/pars.fsy"
                                                                  _1 :: _2 
                   )
//# 4798 "src/fsharp/pars.fsy"
                 : 'objExprInterfaces));
//# 13753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4802 "src/fsharp/pars.fsy"
                            [] 
                   )
//# 4802 "src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13763 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4805 "src/fsharp/pars.fsy"
                            _1 :: _2 
                   )
//# 4805 "src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13775 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4808 "src/fsharp/pars.fsy"
                            (* silent recovery *) _2 
                   )
//# 4808 "src/fsharp/pars.fsy"
                 : 'opt_objExprInterfaces));
//# 13786 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4812 "src/fsharp/pars.fsy"
                           SynInterfaceImpl(_2, _3, lhs parseState) 
                   )
//# 4812 "src/fsharp/pars.fsy"
                 : 'objExprInterface));
//# 13801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4816 "src/fsharp/pars.fsy"
                             _2 true 
                   )
//# 4816 "src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4819 "src/fsharp/pars.fsy"
                             _1 false 
                   )
//# 4819 "src/fsharp/pars.fsy"
                 : 'braceBarExpr));
//# 13823 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4823 "src/fsharp/pars.fsy"
                            let orig, flds = _2
                            let flds = 
                                flds |> List.choose (function 
                                  | SynExprRecordField((LongIdentWithDots([id], _), _), mEquals, Some e, _) -> Some (id, mEquals, e) 
                                  | SynExprRecordField((LongIdentWithDots([id], _), _), mEquals, None, _) -> Some (id, mEquals, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 3
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4823 "src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4833 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let orig, flds = _2 
                            let flds = 
                                flds |> List.choose (function 
                                  | SynExprRecordField((LongIdentWithDots([id], _), _), mEquals, Some e, _) -> Some (id, mEquals, e) 
                                  | SynExprRecordField((LongIdentWithDots([id], _), _), mEquals, None, _) -> Some (id, mEquals, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
//# 4833 "src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13862 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4844 "src/fsharp/pars.fsy"
                            // silent recovery 
                            let m = rhs2 parseState 1 3
                            (fun _ -> arbExpr("braceBarExpr", m)) 
                   )
//# 4844 "src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4849 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let m = rhs2 parseState 1 1
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4849 "src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4854 "src/fsharp/pars.fsy"
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
//# 4854 "src/fsharp/pars.fsy"
                 : 'braceBarExprCore));
//# 13900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4859 "src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            let mArrow = Some (rhs parseState 3)
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 mArrow _4 
                   )
//# 4859 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4864 "src/fsharp/pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            let mArrow = Some (rhs parseState 3)
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 mArrow (arbExpr("anonLambdaExpr1", (rhs parseState 4))) 
                   )
//# 4864 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4869 "src/fsharp/pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            let mArrow = Some (rhs parseState 3)
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 mArrow _4 
                   )
//# 4869 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSequentialExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4874 "src/fsharp/pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            let mArrow = Some (rhs parseState 3)
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 mArrow _4) 
                   )
//# 4874 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4880 "src/fsharp/pars.fsy"
                            let mLambda = rhs2 parseState 1 3
                            reportParseErrorAt mLambda (FSComp.SR.parsMissingFunctionBody())
                            let mArrow = Some (rhs parseState 3)
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mLambda _2 mArrow (arbExpr("anonLambdaExpr2", mLambda.EndRange)) 
                   )
//# 4880 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4886 "src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            let mLambda = rhs2 parseState 1 3
                            let mArrow = Some (rhs parseState 3)
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mLambda _2 mArrow (arbExpr("anonLambdaExpr3", mLambda.EndRange))) 
                   )
//# 4886 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynPat list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4892 "src/fsharp/pars.fsy"
                            let mLambda = rhs2 parseState 1 2
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mLambda _2 None (arbExpr("anonLambdaExpr4", mLambda.EndRange))) 
                   )
//# 4892 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 13998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4896 "src/fsharp/pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] None (arbExpr("anonLambdaExpr5", (rhs parseState 2)))) 
                   )
//# 4896 "src/fsharp/pars.fsy"
                 : 'anonLambdaExpr));
//# 14008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4900 "src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, DebugPointAtBinding.NoneAtInvisible, mAll) 
                   )
//# 4900 "src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 14021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4905 "src/fsharp/pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, DebugPointAtBinding.NoneAtInvisible, mAll) 
                   )
//# 4905 "src/fsharp/pars.fsy"
                 : 'anonMatchingExpr));
//# 14034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4914 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4914 "src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 14045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4917 "src/fsharp/pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3, lhs parseState) 
                   )
//# 4917 "src/fsharp/pars.fsy"
                 : 'typeWithTypeConstraints));
//# 14057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4921 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4921 "src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 14068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4924 "src/fsharp/pars.fsy"
                            let ty, arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty, List.rev _3, lhs parseState), arity 
                   )
//# 4924 "src/fsharp/pars.fsy"
                 : 'topTypeWithTypeConstraints));
//# 14082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4930 "src/fsharp/pars.fsy"
                            None 
                   )
//# 4930 "src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14092 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4933 "src/fsharp/pars.fsy"
                            let ty, arity = _2 
                            let arity = (match arity with SynValInfo([], rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty, arity), rhs parseState 2)) 
                   )
//# 4933 "src/fsharp/pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
//# 14105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4939 "src/fsharp/pars.fsy"
                            let dty, dmdata= _1 
                            let rty, (SynValInfo(dmdatas, rmdata)) = _3 
                            SynType.Fun(dty, rty, lhs parseState), (SynValInfo(dmdata :: dmdatas, rmdata)) 
                   )
//# 4939 "src/fsharp/pars.fsy"
                 : 'topType));
//# 14119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4944 "src/fsharp/pars.fsy"
                            let ty, rmdata = _1 in ty, (SynValInfo([], (match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
//# 4944 "src/fsharp/pars.fsy"
                 : 'topType));
//# 14130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4948 "src/fsharp/pars.fsy"
                            let ty, mdata = _1 in let tys, mdatas = List.unzip _3 in (SynType.Tuple(false, List.map (fun ty -> (false, ty)) (ty :: tys), lhs parseState)), (mdata :: mdatas) 
                   )
//# 4948 "src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4951 "src/fsharp/pars.fsy"
                            let ty, mdata = _1 in ty, [mdata] 
                   )
//# 4951 "src/fsharp/pars.fsy"
                 : 'topTupleType));
//# 14153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4955 "src/fsharp/pars.fsy"
                            _1 :: _3 
                   )
//# 4955 "src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4958 "src/fsharp/pars.fsy"
                            [_1] 
                   )
//# 4958 "src/fsharp/pars.fsy"
                 : 'topTupleTypeElements));
//# 14176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4962 "src/fsharp/pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _4, SynArgInfo(_1, false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4962 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4967 "src/fsharp/pars.fsy"
                            _5, SynArgInfo(_1, true, Some _3) 
                   )
//# 4967 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4970 "src/fsharp/pars.fsy"
                            (_2, SynArgInfo(_1, false, None)) 
                   )
//# 4970 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4973 "src/fsharp/pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _3, SynArgInfo([], false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
//# 4973 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4978 "src/fsharp/pars.fsy"
                            _4, SynArgInfo([], true, Some _2) 
                   )
//# 4978 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14242 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4981 "src/fsharp/pars.fsy"
                            _1, SynArgInfo([], false, None) 
                   )
//# 4981 "src/fsharp/pars.fsy"
                 : 'topAppType));
//# 14253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4987 "src/fsharp/pars.fsy"
                            SynType.Fun(_1, _3, lhs parseState) 
                   )
//# 4987 "src/fsharp/pars.fsy"
                 : SynType));
//# 14265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4990 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 4990 "src/fsharp/pars.fsy"
                 : SynType));
//# 14276 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4993 "src/fsharp/pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
//# 4993 "src/fsharp/pars.fsy"
                 : SynType));
//# 14288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 4998 "src/fsharp/pars.fsy"
                           SynType.Tuple(false, (false, _1) :: _3, lhs parseState) 
                   )
//# 4998 "src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14300 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5001 "src/fsharp/pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)) :: _2, lhs parseState) 
                   )
//# 5001 "src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5005 "src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, _1) :: _3, lhs parseState) 
                   )
//# 5005 "src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5009 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 5009 "src/fsharp/pars.fsy"
                 : 'tupleType));
//# 14338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5013 "src/fsharp/pars.fsy"
                           (false, _1) :: _3 
                   )
//# 5013 "src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5016 "src/fsharp/pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true, _1) :: _3 
                   )
//# 5016 "src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5020 "src/fsharp/pars.fsy"
                           [(false, _1)] 
                   )
//# 5020 "src/fsharp/pars.fsy"
                 : 'tupleOrQuotTypeElements));
//# 14375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5024 "src/fsharp/pars.fsy"
                           SynType.LongIdent(_1) 
                   )
//# 5024 "src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5027 "src/fsharp/pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
//# 5027 "src/fsharp/pars.fsy"
                 : 'appTypeCon));
//# 14397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5031 "src/fsharp/pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
//# 5031 "src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14412 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5036 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 5036 "src/fsharp/pars.fsy"
                 : 'appTypeConPower));
//# 14423 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5040 "src/fsharp/pars.fsy"
                              SynType.Array(_2, _1, lhs parseState) 
                   )
//# 5040 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5043 "src/fsharp/pars.fsy"
                              SynType.Array(_3, _1, lhs parseState) 
                   )
//# 5043 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5047 "src/fsharp/pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
//# 5047 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5050 "src/fsharp/pars.fsy"
                             let args, commas = _2
                             if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                                 mlCompatError (FSComp.SR.mlCompatMultiPrefixTyparsNoLongerSupported()) (unionRanges (rhs parseState 1) _4.Range)
                             else
                                 mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range)
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 5050 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5058 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 5058 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14488 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5061 "src/fsharp/pars.fsy"
                              let tp, typ = _1, _3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [SynTypeConstraint.WhereTyparSubtypeOfType(tp, typ, m)], m)  
                   )
//# 5061 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5066 "src/fsharp/pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
//# 5066 "src/fsharp/pars.fsy"
                 : 'appType));
//# 14513 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5070 "src/fsharp/pars.fsy"
                             1 
                   )
//# 5070 "src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5073 "src/fsharp/pars.fsy"
                             2 
                   )
//# 5073 "src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5076 "src/fsharp/pars.fsy"
                             3 
                   )
//# 5076 "src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5079 "src/fsharp/pars.fsy"
                             4 
                   )
//# 5079 "src/fsharp/pars.fsy"
                 : 'arrayTypeSuffix));
//# 14553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5083 "src/fsharp/pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2) :: (List.rev commas) 
                   )
//# 5083 "src/fsharp/pars.fsy"
                 : 'appTypePrefixArguments));
//# 14566 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5087 "src/fsharp/pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 5087 "src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5091 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
//# 5091 "src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5096 "src/fsharp/pars.fsy"
                             [], [] 
                   )
//# 5096 "src/fsharp/pars.fsy"
                 : 'typeArgListElements));
//# 14603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5100 "src/fsharp/pars.fsy"
                           _1 
                   )
//# 5100 "src/fsharp/pars.fsy"
                 : 'powerType));
//# 14614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5103 "src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
//# 5103 "src/fsharp/pars.fsy"
                 : 'powerType));
//# 14629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5112 "src/fsharp/pars.fsy"
                             let args, commas = _2
                             if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                                 mlCompatError (FSComp.SR.mlCompatMultiPrefixTyparsNoLongerSupported()) (unionRanges (rhs parseState 1) _4.Range)
                             else
                                 mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range)
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
//# 5112 "src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5120 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 5120 "src/fsharp/pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
//# 14658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5124 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5124 "src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5127 "src/fsharp/pars.fsy"
                            let flds, isStruct = _1
                            let flds2 = 
                                flds |> List.choose (function 
                                  | (SynField([], false, Some id, ty, false, _xmldoc, None, _m)) -> Some (id, ty) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None)
                            SynType.AnonRecd (isStruct, flds2, rhs parseState 1) 
                   )
//# 5127 "src/fsharp/pars.fsy"
                 : 'atomTypeOrAnonRecdType));
//# 14685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5138 "src/fsharp/pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
//# 5138 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5141 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5141 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5144 "src/fsharp/pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
//# 5144 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5147 "src/fsharp/pars.fsy"
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5147 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14729 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5150 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen ())
                            SynType.Paren (_2, lhs parseState) 
                   )
//# 5150 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5154 "src/fsharp/pars.fsy"
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5154 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5157 "src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
//# 5157 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14769 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5161 "src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5161 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5165 "src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5165 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5169 "src/fsharp/pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
//# 5169 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5173 "src/fsharp/pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
//# 5173 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5176 "src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, SynStringKind.Regular, m), m) 
                   )
//# 5176 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5180 "src/fsharp/pars.fsy"
                             let e, _ = _2
                             SynType.StaticConstantExpr(e, lhs parseState) 
                   )
//# 5180 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5184 "src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false, lhs parseState) 
                   )
//# 5184 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5187 "src/fsharp/pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true, lhs parseState) 
                   )
//# 5187 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14861 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5190 "src/fsharp/pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
//# 5190 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5193 "src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
//# 5193 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5196 "src/fsharp/pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
//# 5196 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14896 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5199 "src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
//# 5199 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5203 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
//# 5203 "src/fsharp/pars.fsy"
                 : 'atomType));
//# 14923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5208 "src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(), rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5208 "src/fsharp/pars.fsy"
                 : range * range option * SynType list * range list * range));
//# 14937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5214 "src/fsharp/pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
//# 5214 "src/fsharp/pars.fsy"
                 : range * range option * SynType list * range list * range));
//# 14949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5219 "src/fsharp/pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), lhs parseState 
                   )
//# 5219 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 14965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5223 "src/fsharp/pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5223 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 14987 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5233 "src/fsharp/pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5233 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5239 "src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
//# 5239 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5242 "src/fsharp/pars.fsy"
                            let nextToken = rhs parseState 3
                            if not _3 then reportParseErrorAt nextToken (FSComp.SR.parsMissingTypeArgs())
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5242 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5248 "src/fsharp/pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
//# 5248 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5251 "src/fsharp/pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
//# 5251 "src/fsharp/pars.fsy"
                 : range * range option * bool     * SynType list * range list * range));
//# 15062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5261 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5261 "src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5264 "src/fsharp/pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
//# 5264 "src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5267 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
//# 5267 "src/fsharp/pars.fsy"
                 : 'typeArgActual));
//# 15099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5274 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5274 "src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5277 "src/fsharp/pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
//# 5277 "src/fsharp/pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
//# 15122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5282 "src/fsharp/pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("", m)], []))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
//# 5282 "src/fsharp/pars.fsy"
                 : 'dummyTypeArg));
//# 15136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5290 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 5290 "src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5293 "src/fsharp/pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
//# 5293 "src/fsharp/pars.fsy"
                 : 'measureTypeArg));
//# 15161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5297 "src/fsharp/pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
//# 5297 "src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5300 "src/fsharp/pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
//# 5300 "src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5303 "src/fsharp/pars.fsy"
                            _2 
                   )
//# 5303 "src/fsharp/pars.fsy"
                 : 'measureTypeAtom));
//# 15195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5307 "src/fsharp/pars.fsy"
                             _1 
                   )
//# 5307 "src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5310 "src/fsharp/pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
//# 5310 "src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5315 "src/fsharp/pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
//# 5315 "src/fsharp/pars.fsy"
                 : 'measureTypePower));
//# 15233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5320 "src/fsharp/pars.fsy"
                           [_1] 
                   )
//# 5320 "src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15244 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5323 "src/fsharp/pars.fsy"
                           _1 :: _2 
                   )
//# 5323 "src/fsharp/pars.fsy"
                 : 'measureTypeSeq));
//# 15256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5327 "src/fsharp/pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
//# 5327 "src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5330 "src/fsharp/pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
//# 5330 "src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5333 "src/fsharp/pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
//# 5333 "src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5338 "src/fsharp/pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
//# 5338 "src/fsharp/pars.fsy"
                 : 'measureTypeExpr));
//# 15307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5343 "src/fsharp/pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             SynTypar(id, TyparStaticReq.None, false) 
                   )
//# 5343 "src/fsharp/pars.fsy"
                 : SynTypar));
//# 15319 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5347 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5347 "src/fsharp/pars.fsy"
                 : SynTypar));
//# 15330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5351 "src/fsharp/pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            SynTypar(id, TyparStaticReq.HeadType, false) 
                   )
//# 5351 "src/fsharp/pars.fsy"
                 : 'staticallyKnownHeadTypar));
//# 15344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5357 "src/fsharp/pars.fsy"
                            ident(_1, rhs parseState 1) 
                   )
//# 5357 "src/fsharp/pars.fsy"
                 : Ident));
//# 15355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5362 "src/fsharp/pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName, rhs parseState 1)], []) 
                   )
//# 5362 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5365 "src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5365 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5368 "src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
//# 5368 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5371 "src/fsharp/pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
//# 5371 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5378 "src/fsharp/pars.fsy"
                             ident(CompileOpName _2, rhs parseState 2) 
                   )
//# 5378 "src/fsharp/pars.fsy"
                 : 'opName));
//# 15413 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5381 "src/fsharp/pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****", rhs parseState 2) 
                   )
//# 5381 "src/fsharp/pars.fsy"
                 : 'opName));
//# 15424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5384 "src/fsharp/pars.fsy"
                             ident(CompileOpName "*", rhs parseState 1) 
                   )
//# 5384 "src/fsharp/pars.fsy"
                 : 'opName));
//# 15434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5388 "src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text, rhs2 parseState 2 3) 
                   )
//# 5388 "src/fsharp/pars.fsy"
                 : 'opName));
//# 15447 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5393 "src/fsharp/pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text, rhs2 parseState 2 5) 
                   )
//# 5393 "src/fsharp/pars.fsy"
                 : 'opName));
//# 15460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5399 "src/fsharp/pars.fsy"
                            if not (IsValidPrefixOperatorDefinitionName _1) then 
                                reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                            _1 
                   )
//# 5399 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5404 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5404 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5407 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5407 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5410 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5410 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15506 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5413 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5413 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5416 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5416 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5419 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5419 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5422 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5422 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15550 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5425 "src/fsharp/pars.fsy"
                            "$" 
                   )
//# 5425 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5428 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5428 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5431 "src/fsharp/pars.fsy"
                            "-" 
                   )
//# 5431 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5434 "src/fsharp/pars.fsy"
                            "*" 
                   )
//# 5434 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5437 "src/fsharp/pars.fsy"
                            "=" 
                   )
//# 5437 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5440 "src/fsharp/pars.fsy"
                            "or" 
                   )
//# 5440 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15611 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5443 "src/fsharp/pars.fsy"
                            "<" 
                   )
//# 5443 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5446 "src/fsharp/pars.fsy"
                            ">" 
                   )
//# 5446 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5449 "src/fsharp/pars.fsy"
                            "?" 
                   )
//# 5449 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5452 "src/fsharp/pars.fsy"
                            "&" 
                   )
//# 5452 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5455 "src/fsharp/pars.fsy"
                            "&&" 
                   )
//# 5455 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15663 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5458 "src/fsharp/pars.fsy"
                            "||" 
                   )
//# 5458 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5461 "src/fsharp/pars.fsy"
                            ":=" 
                   )
//# 5461 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5464 "src/fsharp/pars.fsy"
                            if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                 deprecatedOperator (lhs parseState); 
                            _1 
                   )
//# 5464 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5469 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5469 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5472 "src/fsharp/pars.fsy"
                            ".." 
                   )
//# 5472 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15717 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5475 "src/fsharp/pars.fsy"
                            ".. .." 
                   )
//# 5475 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5478 "src/fsharp/pars.fsy"
                            if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                            fst _1 
                   )
//# 5478 "src/fsharp/pars.fsy"
                 : 'operatorName));
//# 15740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5484 "src/fsharp/pars.fsy"
                            if not (String.isLeadingIdentifierCharacterUpperCase _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                            if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                            _1 
                   )
//# 5484 "src/fsharp/pars.fsy"
                 : 'activePatternCaseName));
//# 15753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5491 "src/fsharp/pars.fsy"
                            [_2] 
                   )
//# 5491 "src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5494 "src/fsharp/pars.fsy"
                            _3 :: _1 
                   )
//# 5494 "src/fsharp/pars.fsy"
                 : 'activePatternCaseNames));
//# 15776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5499 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5499 "src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5502 "src/fsharp/pars.fsy"
                            _1 
                   )
//# 5502 "src/fsharp/pars.fsy"
                 : 'identOrOp));
//# 15798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5508 "src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5508 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5511 "src/fsharp/pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
//# 5511 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5514 "src/fsharp/pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
//# 5514 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5517 "src/fsharp/pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1], [rhs parseState 2]) 
                   )
//# 5517 "src/fsharp/pars.fsy"
                 : LongIdentWithDots));
//# 15843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5522 "src/fsharp/pars.fsy"
                                     _1 
                   )
//# 5522 "src/fsharp/pars.fsy"
                 : 'nameop));
//# 15854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5526 "src/fsharp/pars.fsy"
                            SynExpr.Ident(_1) 
                   )
//# 5526 "src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15865 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5529 "src/fsharp/pars.fsy"
                            let m = lhs parseState
                            let mLparen = mkFileIndexRange m.FileIndex m.Start (mkPos m.StartLine (m.StartColumn + 1))
                            let mRparen = mkFileIndexRange m.FileIndex (mkPos m.EndLine (m.EndColumn - 1)) m.End
                            SynExpr.Paren(SynExpr.Ident(_1), mLparen, Some mRparen, m) 
                   )
//# 5529 "src/fsharp/pars.fsy"
                 : 'identExpr));
//# 15879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5535 "src/fsharp/pars.fsy"
                                     
                   )
//# 5535 "src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5536 "src/fsharp/pars.fsy"
                                               
                   )
//# 5536 "src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5537 "src/fsharp/pars.fsy"
                                     
                   )
//# 5537 "src/fsharp/pars.fsy"
                 : 'topSeparator));
//# 15909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5540 "src/fsharp/pars.fsy"
                                        
                   )
//# 5540 "src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5541 "src/fsharp/pars.fsy"
                                                      
                   )
//# 5541 "src/fsharp/pars.fsy"
                 : 'topSeparators));
//# 15932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5544 "src/fsharp/pars.fsy"
                                                          
                   )
//# 5544 "src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5545 "src/fsharp/pars.fsy"
                                                          
                   )
//# 5545 "src/fsharp/pars.fsy"
                 : 'opt_topSeparators));
//# 15954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5549 "src/fsharp/pars.fsy"
                                     
                   )
//# 5549 "src/fsharp/pars.fsy"
                 : 'seps));
//# 15964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5550 "src/fsharp/pars.fsy"
                                     
                   )
//# 5550 "src/fsharp/pars.fsy"
                 : 'seps));
//# 15974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5551 "src/fsharp/pars.fsy"
                                               
                   )
//# 5551 "src/fsharp/pars.fsy"
                 : 'seps));
//# 15984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5552 "src/fsharp/pars.fsy"
                                               
                   )
//# 5552 "src/fsharp/pars.fsy"
                 : 'seps));
//# 15994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5557 "src/fsharp/pars.fsy"
                             
                   )
//# 5557 "src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5559 "src/fsharp/pars.fsy"
                               
                   )
//# 5559 "src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5561 "src/fsharp/pars.fsy"
                             
                   )
//# 5561 "src/fsharp/pars.fsy"
                 : 'declEnd));
//# 16024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5566 "src/fsharp/pars.fsy"
                            
                   )
//# 5566 "src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5568 "src/fsharp/pars.fsy"
                             
                   )
//# 5568 "src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5570 "src/fsharp/pars.fsy"
                            
                   )
//# 5570 "src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5572 "src/fsharp/pars.fsy"
                            
                   )
//# 5572 "src/fsharp/pars.fsy"
                 : 'opt_declEnd));
//# 16064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5575 "src/fsharp/pars.fsy"
                                       
                   )
//# 5575 "src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 16074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5576 "src/fsharp/pars.fsy"
                                       
                   )
//# 5576 "src/fsharp/pars.fsy"
                 : 'opt_ODECLEND));
//# 16084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5579 "src/fsharp/pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
//# 5579 "src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5580 "src/fsharp/pars.fsy"
                                        
                   )
//# 5580 "src/fsharp/pars.fsy"
                 : 'deprecated_opt_equals));
//# 16104 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5583 "src/fsharp/pars.fsy"
                                       let mEquals = rhs parseState 1 in (Some mEquals) 
                   )
//# 5583 "src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5584 "src/fsharp/pars.fsy"
                                       None 
                   )
//# 5584 "src/fsharp/pars.fsy"
                 : 'opt_equals));
//# 16124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5587 "src/fsharp/pars.fsy"
                                       
                   )
//# 5587 "src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5588 "src/fsharp/pars.fsy"
                                       
                   )
//# 5588 "src/fsharp/pars.fsy"
                 : 'opt_OBLOCKSEP));
//# 16144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5591 "src/fsharp/pars.fsy"
                                       
                   )
//# 5591 "src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5592 "src/fsharp/pars.fsy"
                                       
                   )
//# 5592 "src/fsharp/pars.fsy"
                 : 'opt_seps));
//# 16165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5595 "src/fsharp/pars.fsy"
                                       true 
                   )
//# 5595 "src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5596 "src/fsharp/pars.fsy"
                                       false 
                   )
//# 5596 "src/fsharp/pars.fsy"
                 : 'opt_rec));
//# 16185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5599 "src/fsharp/pars.fsy"
                                       
                   )
//# 5599 "src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5600 "src/fsharp/pars.fsy"
                                       
                   )
//# 5600 "src/fsharp/pars.fsy"
                 : 'opt_bar));
//# 16205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5603 "src/fsharp/pars.fsy"
                                       true 
                   )
//# 5603 "src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16215 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5604 "src/fsharp/pars.fsy"
                                       false 
                   )
//# 5604 "src/fsharp/pars.fsy"
                 : 'opt_inline));
//# 16225 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5607 "src/fsharp/pars.fsy"
                                       true 
                   )
//# 5607 "src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5608 "src/fsharp/pars.fsy"
                                       false 
                   )
//# 5608 "src/fsharp/pars.fsy"
                 : 'opt_mutable));
//# 16245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5612 "src/fsharp/pars.fsy"
                               
                   )
//# 5612 "src/fsharp/pars.fsy"
                 : 'doToken));
//# 16255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5613 "src/fsharp/pars.fsy"
                               
                   )
//# 5613 "src/fsharp/pars.fsy"
                 : 'doToken));
//# 16265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5616 "src/fsharp/pars.fsy"
                                
                   )
//# 5616 "src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5617 "src/fsharp/pars.fsy"
                                    
                   )
//# 5617 "src/fsharp/pars.fsy"
                 : 'doneDeclEnd));
//# 16285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5621 "src/fsharp/pars.fsy"
                           if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                               mlCompatError (FSComp.SR.mlCompatStructEndNoLongerSupported()) (lhs parseState)
                           else
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState)
                         
                   )
//# 5621 "src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5626 "src/fsharp/pars.fsy"
                                 
                   )
//# 5626 "src/fsharp/pars.fsy"
                 : 'structOrBegin));
//# 16309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5630 "src/fsharp/pars.fsy"
                           if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                               mlCompatError (FSComp.SR.mlCompatSigEndNoLongerSupported())(lhs parseState)
                           else
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState)
                         
                   )
//# 5630 "src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5635 "src/fsharp/pars.fsy"
                                 
                   )
//# 5635 "src/fsharp/pars.fsy"
                 : 'sigOrBegin));
//# 16333 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5639 "src/fsharp/pars.fsy"
                           if parseState.LexBuffer.SupportsFeature LanguageFeature.MLCompatRevisions then
                               mlCompatError (FSComp.SR.mlCompatSigColonNoLongerSupported())(lhs parseState)
                           else
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState)
                           None
                         
                   )
//# 5639 "src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5645 "src/fsharp/pars.fsy"
                                  let mEquals = rhs parseState 1 in Some mEquals 
                   )
//# 5645 "src/fsharp/pars.fsy"
                 : 'colonOrEquals));
//# 16358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5650 "src/fsharp/pars.fsy"
                            let (s, synStringKind, _) = _1
                            s, synStringKind 
                   )
//# 5650 "src/fsharp/pars.fsy"
                 : 'string));
//# 16370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5654 "src/fsharp/pars.fsy"
                                          _1 
                   )
//# 5654 "src/fsharp/pars.fsy"
                 : 'sourceIdentifier));
//# 16381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5658 "src/fsharp/pars.fsy"
                            (_1, None) 
                   )
//# 5658 "src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5661 "src/fsharp/pars.fsy"
                            (_1, Some _3) 
                   )
//# 5661 "src/fsharp/pars.fsy"
                 : 'interpolatedStringFill));
//# 16404 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5665 "src/fsharp/pars.fsy"
                            [ SynInterpolatedStringPart.String (fst _1, rhs parseState 1) ] 
                   )
//# 5665 "src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5668 "src/fsharp/pars.fsy"
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3 
                   )
//# 5668 "src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5671 "src/fsharp/pars.fsy"
                            
                            let rbrace = parseState.InputEndPosition 1
                            let lbrace = parseState.InputStartPosition 2
                            reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                            SynInterpolatedStringPart.String (fst _1, rhs parseState 1) :: _2 
                   )
//# 5671 "src/fsharp/pars.fsy"
                 : 'interpolatedStringParts));
//# 16444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringFill)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5682 "src/fsharp/pars.fsy"
                           let s, synStringKind, _ = _1
                           SynInterpolatedStringPart.String (s, rhs parseState 1) :: SynInterpolatedStringPart.FillExpr _2 :: _3, synStringKind 
                   )
//# 5682 "src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5686 "src/fsharp/pars.fsy"
                           let s, synStringKind, _ = _1
                           [ SynInterpolatedStringPart.String (s, rhs parseState 1) ], synStringKind 
                   )
//# 5686 "src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * SynStringKind * ParseHelpers.LexerContinuation)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interpolatedStringParts)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5690 "src/fsharp/pars.fsy"
                           
                           let s, synStringKind, _ = _1
                           let rbrace = parseState.InputEndPosition 1
                           let lbrace = parseState.InputStartPosition 2
                           reportParseErrorAt (mkSynRange rbrace lbrace) (FSComp.SR.parsEmptyFillInInterpolatedString())
                           SynInterpolatedStringPart.String (s, rhs parseState 1) :: _2, synStringKind 
                   )
//# 5690 "src/fsharp/pars.fsy"
                 : 'interpolatedString));
//# 16487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5698 "src/fsharp/pars.fsy"
                                                     
                   )
//# 5698 "src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5699 "src/fsharp/pars.fsy"
                                                     
                   )
//# 5699 "src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5700 "src/fsharp/pars.fsy"
                                         
                   )
//# 5700 "src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
//# 16517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5703 "src/fsharp/pars.fsy"
                                                 
                   )
//# 5703 "src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5704 "src/fsharp/pars.fsy"
                                         
                   )
//# 5704 "src/fsharp/pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
//# 16537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5708 "src/fsharp/pars.fsy"
                                                        
                   )
//# 5708 "src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5709 "src/fsharp/pars.fsy"
                                        
                   )
//# 5709 "src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5710 "src/fsharp/pars.fsy"
                                
                   )
//# 5710 "src/fsharp/pars.fsy"
                 : 'typeKeyword));
//# 16568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5714 "src/fsharp/pars.fsy"
                                                            
                   )
//# 5714 "src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5715 "src/fsharp/pars.fsy"
                                          
                   )
//# 5715 "src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16589 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5716 "src/fsharp/pars.fsy"
                                  
                   )
//# 5716 "src/fsharp/pars.fsy"
                 : 'moduleKeyword));
//# 16599 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5719 "src/fsharp/pars.fsy"
                                                     
                   )
//# 5719 "src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5720 "src/fsharp/pars.fsy"
                                          
                   )
//# 5720 "src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5721 "src/fsharp/pars.fsy"
                                  
                   )
//# 5721 "src/fsharp/pars.fsy"
                 : 'rbrace));
//# 16631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5724 "src/fsharp/pars.fsy"
                                      
                   )
//# 5724 "src/fsharp/pars.fsy"
                 : 'bar_rbrace));
//# 16641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5727 "src/fsharp/pars.fsy"
                                                     
                   )
//# 5727 "src/fsharp/pars.fsy"
                 : 'rparen));
//# 16652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5728 "src/fsharp/pars.fsy"
                                          
                   )
//# 5728 "src/fsharp/pars.fsy"
                 : 'rparen));
//# 16662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5729 "src/fsharp/pars.fsy"
                                  
                   )
//# 5729 "src/fsharp/pars.fsy"
                 : 'rparen));
//# 16672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5732 "src/fsharp/pars.fsy"
                                                           
                   )
//# 5732 "src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16683 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5733 "src/fsharp/pars.fsy"
                                             
                   )
//# 5733 "src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5734 "src/fsharp/pars.fsy"
                                     
                   )
//# 5734 "src/fsharp/pars.fsy"
                 : 'oblockend));
//# 16703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5737 "src/fsharp/pars.fsy"
                                            false 
                   )
//# 5737 "src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16713 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5738 "src/fsharp/pars.fsy"
                                              false 
                   )
//# 5738 "src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5739 "src/fsharp/pars.fsy"
                                              false 
                   )
//# 5739 "src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5740 "src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5740 "src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5741 "src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5741 "src/fsharp/pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
//# 16754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5744 "src/fsharp/pars.fsy"
                                            false 
                   )
//# 5744 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5745 "src/fsharp/pars.fsy"
                                              false 
                   )
//# 5745 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5746 "src/fsharp/pars.fsy"
                                              false 
                   )
//# 5746 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5747 "src/fsharp/pars.fsy"
                                              false 
                   )
//# 5747 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5748 "src/fsharp/pars.fsy"
                                                 false 
                   )
//# 5748 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
//# 16804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
//# 5749 "src/fsharp/pars.fsy"
                                   _1 
                   )
//# 5749 "src/fsharp/pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
//# 16816 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 205;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : ParsedScriptInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSequentialExprEOF lexer lexbuf : SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
