<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net5.0</TargetFramework>
    <RollForward>Major</RollForward>
    <OtherFlags>$(OtherFlags) --crossoptimize-</OtherFlags>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <LangVersion>preview</LangVersion>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Expecto" Version="5.1.2" />
    <PackageReference Include="AltCover" Version="5.3.675" />
    <PackageReference Include="Fable.JsonProvider" Version="1.0.1" />
    <PackageReference Include="FSharp.Core" Version="5.0.1" />
    <PackageReference Include="FSharp.Data.Adaptive" Version="1.2.3" />
    <PackageReference Include="FSharp.UMX" Version="1.0.0" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="../../src/Fable.Core/Fable.Core.fsproj" />
    <ProjectReference Include="../DllRef/Fable.Tests.DllRef.fsproj" />
    <ProjectReference Include="../../tests_external/Fable.Tests.External.fsproj" />
    <ProjectReference Include="../Project With Spaces/Fable.Tests.Spaces.fsproj" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Globs/*.fs" />
    <Compile Include="DllRef/Lib2.fs" />
    <Compile Include="Util/b.fs" />
    <Compile Include="Util/Thoth.Json.Decode.fs" />
    <Compile Include="Util/Aether.fs" />
    <Compile Include="Util/Util.fs" />
    <Compile Include="Util/Util2.fs" />
    <Compile Include="Util/Util3.fs" />
    <Compile Include="../../tests_external/Util3.fs" />
    <Compile Include="Util/UtilTests.fs" />
    <Compile Include="ApplicativeTests.fs" />
    <Compile Include="ArithmeticTests.fs" />
    <Compile Include="ArrayTests.fs" />
    <Compile Include="AsyncTests.fs" />
    <Compile Include="CharTests.fs" />
    <Compile Include="ComparisonTests.fs" />
    <Compile Include="ConvertTests.fs" />
    <Compile Include="CustomOperatorsTests.fs" />
    <Compile Include="DateTimeOffsetTests.fs" />
    <Compile Include="DateTimeTests.fs" />
    <Compile Include="DictionaryTests.fs" />
    <Compile Include="ElmishParserTests.fs" />
    <Compile Include="EnumerableTests.fs" />
    <Compile Include="EnumTests.fs" />
    <Compile Include="EventTests.fs" />
    <Compile Include="HashSetTests.fs" />
    <Compile Include="ImportTests.fs" />
    <Compile Include="JsInteropTests.fs" />
    <Compile Include="ListTests.fs" />
    <Compile Include="MapTests.fs" />
    <Compile Include="MiscTestsHelper.fs" />
    <Compile Include="MiscTests.fs" />
    <Compile Include="ObservableTests.fs" />
    <Compile Include="OptionTests.fs" />
    <Compile Include="RecordTypeTests.fs" />
    <Compile Include="ReflectionTests.fs" />
    <Compile Include="RegexTests.fs" />
    <Compile Include="ResizeArrayTests.fs" />
    <Compile Include="ResultTests.fs" />
    <Compile Include="SeqExpressionTests.fs" />
    <Compile Include="SeqTests.fs" />
    <Compile Include="SetTests.fs" />
    <Compile Include="StackTests.fs" />
    <Compile Include="StringTests.fs" />
    <Compile Include="SudokuTest.fs" />
    <Compile Include="TailCallTests.fs" />
    <Compile Include="TupleTypeTests.fs" />
    <Compile Include="TypeTests.fs" />
    <Compile Include="UnionTypeTests.fs" />
    <Compile Include="UriTests.fs" />
    <Compile Include="TimeSpanTests.fs" />
    <Compile Include="Main.fs" />
  </ItemGroup>


  <Target Name="Collect_Coverage" DependsOnTargets="Restore;BuildProject">
      <!-- Altcover fails if _Reports folder doesn't exist -->
    <MakeDir Directories="$(OutputPath)/_Reports" />
    <AltCover.Prepare InputDirectory="$(OutputPath)" SymbolDirectories="$(OutputPath)" OutputDirectory="$(OutputPath)/__Saved$([System.DateTime]::UtcNow.ToString().Replace(':','-').Replace('/','-').Replace(' ','+'))" XmlReport="../../build/coverage/$(TargetFramework)/coverage.xml" OpenCover="true" />
    <Exec Command="dotnet run -f $(TargetFramework) --no-build" ContinueOnError="WarnAndContinue" />
    <AltCover.Collect RecorderDirectory="$(OutputPath)" LcovReport="../../build/coverage/$(TargetFramework)/lcov.info" />
  </Target>
</Project>
